
STM32_st7567a_DHT22.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006c50  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000018b8  08006d10  08006d10  00007d10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080085c8  080085c8  0000a1f4  2**0
                  CONTENTS
  4 .ARM          00000000  080085c8  080085c8  0000a1f4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080085c8  080085c8  0000a1f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080085c8  080085c8  000095c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080085cc  080085cc  000095cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001f4  20000000  080085d0  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000005d8  200001f4  080087c4  0000a1f4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200007cc  080087c4  0000a7cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000a1f4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005daf  00000000  00000000  0000a21c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001716  00000000  00000000  0000ffcb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000006b0  00000000  00000000  000116e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  00010411  00000000  00000000  00011d98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00008b2a  00000000  00000000  000221a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0005cdf7  00000000  00000000  0002acd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  00087aca  2**0
                  CONTENTS, READONLY
 19 .debug_rnglists 000004df  00000000  00000000  00087b0d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000025f0  00000000  00000000  00087fec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  0008a5dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001f4 	.word	0x200001f4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006cf8 	.word	0x08006cf8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001f8 	.word	0x200001f8
 8000104:	08006cf8 	.word	0x08006cf8

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff69 	bl	8001314 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fea9 	bl	80011a4 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 ff5b 	bl	8001314 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ff51 	bl	8001314 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fed3 	bl	800122c <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 fec9 	bl	800122c <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_dadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	4657      	mov	r7, sl
 80004ac:	464e      	mov	r6, r9
 80004ae:	4645      	mov	r5, r8
 80004b0:	46de      	mov	lr, fp
 80004b2:	b5e0      	push	{r5, r6, r7, lr}
 80004b4:	b083      	sub	sp, #12
 80004b6:	9000      	str	r0, [sp, #0]
 80004b8:	9101      	str	r1, [sp, #4]
 80004ba:	030c      	lsls	r4, r1, #12
 80004bc:	004f      	lsls	r7, r1, #1
 80004be:	0fce      	lsrs	r6, r1, #31
 80004c0:	0a61      	lsrs	r1, r4, #9
 80004c2:	9c00      	ldr	r4, [sp, #0]
 80004c4:	031d      	lsls	r5, r3, #12
 80004c6:	0f64      	lsrs	r4, r4, #29
 80004c8:	430c      	orrs	r4, r1
 80004ca:	9900      	ldr	r1, [sp, #0]
 80004cc:	9200      	str	r2, [sp, #0]
 80004ce:	9301      	str	r3, [sp, #4]
 80004d0:	00c8      	lsls	r0, r1, #3
 80004d2:	0059      	lsls	r1, r3, #1
 80004d4:	0d4b      	lsrs	r3, r1, #21
 80004d6:	4699      	mov	r9, r3
 80004d8:	9a00      	ldr	r2, [sp, #0]
 80004da:	9b01      	ldr	r3, [sp, #4]
 80004dc:	0a6d      	lsrs	r5, r5, #9
 80004de:	0fd9      	lsrs	r1, r3, #31
 80004e0:	0f53      	lsrs	r3, r2, #29
 80004e2:	432b      	orrs	r3, r5
 80004e4:	469a      	mov	sl, r3
 80004e6:	9b00      	ldr	r3, [sp, #0]
 80004e8:	0d7f      	lsrs	r7, r7, #21
 80004ea:	00da      	lsls	r2, r3, #3
 80004ec:	4694      	mov	ip, r2
 80004ee:	464a      	mov	r2, r9
 80004f0:	46b0      	mov	r8, r6
 80004f2:	1aba      	subs	r2, r7, r2
 80004f4:	428e      	cmp	r6, r1
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x52>
 80004f8:	e0b0      	b.n	800065c <__aeabi_dadd+0x1b4>
 80004fa:	2a00      	cmp	r2, #0
 80004fc:	dc00      	bgt.n	8000500 <__aeabi_dadd+0x58>
 80004fe:	e078      	b.n	80005f2 <__aeabi_dadd+0x14a>
 8000500:	4649      	mov	r1, r9
 8000502:	2900      	cmp	r1, #0
 8000504:	d100      	bne.n	8000508 <__aeabi_dadd+0x60>
 8000506:	e0e9      	b.n	80006dc <__aeabi_dadd+0x234>
 8000508:	49c9      	ldr	r1, [pc, #804]	@ (8000830 <__aeabi_dadd+0x388>)
 800050a:	428f      	cmp	r7, r1
 800050c:	d100      	bne.n	8000510 <__aeabi_dadd+0x68>
 800050e:	e195      	b.n	800083c <__aeabi_dadd+0x394>
 8000510:	2501      	movs	r5, #1
 8000512:	2a38      	cmp	r2, #56	@ 0x38
 8000514:	dc16      	bgt.n	8000544 <__aeabi_dadd+0x9c>
 8000516:	2180      	movs	r1, #128	@ 0x80
 8000518:	4653      	mov	r3, sl
 800051a:	0409      	lsls	r1, r1, #16
 800051c:	430b      	orrs	r3, r1
 800051e:	469a      	mov	sl, r3
 8000520:	2a1f      	cmp	r2, #31
 8000522:	dd00      	ble.n	8000526 <__aeabi_dadd+0x7e>
 8000524:	e1e7      	b.n	80008f6 <__aeabi_dadd+0x44e>
 8000526:	2120      	movs	r1, #32
 8000528:	4655      	mov	r5, sl
 800052a:	1a8b      	subs	r3, r1, r2
 800052c:	4661      	mov	r1, ip
 800052e:	409d      	lsls	r5, r3
 8000530:	40d1      	lsrs	r1, r2
 8000532:	430d      	orrs	r5, r1
 8000534:	4661      	mov	r1, ip
 8000536:	4099      	lsls	r1, r3
 8000538:	1e4b      	subs	r3, r1, #1
 800053a:	4199      	sbcs	r1, r3
 800053c:	4653      	mov	r3, sl
 800053e:	40d3      	lsrs	r3, r2
 8000540:	430d      	orrs	r5, r1
 8000542:	1ae4      	subs	r4, r4, r3
 8000544:	1b45      	subs	r5, r0, r5
 8000546:	42a8      	cmp	r0, r5
 8000548:	4180      	sbcs	r0, r0
 800054a:	4240      	negs	r0, r0
 800054c:	1a24      	subs	r4, r4, r0
 800054e:	0223      	lsls	r3, r4, #8
 8000550:	d400      	bmi.n	8000554 <__aeabi_dadd+0xac>
 8000552:	e10f      	b.n	8000774 <__aeabi_dadd+0x2cc>
 8000554:	0264      	lsls	r4, r4, #9
 8000556:	0a64      	lsrs	r4, r4, #9
 8000558:	2c00      	cmp	r4, #0
 800055a:	d100      	bne.n	800055e <__aeabi_dadd+0xb6>
 800055c:	e139      	b.n	80007d2 <__aeabi_dadd+0x32a>
 800055e:	0020      	movs	r0, r4
 8000560:	f001 fe5e 	bl	8002220 <__clzsi2>
 8000564:	0003      	movs	r3, r0
 8000566:	3b08      	subs	r3, #8
 8000568:	2120      	movs	r1, #32
 800056a:	0028      	movs	r0, r5
 800056c:	1aca      	subs	r2, r1, r3
 800056e:	40d0      	lsrs	r0, r2
 8000570:	409c      	lsls	r4, r3
 8000572:	0002      	movs	r2, r0
 8000574:	409d      	lsls	r5, r3
 8000576:	4322      	orrs	r2, r4
 8000578:	429f      	cmp	r7, r3
 800057a:	dd00      	ble.n	800057e <__aeabi_dadd+0xd6>
 800057c:	e173      	b.n	8000866 <__aeabi_dadd+0x3be>
 800057e:	1bd8      	subs	r0, r3, r7
 8000580:	3001      	adds	r0, #1
 8000582:	1a09      	subs	r1, r1, r0
 8000584:	002c      	movs	r4, r5
 8000586:	408d      	lsls	r5, r1
 8000588:	40c4      	lsrs	r4, r0
 800058a:	1e6b      	subs	r3, r5, #1
 800058c:	419d      	sbcs	r5, r3
 800058e:	0013      	movs	r3, r2
 8000590:	40c2      	lsrs	r2, r0
 8000592:	408b      	lsls	r3, r1
 8000594:	4325      	orrs	r5, r4
 8000596:	2700      	movs	r7, #0
 8000598:	0014      	movs	r4, r2
 800059a:	431d      	orrs	r5, r3
 800059c:	076b      	lsls	r3, r5, #29
 800059e:	d009      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a0:	230f      	movs	r3, #15
 80005a2:	402b      	ands	r3, r5
 80005a4:	2b04      	cmp	r3, #4
 80005a6:	d005      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a8:	1d2b      	adds	r3, r5, #4
 80005aa:	42ab      	cmp	r3, r5
 80005ac:	41ad      	sbcs	r5, r5
 80005ae:	426d      	negs	r5, r5
 80005b0:	1964      	adds	r4, r4, r5
 80005b2:	001d      	movs	r5, r3
 80005b4:	0223      	lsls	r3, r4, #8
 80005b6:	d400      	bmi.n	80005ba <__aeabi_dadd+0x112>
 80005b8:	e12d      	b.n	8000816 <__aeabi_dadd+0x36e>
 80005ba:	4a9d      	ldr	r2, [pc, #628]	@ (8000830 <__aeabi_dadd+0x388>)
 80005bc:	3701      	adds	r7, #1
 80005be:	4297      	cmp	r7, r2
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x11c>
 80005c2:	e0d3      	b.n	800076c <__aeabi_dadd+0x2c4>
 80005c4:	4646      	mov	r6, r8
 80005c6:	499b      	ldr	r1, [pc, #620]	@ (8000834 <__aeabi_dadd+0x38c>)
 80005c8:	08ed      	lsrs	r5, r5, #3
 80005ca:	4021      	ands	r1, r4
 80005cc:	074a      	lsls	r2, r1, #29
 80005ce:	432a      	orrs	r2, r5
 80005d0:	057c      	lsls	r4, r7, #21
 80005d2:	024d      	lsls	r5, r1, #9
 80005d4:	0b2d      	lsrs	r5, r5, #12
 80005d6:	0d64      	lsrs	r4, r4, #21
 80005d8:	0524      	lsls	r4, r4, #20
 80005da:	432c      	orrs	r4, r5
 80005dc:	07f6      	lsls	r6, r6, #31
 80005de:	4334      	orrs	r4, r6
 80005e0:	0010      	movs	r0, r2
 80005e2:	0021      	movs	r1, r4
 80005e4:	b003      	add	sp, #12
 80005e6:	bcf0      	pop	{r4, r5, r6, r7}
 80005e8:	46bb      	mov	fp, r7
 80005ea:	46b2      	mov	sl, r6
 80005ec:	46a9      	mov	r9, r5
 80005ee:	46a0      	mov	r8, r4
 80005f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005f2:	2a00      	cmp	r2, #0
 80005f4:	d100      	bne.n	80005f8 <__aeabi_dadd+0x150>
 80005f6:	e084      	b.n	8000702 <__aeabi_dadd+0x25a>
 80005f8:	464a      	mov	r2, r9
 80005fa:	1bd2      	subs	r2, r2, r7
 80005fc:	2f00      	cmp	r7, #0
 80005fe:	d000      	beq.n	8000602 <__aeabi_dadd+0x15a>
 8000600:	e16d      	b.n	80008de <__aeabi_dadd+0x436>
 8000602:	0025      	movs	r5, r4
 8000604:	4305      	orrs	r5, r0
 8000606:	d100      	bne.n	800060a <__aeabi_dadd+0x162>
 8000608:	e127      	b.n	800085a <__aeabi_dadd+0x3b2>
 800060a:	1e56      	subs	r6, r2, #1
 800060c:	2a01      	cmp	r2, #1
 800060e:	d100      	bne.n	8000612 <__aeabi_dadd+0x16a>
 8000610:	e23b      	b.n	8000a8a <__aeabi_dadd+0x5e2>
 8000612:	4d87      	ldr	r5, [pc, #540]	@ (8000830 <__aeabi_dadd+0x388>)
 8000614:	42aa      	cmp	r2, r5
 8000616:	d100      	bne.n	800061a <__aeabi_dadd+0x172>
 8000618:	e26a      	b.n	8000af0 <__aeabi_dadd+0x648>
 800061a:	2501      	movs	r5, #1
 800061c:	2e38      	cmp	r6, #56	@ 0x38
 800061e:	dc12      	bgt.n	8000646 <__aeabi_dadd+0x19e>
 8000620:	0032      	movs	r2, r6
 8000622:	2a1f      	cmp	r2, #31
 8000624:	dd00      	ble.n	8000628 <__aeabi_dadd+0x180>
 8000626:	e1f8      	b.n	8000a1a <__aeabi_dadd+0x572>
 8000628:	2620      	movs	r6, #32
 800062a:	0025      	movs	r5, r4
 800062c:	1ab6      	subs	r6, r6, r2
 800062e:	0007      	movs	r7, r0
 8000630:	4653      	mov	r3, sl
 8000632:	40b0      	lsls	r0, r6
 8000634:	40d4      	lsrs	r4, r2
 8000636:	40b5      	lsls	r5, r6
 8000638:	40d7      	lsrs	r7, r2
 800063a:	1e46      	subs	r6, r0, #1
 800063c:	41b0      	sbcs	r0, r6
 800063e:	1b1b      	subs	r3, r3, r4
 8000640:	469a      	mov	sl, r3
 8000642:	433d      	orrs	r5, r7
 8000644:	4305      	orrs	r5, r0
 8000646:	4662      	mov	r2, ip
 8000648:	1b55      	subs	r5, r2, r5
 800064a:	45ac      	cmp	ip, r5
 800064c:	4192      	sbcs	r2, r2
 800064e:	4653      	mov	r3, sl
 8000650:	4252      	negs	r2, r2
 8000652:	000e      	movs	r6, r1
 8000654:	464f      	mov	r7, r9
 8000656:	4688      	mov	r8, r1
 8000658:	1a9c      	subs	r4, r3, r2
 800065a:	e778      	b.n	800054e <__aeabi_dadd+0xa6>
 800065c:	2a00      	cmp	r2, #0
 800065e:	dc00      	bgt.n	8000662 <__aeabi_dadd+0x1ba>
 8000660:	e08e      	b.n	8000780 <__aeabi_dadd+0x2d8>
 8000662:	4649      	mov	r1, r9
 8000664:	2900      	cmp	r1, #0
 8000666:	d175      	bne.n	8000754 <__aeabi_dadd+0x2ac>
 8000668:	4661      	mov	r1, ip
 800066a:	4653      	mov	r3, sl
 800066c:	4319      	orrs	r1, r3
 800066e:	d100      	bne.n	8000672 <__aeabi_dadd+0x1ca>
 8000670:	e0f6      	b.n	8000860 <__aeabi_dadd+0x3b8>
 8000672:	1e51      	subs	r1, r2, #1
 8000674:	2a01      	cmp	r2, #1
 8000676:	d100      	bne.n	800067a <__aeabi_dadd+0x1d2>
 8000678:	e191      	b.n	800099e <__aeabi_dadd+0x4f6>
 800067a:	4d6d      	ldr	r5, [pc, #436]	@ (8000830 <__aeabi_dadd+0x388>)
 800067c:	42aa      	cmp	r2, r5
 800067e:	d100      	bne.n	8000682 <__aeabi_dadd+0x1da>
 8000680:	e0dc      	b.n	800083c <__aeabi_dadd+0x394>
 8000682:	2501      	movs	r5, #1
 8000684:	2938      	cmp	r1, #56	@ 0x38
 8000686:	dc14      	bgt.n	80006b2 <__aeabi_dadd+0x20a>
 8000688:	000a      	movs	r2, r1
 800068a:	2a1f      	cmp	r2, #31
 800068c:	dd00      	ble.n	8000690 <__aeabi_dadd+0x1e8>
 800068e:	e1a2      	b.n	80009d6 <__aeabi_dadd+0x52e>
 8000690:	2120      	movs	r1, #32
 8000692:	4653      	mov	r3, sl
 8000694:	1a89      	subs	r1, r1, r2
 8000696:	408b      	lsls	r3, r1
 8000698:	001d      	movs	r5, r3
 800069a:	4663      	mov	r3, ip
 800069c:	40d3      	lsrs	r3, r2
 800069e:	431d      	orrs	r5, r3
 80006a0:	4663      	mov	r3, ip
 80006a2:	408b      	lsls	r3, r1
 80006a4:	0019      	movs	r1, r3
 80006a6:	1e4b      	subs	r3, r1, #1
 80006a8:	4199      	sbcs	r1, r3
 80006aa:	4653      	mov	r3, sl
 80006ac:	40d3      	lsrs	r3, r2
 80006ae:	430d      	orrs	r5, r1
 80006b0:	18e4      	adds	r4, r4, r3
 80006b2:	182d      	adds	r5, r5, r0
 80006b4:	4285      	cmp	r5, r0
 80006b6:	4180      	sbcs	r0, r0
 80006b8:	4240      	negs	r0, r0
 80006ba:	1824      	adds	r4, r4, r0
 80006bc:	0223      	lsls	r3, r4, #8
 80006be:	d559      	bpl.n	8000774 <__aeabi_dadd+0x2cc>
 80006c0:	4b5b      	ldr	r3, [pc, #364]	@ (8000830 <__aeabi_dadd+0x388>)
 80006c2:	3701      	adds	r7, #1
 80006c4:	429f      	cmp	r7, r3
 80006c6:	d051      	beq.n	800076c <__aeabi_dadd+0x2c4>
 80006c8:	2101      	movs	r1, #1
 80006ca:	4b5a      	ldr	r3, [pc, #360]	@ (8000834 <__aeabi_dadd+0x38c>)
 80006cc:	086a      	lsrs	r2, r5, #1
 80006ce:	401c      	ands	r4, r3
 80006d0:	4029      	ands	r1, r5
 80006d2:	430a      	orrs	r2, r1
 80006d4:	07e5      	lsls	r5, r4, #31
 80006d6:	4315      	orrs	r5, r2
 80006d8:	0864      	lsrs	r4, r4, #1
 80006da:	e75f      	b.n	800059c <__aeabi_dadd+0xf4>
 80006dc:	4661      	mov	r1, ip
 80006de:	4653      	mov	r3, sl
 80006e0:	4319      	orrs	r1, r3
 80006e2:	d100      	bne.n	80006e6 <__aeabi_dadd+0x23e>
 80006e4:	e0bc      	b.n	8000860 <__aeabi_dadd+0x3b8>
 80006e6:	1e51      	subs	r1, r2, #1
 80006e8:	2a01      	cmp	r2, #1
 80006ea:	d100      	bne.n	80006ee <__aeabi_dadd+0x246>
 80006ec:	e164      	b.n	80009b8 <__aeabi_dadd+0x510>
 80006ee:	4d50      	ldr	r5, [pc, #320]	@ (8000830 <__aeabi_dadd+0x388>)
 80006f0:	42aa      	cmp	r2, r5
 80006f2:	d100      	bne.n	80006f6 <__aeabi_dadd+0x24e>
 80006f4:	e16a      	b.n	80009cc <__aeabi_dadd+0x524>
 80006f6:	2501      	movs	r5, #1
 80006f8:	2938      	cmp	r1, #56	@ 0x38
 80006fa:	dd00      	ble.n	80006fe <__aeabi_dadd+0x256>
 80006fc:	e722      	b.n	8000544 <__aeabi_dadd+0x9c>
 80006fe:	000a      	movs	r2, r1
 8000700:	e70e      	b.n	8000520 <__aeabi_dadd+0x78>
 8000702:	4a4d      	ldr	r2, [pc, #308]	@ (8000838 <__aeabi_dadd+0x390>)
 8000704:	1c7d      	adds	r5, r7, #1
 8000706:	4215      	tst	r5, r2
 8000708:	d000      	beq.n	800070c <__aeabi_dadd+0x264>
 800070a:	e0d0      	b.n	80008ae <__aeabi_dadd+0x406>
 800070c:	0025      	movs	r5, r4
 800070e:	4662      	mov	r2, ip
 8000710:	4653      	mov	r3, sl
 8000712:	4305      	orrs	r5, r0
 8000714:	431a      	orrs	r2, r3
 8000716:	2f00      	cmp	r7, #0
 8000718:	d000      	beq.n	800071c <__aeabi_dadd+0x274>
 800071a:	e137      	b.n	800098c <__aeabi_dadd+0x4e4>
 800071c:	2d00      	cmp	r5, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_dadd+0x27a>
 8000720:	e1a8      	b.n	8000a74 <__aeabi_dadd+0x5cc>
 8000722:	2a00      	cmp	r2, #0
 8000724:	d100      	bne.n	8000728 <__aeabi_dadd+0x280>
 8000726:	e16a      	b.n	80009fe <__aeabi_dadd+0x556>
 8000728:	4663      	mov	r3, ip
 800072a:	1ac5      	subs	r5, r0, r3
 800072c:	4653      	mov	r3, sl
 800072e:	1ae2      	subs	r2, r4, r3
 8000730:	42a8      	cmp	r0, r5
 8000732:	419b      	sbcs	r3, r3
 8000734:	425b      	negs	r3, r3
 8000736:	1ad3      	subs	r3, r2, r3
 8000738:	021a      	lsls	r2, r3, #8
 800073a:	d400      	bmi.n	800073e <__aeabi_dadd+0x296>
 800073c:	e203      	b.n	8000b46 <__aeabi_dadd+0x69e>
 800073e:	4663      	mov	r3, ip
 8000740:	1a1d      	subs	r5, r3, r0
 8000742:	45ac      	cmp	ip, r5
 8000744:	4192      	sbcs	r2, r2
 8000746:	4653      	mov	r3, sl
 8000748:	4252      	negs	r2, r2
 800074a:	1b1c      	subs	r4, r3, r4
 800074c:	000e      	movs	r6, r1
 800074e:	4688      	mov	r8, r1
 8000750:	1aa4      	subs	r4, r4, r2
 8000752:	e723      	b.n	800059c <__aeabi_dadd+0xf4>
 8000754:	4936      	ldr	r1, [pc, #216]	@ (8000830 <__aeabi_dadd+0x388>)
 8000756:	428f      	cmp	r7, r1
 8000758:	d070      	beq.n	800083c <__aeabi_dadd+0x394>
 800075a:	2501      	movs	r5, #1
 800075c:	2a38      	cmp	r2, #56	@ 0x38
 800075e:	dca8      	bgt.n	80006b2 <__aeabi_dadd+0x20a>
 8000760:	2180      	movs	r1, #128	@ 0x80
 8000762:	4653      	mov	r3, sl
 8000764:	0409      	lsls	r1, r1, #16
 8000766:	430b      	orrs	r3, r1
 8000768:	469a      	mov	sl, r3
 800076a:	e78e      	b.n	800068a <__aeabi_dadd+0x1e2>
 800076c:	003c      	movs	r4, r7
 800076e:	2500      	movs	r5, #0
 8000770:	2200      	movs	r2, #0
 8000772:	e731      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000774:	2307      	movs	r3, #7
 8000776:	402b      	ands	r3, r5
 8000778:	2b00      	cmp	r3, #0
 800077a:	d000      	beq.n	800077e <__aeabi_dadd+0x2d6>
 800077c:	e710      	b.n	80005a0 <__aeabi_dadd+0xf8>
 800077e:	e093      	b.n	80008a8 <__aeabi_dadd+0x400>
 8000780:	2a00      	cmp	r2, #0
 8000782:	d074      	beq.n	800086e <__aeabi_dadd+0x3c6>
 8000784:	464a      	mov	r2, r9
 8000786:	1bd2      	subs	r2, r2, r7
 8000788:	2f00      	cmp	r7, #0
 800078a:	d100      	bne.n	800078e <__aeabi_dadd+0x2e6>
 800078c:	e0c7      	b.n	800091e <__aeabi_dadd+0x476>
 800078e:	4928      	ldr	r1, [pc, #160]	@ (8000830 <__aeabi_dadd+0x388>)
 8000790:	4589      	cmp	r9, r1
 8000792:	d100      	bne.n	8000796 <__aeabi_dadd+0x2ee>
 8000794:	e185      	b.n	8000aa2 <__aeabi_dadd+0x5fa>
 8000796:	2501      	movs	r5, #1
 8000798:	2a38      	cmp	r2, #56	@ 0x38
 800079a:	dc12      	bgt.n	80007c2 <__aeabi_dadd+0x31a>
 800079c:	2180      	movs	r1, #128	@ 0x80
 800079e:	0409      	lsls	r1, r1, #16
 80007a0:	430c      	orrs	r4, r1
 80007a2:	2a1f      	cmp	r2, #31
 80007a4:	dd00      	ble.n	80007a8 <__aeabi_dadd+0x300>
 80007a6:	e1ab      	b.n	8000b00 <__aeabi_dadd+0x658>
 80007a8:	2120      	movs	r1, #32
 80007aa:	0025      	movs	r5, r4
 80007ac:	1a89      	subs	r1, r1, r2
 80007ae:	0007      	movs	r7, r0
 80007b0:	4088      	lsls	r0, r1
 80007b2:	408d      	lsls	r5, r1
 80007b4:	40d7      	lsrs	r7, r2
 80007b6:	1e41      	subs	r1, r0, #1
 80007b8:	4188      	sbcs	r0, r1
 80007ba:	40d4      	lsrs	r4, r2
 80007bc:	433d      	orrs	r5, r7
 80007be:	4305      	orrs	r5, r0
 80007c0:	44a2      	add	sl, r4
 80007c2:	4465      	add	r5, ip
 80007c4:	4565      	cmp	r5, ip
 80007c6:	4192      	sbcs	r2, r2
 80007c8:	4252      	negs	r2, r2
 80007ca:	4452      	add	r2, sl
 80007cc:	0014      	movs	r4, r2
 80007ce:	464f      	mov	r7, r9
 80007d0:	e774      	b.n	80006bc <__aeabi_dadd+0x214>
 80007d2:	0028      	movs	r0, r5
 80007d4:	f001 fd24 	bl	8002220 <__clzsi2>
 80007d8:	0003      	movs	r3, r0
 80007da:	3318      	adds	r3, #24
 80007dc:	2b1f      	cmp	r3, #31
 80007de:	dc00      	bgt.n	80007e2 <__aeabi_dadd+0x33a>
 80007e0:	e6c2      	b.n	8000568 <__aeabi_dadd+0xc0>
 80007e2:	002a      	movs	r2, r5
 80007e4:	3808      	subs	r0, #8
 80007e6:	4082      	lsls	r2, r0
 80007e8:	429f      	cmp	r7, r3
 80007ea:	dd00      	ble.n	80007ee <__aeabi_dadd+0x346>
 80007ec:	e0a9      	b.n	8000942 <__aeabi_dadd+0x49a>
 80007ee:	1bdb      	subs	r3, r3, r7
 80007f0:	1c58      	adds	r0, r3, #1
 80007f2:	281f      	cmp	r0, #31
 80007f4:	dc00      	bgt.n	80007f8 <__aeabi_dadd+0x350>
 80007f6:	e1ac      	b.n	8000b52 <__aeabi_dadd+0x6aa>
 80007f8:	0015      	movs	r5, r2
 80007fa:	3b1f      	subs	r3, #31
 80007fc:	40dd      	lsrs	r5, r3
 80007fe:	2820      	cmp	r0, #32
 8000800:	d005      	beq.n	800080e <__aeabi_dadd+0x366>
 8000802:	2340      	movs	r3, #64	@ 0x40
 8000804:	1a1b      	subs	r3, r3, r0
 8000806:	409a      	lsls	r2, r3
 8000808:	1e53      	subs	r3, r2, #1
 800080a:	419a      	sbcs	r2, r3
 800080c:	4315      	orrs	r5, r2
 800080e:	2307      	movs	r3, #7
 8000810:	2700      	movs	r7, #0
 8000812:	402b      	ands	r3, r5
 8000814:	e7b0      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000816:	08ed      	lsrs	r5, r5, #3
 8000818:	4b05      	ldr	r3, [pc, #20]	@ (8000830 <__aeabi_dadd+0x388>)
 800081a:	0762      	lsls	r2, r4, #29
 800081c:	432a      	orrs	r2, r5
 800081e:	08e4      	lsrs	r4, r4, #3
 8000820:	429f      	cmp	r7, r3
 8000822:	d00f      	beq.n	8000844 <__aeabi_dadd+0x39c>
 8000824:	0324      	lsls	r4, r4, #12
 8000826:	0b25      	lsrs	r5, r4, #12
 8000828:	057c      	lsls	r4, r7, #21
 800082a:	0d64      	lsrs	r4, r4, #21
 800082c:	e6d4      	b.n	80005d8 <__aeabi_dadd+0x130>
 800082e:	46c0      	nop			@ (mov r8, r8)
 8000830:	000007ff 	.word	0x000007ff
 8000834:	ff7fffff 	.word	0xff7fffff
 8000838:	000007fe 	.word	0x000007fe
 800083c:	08c0      	lsrs	r0, r0, #3
 800083e:	0762      	lsls	r2, r4, #29
 8000840:	4302      	orrs	r2, r0
 8000842:	08e4      	lsrs	r4, r4, #3
 8000844:	0013      	movs	r3, r2
 8000846:	4323      	orrs	r3, r4
 8000848:	d100      	bne.n	800084c <__aeabi_dadd+0x3a4>
 800084a:	e186      	b.n	8000b5a <__aeabi_dadd+0x6b2>
 800084c:	2580      	movs	r5, #128	@ 0x80
 800084e:	032d      	lsls	r5, r5, #12
 8000850:	4325      	orrs	r5, r4
 8000852:	032d      	lsls	r5, r5, #12
 8000854:	4cc3      	ldr	r4, [pc, #780]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000856:	0b2d      	lsrs	r5, r5, #12
 8000858:	e6be      	b.n	80005d8 <__aeabi_dadd+0x130>
 800085a:	4660      	mov	r0, ip
 800085c:	4654      	mov	r4, sl
 800085e:	000e      	movs	r6, r1
 8000860:	0017      	movs	r7, r2
 8000862:	08c5      	lsrs	r5, r0, #3
 8000864:	e7d8      	b.n	8000818 <__aeabi_dadd+0x370>
 8000866:	4cc0      	ldr	r4, [pc, #768]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 8000868:	1aff      	subs	r7, r7, r3
 800086a:	4014      	ands	r4, r2
 800086c:	e696      	b.n	800059c <__aeabi_dadd+0xf4>
 800086e:	4abf      	ldr	r2, [pc, #764]	@ (8000b6c <__aeabi_dadd+0x6c4>)
 8000870:	1c79      	adds	r1, r7, #1
 8000872:	4211      	tst	r1, r2
 8000874:	d16b      	bne.n	800094e <__aeabi_dadd+0x4a6>
 8000876:	0022      	movs	r2, r4
 8000878:	4302      	orrs	r2, r0
 800087a:	2f00      	cmp	r7, #0
 800087c:	d000      	beq.n	8000880 <__aeabi_dadd+0x3d8>
 800087e:	e0db      	b.n	8000a38 <__aeabi_dadd+0x590>
 8000880:	2a00      	cmp	r2, #0
 8000882:	d100      	bne.n	8000886 <__aeabi_dadd+0x3de>
 8000884:	e12d      	b.n	8000ae2 <__aeabi_dadd+0x63a>
 8000886:	4662      	mov	r2, ip
 8000888:	4653      	mov	r3, sl
 800088a:	431a      	orrs	r2, r3
 800088c:	d100      	bne.n	8000890 <__aeabi_dadd+0x3e8>
 800088e:	e0b6      	b.n	80009fe <__aeabi_dadd+0x556>
 8000890:	4663      	mov	r3, ip
 8000892:	18c5      	adds	r5, r0, r3
 8000894:	4285      	cmp	r5, r0
 8000896:	4180      	sbcs	r0, r0
 8000898:	4454      	add	r4, sl
 800089a:	4240      	negs	r0, r0
 800089c:	1824      	adds	r4, r4, r0
 800089e:	0223      	lsls	r3, r4, #8
 80008a0:	d502      	bpl.n	80008a8 <__aeabi_dadd+0x400>
 80008a2:	000f      	movs	r7, r1
 80008a4:	4bb0      	ldr	r3, [pc, #704]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 80008a6:	401c      	ands	r4, r3
 80008a8:	003a      	movs	r2, r7
 80008aa:	0028      	movs	r0, r5
 80008ac:	e7d8      	b.n	8000860 <__aeabi_dadd+0x3b8>
 80008ae:	4662      	mov	r2, ip
 80008b0:	1a85      	subs	r5, r0, r2
 80008b2:	42a8      	cmp	r0, r5
 80008b4:	4192      	sbcs	r2, r2
 80008b6:	4653      	mov	r3, sl
 80008b8:	4252      	negs	r2, r2
 80008ba:	4691      	mov	r9, r2
 80008bc:	1ae3      	subs	r3, r4, r3
 80008be:	001a      	movs	r2, r3
 80008c0:	464b      	mov	r3, r9
 80008c2:	1ad2      	subs	r2, r2, r3
 80008c4:	0013      	movs	r3, r2
 80008c6:	4691      	mov	r9, r2
 80008c8:	021a      	lsls	r2, r3, #8
 80008ca:	d454      	bmi.n	8000976 <__aeabi_dadd+0x4ce>
 80008cc:	464a      	mov	r2, r9
 80008ce:	464c      	mov	r4, r9
 80008d0:	432a      	orrs	r2, r5
 80008d2:	d000      	beq.n	80008d6 <__aeabi_dadd+0x42e>
 80008d4:	e640      	b.n	8000558 <__aeabi_dadd+0xb0>
 80008d6:	2600      	movs	r6, #0
 80008d8:	2400      	movs	r4, #0
 80008da:	2500      	movs	r5, #0
 80008dc:	e67c      	b.n	80005d8 <__aeabi_dadd+0x130>
 80008de:	4da1      	ldr	r5, [pc, #644]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 80008e0:	45a9      	cmp	r9, r5
 80008e2:	d100      	bne.n	80008e6 <__aeabi_dadd+0x43e>
 80008e4:	e090      	b.n	8000a08 <__aeabi_dadd+0x560>
 80008e6:	2501      	movs	r5, #1
 80008e8:	2a38      	cmp	r2, #56	@ 0x38
 80008ea:	dd00      	ble.n	80008ee <__aeabi_dadd+0x446>
 80008ec:	e6ab      	b.n	8000646 <__aeabi_dadd+0x19e>
 80008ee:	2580      	movs	r5, #128	@ 0x80
 80008f0:	042d      	lsls	r5, r5, #16
 80008f2:	432c      	orrs	r4, r5
 80008f4:	e695      	b.n	8000622 <__aeabi_dadd+0x17a>
 80008f6:	0011      	movs	r1, r2
 80008f8:	4655      	mov	r5, sl
 80008fa:	3920      	subs	r1, #32
 80008fc:	40cd      	lsrs	r5, r1
 80008fe:	46a9      	mov	r9, r5
 8000900:	2a20      	cmp	r2, #32
 8000902:	d006      	beq.n	8000912 <__aeabi_dadd+0x46a>
 8000904:	2140      	movs	r1, #64	@ 0x40
 8000906:	4653      	mov	r3, sl
 8000908:	1a8a      	subs	r2, r1, r2
 800090a:	4093      	lsls	r3, r2
 800090c:	4662      	mov	r2, ip
 800090e:	431a      	orrs	r2, r3
 8000910:	4694      	mov	ip, r2
 8000912:	4665      	mov	r5, ip
 8000914:	1e6b      	subs	r3, r5, #1
 8000916:	419d      	sbcs	r5, r3
 8000918:	464b      	mov	r3, r9
 800091a:	431d      	orrs	r5, r3
 800091c:	e612      	b.n	8000544 <__aeabi_dadd+0x9c>
 800091e:	0021      	movs	r1, r4
 8000920:	4301      	orrs	r1, r0
 8000922:	d100      	bne.n	8000926 <__aeabi_dadd+0x47e>
 8000924:	e0c4      	b.n	8000ab0 <__aeabi_dadd+0x608>
 8000926:	1e51      	subs	r1, r2, #1
 8000928:	2a01      	cmp	r2, #1
 800092a:	d100      	bne.n	800092e <__aeabi_dadd+0x486>
 800092c:	e0fb      	b.n	8000b26 <__aeabi_dadd+0x67e>
 800092e:	4d8d      	ldr	r5, [pc, #564]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000930:	42aa      	cmp	r2, r5
 8000932:	d100      	bne.n	8000936 <__aeabi_dadd+0x48e>
 8000934:	e0b5      	b.n	8000aa2 <__aeabi_dadd+0x5fa>
 8000936:	2501      	movs	r5, #1
 8000938:	2938      	cmp	r1, #56	@ 0x38
 800093a:	dd00      	ble.n	800093e <__aeabi_dadd+0x496>
 800093c:	e741      	b.n	80007c2 <__aeabi_dadd+0x31a>
 800093e:	000a      	movs	r2, r1
 8000940:	e72f      	b.n	80007a2 <__aeabi_dadd+0x2fa>
 8000942:	4c89      	ldr	r4, [pc, #548]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 8000944:	1aff      	subs	r7, r7, r3
 8000946:	4014      	ands	r4, r2
 8000948:	0762      	lsls	r2, r4, #29
 800094a:	08e4      	lsrs	r4, r4, #3
 800094c:	e76a      	b.n	8000824 <__aeabi_dadd+0x37c>
 800094e:	4a85      	ldr	r2, [pc, #532]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000950:	4291      	cmp	r1, r2
 8000952:	d100      	bne.n	8000956 <__aeabi_dadd+0x4ae>
 8000954:	e0e3      	b.n	8000b1e <__aeabi_dadd+0x676>
 8000956:	4663      	mov	r3, ip
 8000958:	18c2      	adds	r2, r0, r3
 800095a:	4282      	cmp	r2, r0
 800095c:	4180      	sbcs	r0, r0
 800095e:	0023      	movs	r3, r4
 8000960:	4240      	negs	r0, r0
 8000962:	4453      	add	r3, sl
 8000964:	181b      	adds	r3, r3, r0
 8000966:	07dd      	lsls	r5, r3, #31
 8000968:	085c      	lsrs	r4, r3, #1
 800096a:	2307      	movs	r3, #7
 800096c:	0852      	lsrs	r2, r2, #1
 800096e:	4315      	orrs	r5, r2
 8000970:	000f      	movs	r7, r1
 8000972:	402b      	ands	r3, r5
 8000974:	e700      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000976:	4663      	mov	r3, ip
 8000978:	1a1d      	subs	r5, r3, r0
 800097a:	45ac      	cmp	ip, r5
 800097c:	4192      	sbcs	r2, r2
 800097e:	4653      	mov	r3, sl
 8000980:	4252      	negs	r2, r2
 8000982:	1b1c      	subs	r4, r3, r4
 8000984:	000e      	movs	r6, r1
 8000986:	4688      	mov	r8, r1
 8000988:	1aa4      	subs	r4, r4, r2
 800098a:	e5e5      	b.n	8000558 <__aeabi_dadd+0xb0>
 800098c:	2d00      	cmp	r5, #0
 800098e:	d000      	beq.n	8000992 <__aeabi_dadd+0x4ea>
 8000990:	e091      	b.n	8000ab6 <__aeabi_dadd+0x60e>
 8000992:	2a00      	cmp	r2, #0
 8000994:	d138      	bne.n	8000a08 <__aeabi_dadd+0x560>
 8000996:	2480      	movs	r4, #128	@ 0x80
 8000998:	2600      	movs	r6, #0
 800099a:	0324      	lsls	r4, r4, #12
 800099c:	e756      	b.n	800084c <__aeabi_dadd+0x3a4>
 800099e:	4663      	mov	r3, ip
 80009a0:	18c5      	adds	r5, r0, r3
 80009a2:	4285      	cmp	r5, r0
 80009a4:	4180      	sbcs	r0, r0
 80009a6:	4454      	add	r4, sl
 80009a8:	4240      	negs	r0, r0
 80009aa:	1824      	adds	r4, r4, r0
 80009ac:	2701      	movs	r7, #1
 80009ae:	0223      	lsls	r3, r4, #8
 80009b0:	d400      	bmi.n	80009b4 <__aeabi_dadd+0x50c>
 80009b2:	e6df      	b.n	8000774 <__aeabi_dadd+0x2cc>
 80009b4:	2702      	movs	r7, #2
 80009b6:	e687      	b.n	80006c8 <__aeabi_dadd+0x220>
 80009b8:	4663      	mov	r3, ip
 80009ba:	1ac5      	subs	r5, r0, r3
 80009bc:	42a8      	cmp	r0, r5
 80009be:	4180      	sbcs	r0, r0
 80009c0:	4653      	mov	r3, sl
 80009c2:	4240      	negs	r0, r0
 80009c4:	1ae4      	subs	r4, r4, r3
 80009c6:	2701      	movs	r7, #1
 80009c8:	1a24      	subs	r4, r4, r0
 80009ca:	e5c0      	b.n	800054e <__aeabi_dadd+0xa6>
 80009cc:	0762      	lsls	r2, r4, #29
 80009ce:	08c0      	lsrs	r0, r0, #3
 80009d0:	4302      	orrs	r2, r0
 80009d2:	08e4      	lsrs	r4, r4, #3
 80009d4:	e736      	b.n	8000844 <__aeabi_dadd+0x39c>
 80009d6:	0011      	movs	r1, r2
 80009d8:	4653      	mov	r3, sl
 80009da:	3920      	subs	r1, #32
 80009dc:	40cb      	lsrs	r3, r1
 80009de:	4699      	mov	r9, r3
 80009e0:	2a20      	cmp	r2, #32
 80009e2:	d006      	beq.n	80009f2 <__aeabi_dadd+0x54a>
 80009e4:	2140      	movs	r1, #64	@ 0x40
 80009e6:	4653      	mov	r3, sl
 80009e8:	1a8a      	subs	r2, r1, r2
 80009ea:	4093      	lsls	r3, r2
 80009ec:	4662      	mov	r2, ip
 80009ee:	431a      	orrs	r2, r3
 80009f0:	4694      	mov	ip, r2
 80009f2:	4665      	mov	r5, ip
 80009f4:	1e6b      	subs	r3, r5, #1
 80009f6:	419d      	sbcs	r5, r3
 80009f8:	464b      	mov	r3, r9
 80009fa:	431d      	orrs	r5, r3
 80009fc:	e659      	b.n	80006b2 <__aeabi_dadd+0x20a>
 80009fe:	0762      	lsls	r2, r4, #29
 8000a00:	08c0      	lsrs	r0, r0, #3
 8000a02:	4302      	orrs	r2, r0
 8000a04:	08e4      	lsrs	r4, r4, #3
 8000a06:	e70d      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000a08:	4653      	mov	r3, sl
 8000a0a:	075a      	lsls	r2, r3, #29
 8000a0c:	4663      	mov	r3, ip
 8000a0e:	08d8      	lsrs	r0, r3, #3
 8000a10:	4653      	mov	r3, sl
 8000a12:	000e      	movs	r6, r1
 8000a14:	4302      	orrs	r2, r0
 8000a16:	08dc      	lsrs	r4, r3, #3
 8000a18:	e714      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000a1a:	0015      	movs	r5, r2
 8000a1c:	0026      	movs	r6, r4
 8000a1e:	3d20      	subs	r5, #32
 8000a20:	40ee      	lsrs	r6, r5
 8000a22:	2a20      	cmp	r2, #32
 8000a24:	d003      	beq.n	8000a2e <__aeabi_dadd+0x586>
 8000a26:	2540      	movs	r5, #64	@ 0x40
 8000a28:	1aaa      	subs	r2, r5, r2
 8000a2a:	4094      	lsls	r4, r2
 8000a2c:	4320      	orrs	r0, r4
 8000a2e:	1e42      	subs	r2, r0, #1
 8000a30:	4190      	sbcs	r0, r2
 8000a32:	0005      	movs	r5, r0
 8000a34:	4335      	orrs	r5, r6
 8000a36:	e606      	b.n	8000646 <__aeabi_dadd+0x19e>
 8000a38:	2a00      	cmp	r2, #0
 8000a3a:	d07c      	beq.n	8000b36 <__aeabi_dadd+0x68e>
 8000a3c:	4662      	mov	r2, ip
 8000a3e:	4653      	mov	r3, sl
 8000a40:	08c0      	lsrs	r0, r0, #3
 8000a42:	431a      	orrs	r2, r3
 8000a44:	d100      	bne.n	8000a48 <__aeabi_dadd+0x5a0>
 8000a46:	e6fa      	b.n	800083e <__aeabi_dadd+0x396>
 8000a48:	0762      	lsls	r2, r4, #29
 8000a4a:	4310      	orrs	r0, r2
 8000a4c:	2280      	movs	r2, #128	@ 0x80
 8000a4e:	08e4      	lsrs	r4, r4, #3
 8000a50:	0312      	lsls	r2, r2, #12
 8000a52:	4214      	tst	r4, r2
 8000a54:	d008      	beq.n	8000a68 <__aeabi_dadd+0x5c0>
 8000a56:	08d9      	lsrs	r1, r3, #3
 8000a58:	4211      	tst	r1, r2
 8000a5a:	d105      	bne.n	8000a68 <__aeabi_dadd+0x5c0>
 8000a5c:	4663      	mov	r3, ip
 8000a5e:	08d8      	lsrs	r0, r3, #3
 8000a60:	4653      	mov	r3, sl
 8000a62:	000c      	movs	r4, r1
 8000a64:	075b      	lsls	r3, r3, #29
 8000a66:	4318      	orrs	r0, r3
 8000a68:	0f42      	lsrs	r2, r0, #29
 8000a6a:	00c0      	lsls	r0, r0, #3
 8000a6c:	08c0      	lsrs	r0, r0, #3
 8000a6e:	0752      	lsls	r2, r2, #29
 8000a70:	4302      	orrs	r2, r0
 8000a72:	e6e7      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000a74:	2a00      	cmp	r2, #0
 8000a76:	d100      	bne.n	8000a7a <__aeabi_dadd+0x5d2>
 8000a78:	e72d      	b.n	80008d6 <__aeabi_dadd+0x42e>
 8000a7a:	4663      	mov	r3, ip
 8000a7c:	08d8      	lsrs	r0, r3, #3
 8000a7e:	4653      	mov	r3, sl
 8000a80:	075a      	lsls	r2, r3, #29
 8000a82:	000e      	movs	r6, r1
 8000a84:	4302      	orrs	r2, r0
 8000a86:	08dc      	lsrs	r4, r3, #3
 8000a88:	e6cc      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000a8a:	4663      	mov	r3, ip
 8000a8c:	1a1d      	subs	r5, r3, r0
 8000a8e:	45ac      	cmp	ip, r5
 8000a90:	4192      	sbcs	r2, r2
 8000a92:	4653      	mov	r3, sl
 8000a94:	4252      	negs	r2, r2
 8000a96:	1b1c      	subs	r4, r3, r4
 8000a98:	000e      	movs	r6, r1
 8000a9a:	4688      	mov	r8, r1
 8000a9c:	1aa4      	subs	r4, r4, r2
 8000a9e:	3701      	adds	r7, #1
 8000aa0:	e555      	b.n	800054e <__aeabi_dadd+0xa6>
 8000aa2:	4663      	mov	r3, ip
 8000aa4:	08d9      	lsrs	r1, r3, #3
 8000aa6:	4653      	mov	r3, sl
 8000aa8:	075a      	lsls	r2, r3, #29
 8000aaa:	430a      	orrs	r2, r1
 8000aac:	08dc      	lsrs	r4, r3, #3
 8000aae:	e6c9      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000ab0:	4660      	mov	r0, ip
 8000ab2:	4654      	mov	r4, sl
 8000ab4:	e6d4      	b.n	8000860 <__aeabi_dadd+0x3b8>
 8000ab6:	08c0      	lsrs	r0, r0, #3
 8000ab8:	2a00      	cmp	r2, #0
 8000aba:	d100      	bne.n	8000abe <__aeabi_dadd+0x616>
 8000abc:	e6bf      	b.n	800083e <__aeabi_dadd+0x396>
 8000abe:	0762      	lsls	r2, r4, #29
 8000ac0:	4310      	orrs	r0, r2
 8000ac2:	2280      	movs	r2, #128	@ 0x80
 8000ac4:	08e4      	lsrs	r4, r4, #3
 8000ac6:	0312      	lsls	r2, r2, #12
 8000ac8:	4214      	tst	r4, r2
 8000aca:	d0cd      	beq.n	8000a68 <__aeabi_dadd+0x5c0>
 8000acc:	08dd      	lsrs	r5, r3, #3
 8000ace:	4215      	tst	r5, r2
 8000ad0:	d1ca      	bne.n	8000a68 <__aeabi_dadd+0x5c0>
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	08d8      	lsrs	r0, r3, #3
 8000ad6:	4653      	mov	r3, sl
 8000ad8:	075b      	lsls	r3, r3, #29
 8000ada:	000e      	movs	r6, r1
 8000adc:	002c      	movs	r4, r5
 8000ade:	4318      	orrs	r0, r3
 8000ae0:	e7c2      	b.n	8000a68 <__aeabi_dadd+0x5c0>
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	08d9      	lsrs	r1, r3, #3
 8000ae6:	4653      	mov	r3, sl
 8000ae8:	075a      	lsls	r2, r3, #29
 8000aea:	430a      	orrs	r2, r1
 8000aec:	08dc      	lsrs	r4, r3, #3
 8000aee:	e699      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000af0:	4663      	mov	r3, ip
 8000af2:	08d8      	lsrs	r0, r3, #3
 8000af4:	4653      	mov	r3, sl
 8000af6:	075a      	lsls	r2, r3, #29
 8000af8:	000e      	movs	r6, r1
 8000afa:	4302      	orrs	r2, r0
 8000afc:	08dc      	lsrs	r4, r3, #3
 8000afe:	e6a1      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000b00:	0011      	movs	r1, r2
 8000b02:	0027      	movs	r7, r4
 8000b04:	3920      	subs	r1, #32
 8000b06:	40cf      	lsrs	r7, r1
 8000b08:	2a20      	cmp	r2, #32
 8000b0a:	d003      	beq.n	8000b14 <__aeabi_dadd+0x66c>
 8000b0c:	2140      	movs	r1, #64	@ 0x40
 8000b0e:	1a8a      	subs	r2, r1, r2
 8000b10:	4094      	lsls	r4, r2
 8000b12:	4320      	orrs	r0, r4
 8000b14:	1e42      	subs	r2, r0, #1
 8000b16:	4190      	sbcs	r0, r2
 8000b18:	0005      	movs	r5, r0
 8000b1a:	433d      	orrs	r5, r7
 8000b1c:	e651      	b.n	80007c2 <__aeabi_dadd+0x31a>
 8000b1e:	000c      	movs	r4, r1
 8000b20:	2500      	movs	r5, #0
 8000b22:	2200      	movs	r2, #0
 8000b24:	e558      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000b26:	4460      	add	r0, ip
 8000b28:	4560      	cmp	r0, ip
 8000b2a:	4192      	sbcs	r2, r2
 8000b2c:	4454      	add	r4, sl
 8000b2e:	4252      	negs	r2, r2
 8000b30:	0005      	movs	r5, r0
 8000b32:	18a4      	adds	r4, r4, r2
 8000b34:	e73a      	b.n	80009ac <__aeabi_dadd+0x504>
 8000b36:	4653      	mov	r3, sl
 8000b38:	075a      	lsls	r2, r3, #29
 8000b3a:	4663      	mov	r3, ip
 8000b3c:	08d9      	lsrs	r1, r3, #3
 8000b3e:	4653      	mov	r3, sl
 8000b40:	430a      	orrs	r2, r1
 8000b42:	08dc      	lsrs	r4, r3, #3
 8000b44:	e67e      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000b46:	001a      	movs	r2, r3
 8000b48:	001c      	movs	r4, r3
 8000b4a:	432a      	orrs	r2, r5
 8000b4c:	d000      	beq.n	8000b50 <__aeabi_dadd+0x6a8>
 8000b4e:	e6ab      	b.n	80008a8 <__aeabi_dadd+0x400>
 8000b50:	e6c1      	b.n	80008d6 <__aeabi_dadd+0x42e>
 8000b52:	2120      	movs	r1, #32
 8000b54:	2500      	movs	r5, #0
 8000b56:	1a09      	subs	r1, r1, r0
 8000b58:	e519      	b.n	800058e <__aeabi_dadd+0xe6>
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	2500      	movs	r5, #0
 8000b5e:	4c01      	ldr	r4, [pc, #4]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000b60:	e53a      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000b62:	46c0      	nop			@ (mov r8, r8)
 8000b64:	000007ff 	.word	0x000007ff
 8000b68:	ff7fffff 	.word	0xff7fffff
 8000b6c:	000007fe 	.word	0x000007fe

08000b70 <__aeabi_ddiv>:
 8000b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b72:	46de      	mov	lr, fp
 8000b74:	4645      	mov	r5, r8
 8000b76:	4657      	mov	r7, sl
 8000b78:	464e      	mov	r6, r9
 8000b7a:	b5e0      	push	{r5, r6, r7, lr}
 8000b7c:	b087      	sub	sp, #28
 8000b7e:	9200      	str	r2, [sp, #0]
 8000b80:	9301      	str	r3, [sp, #4]
 8000b82:	030b      	lsls	r3, r1, #12
 8000b84:	0b1b      	lsrs	r3, r3, #12
 8000b86:	469b      	mov	fp, r3
 8000b88:	0fca      	lsrs	r2, r1, #31
 8000b8a:	004b      	lsls	r3, r1, #1
 8000b8c:	0004      	movs	r4, r0
 8000b8e:	4680      	mov	r8, r0
 8000b90:	0d5b      	lsrs	r3, r3, #21
 8000b92:	9202      	str	r2, [sp, #8]
 8000b94:	d100      	bne.n	8000b98 <__aeabi_ddiv+0x28>
 8000b96:	e16a      	b.n	8000e6e <__aeabi_ddiv+0x2fe>
 8000b98:	4ad4      	ldr	r2, [pc, #848]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000b9a:	4293      	cmp	r3, r2
 8000b9c:	d100      	bne.n	8000ba0 <__aeabi_ddiv+0x30>
 8000b9e:	e18c      	b.n	8000eba <__aeabi_ddiv+0x34a>
 8000ba0:	4659      	mov	r1, fp
 8000ba2:	0f42      	lsrs	r2, r0, #29
 8000ba4:	00c9      	lsls	r1, r1, #3
 8000ba6:	430a      	orrs	r2, r1
 8000ba8:	2180      	movs	r1, #128	@ 0x80
 8000baa:	0409      	lsls	r1, r1, #16
 8000bac:	4311      	orrs	r1, r2
 8000bae:	00c2      	lsls	r2, r0, #3
 8000bb0:	4690      	mov	r8, r2
 8000bb2:	4acf      	ldr	r2, [pc, #828]	@ (8000ef0 <__aeabi_ddiv+0x380>)
 8000bb4:	4689      	mov	r9, r1
 8000bb6:	4692      	mov	sl, r2
 8000bb8:	449a      	add	sl, r3
 8000bba:	2300      	movs	r3, #0
 8000bbc:	2400      	movs	r4, #0
 8000bbe:	9303      	str	r3, [sp, #12]
 8000bc0:	9e00      	ldr	r6, [sp, #0]
 8000bc2:	9f01      	ldr	r7, [sp, #4]
 8000bc4:	033b      	lsls	r3, r7, #12
 8000bc6:	0b1b      	lsrs	r3, r3, #12
 8000bc8:	469b      	mov	fp, r3
 8000bca:	007b      	lsls	r3, r7, #1
 8000bcc:	0030      	movs	r0, r6
 8000bce:	0d5b      	lsrs	r3, r3, #21
 8000bd0:	0ffd      	lsrs	r5, r7, #31
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d100      	bne.n	8000bd8 <__aeabi_ddiv+0x68>
 8000bd6:	e128      	b.n	8000e2a <__aeabi_ddiv+0x2ba>
 8000bd8:	4ac4      	ldr	r2, [pc, #784]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000bda:	4293      	cmp	r3, r2
 8000bdc:	d100      	bne.n	8000be0 <__aeabi_ddiv+0x70>
 8000bde:	e177      	b.n	8000ed0 <__aeabi_ddiv+0x360>
 8000be0:	4659      	mov	r1, fp
 8000be2:	0f72      	lsrs	r2, r6, #29
 8000be4:	00c9      	lsls	r1, r1, #3
 8000be6:	430a      	orrs	r2, r1
 8000be8:	2180      	movs	r1, #128	@ 0x80
 8000bea:	0409      	lsls	r1, r1, #16
 8000bec:	4311      	orrs	r1, r2
 8000bee:	468b      	mov	fp, r1
 8000bf0:	49bf      	ldr	r1, [pc, #764]	@ (8000ef0 <__aeabi_ddiv+0x380>)
 8000bf2:	00f2      	lsls	r2, r6, #3
 8000bf4:	468c      	mov	ip, r1
 8000bf6:	4651      	mov	r1, sl
 8000bf8:	4463      	add	r3, ip
 8000bfa:	1acb      	subs	r3, r1, r3
 8000bfc:	469a      	mov	sl, r3
 8000bfe:	2300      	movs	r3, #0
 8000c00:	9e02      	ldr	r6, [sp, #8]
 8000c02:	406e      	eors	r6, r5
 8000c04:	2c0f      	cmp	r4, #15
 8000c06:	d827      	bhi.n	8000c58 <__aeabi_ddiv+0xe8>
 8000c08:	49ba      	ldr	r1, [pc, #744]	@ (8000ef4 <__aeabi_ddiv+0x384>)
 8000c0a:	00a4      	lsls	r4, r4, #2
 8000c0c:	5909      	ldr	r1, [r1, r4]
 8000c0e:	468f      	mov	pc, r1
 8000c10:	46cb      	mov	fp, r9
 8000c12:	4642      	mov	r2, r8
 8000c14:	9e02      	ldr	r6, [sp, #8]
 8000c16:	9b03      	ldr	r3, [sp, #12]
 8000c18:	2b02      	cmp	r3, #2
 8000c1a:	d016      	beq.n	8000c4a <__aeabi_ddiv+0xda>
 8000c1c:	2b03      	cmp	r3, #3
 8000c1e:	d100      	bne.n	8000c22 <__aeabi_ddiv+0xb2>
 8000c20:	e2a6      	b.n	8001170 <__aeabi_ddiv+0x600>
 8000c22:	2b01      	cmp	r3, #1
 8000c24:	d000      	beq.n	8000c28 <__aeabi_ddiv+0xb8>
 8000c26:	e0df      	b.n	8000de8 <__aeabi_ddiv+0x278>
 8000c28:	2200      	movs	r2, #0
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	2400      	movs	r4, #0
 8000c2e:	4690      	mov	r8, r2
 8000c30:	051b      	lsls	r3, r3, #20
 8000c32:	4323      	orrs	r3, r4
 8000c34:	07f6      	lsls	r6, r6, #31
 8000c36:	4333      	orrs	r3, r6
 8000c38:	4640      	mov	r0, r8
 8000c3a:	0019      	movs	r1, r3
 8000c3c:	b007      	add	sp, #28
 8000c3e:	bcf0      	pop	{r4, r5, r6, r7}
 8000c40:	46bb      	mov	fp, r7
 8000c42:	46b2      	mov	sl, r6
 8000c44:	46a9      	mov	r9, r5
 8000c46:	46a0      	mov	r8, r4
 8000c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	2400      	movs	r4, #0
 8000c4e:	4690      	mov	r8, r2
 8000c50:	4ba6      	ldr	r3, [pc, #664]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000c52:	e7ed      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000c54:	002e      	movs	r6, r5
 8000c56:	e7df      	b.n	8000c18 <__aeabi_ddiv+0xa8>
 8000c58:	45cb      	cmp	fp, r9
 8000c5a:	d200      	bcs.n	8000c5e <__aeabi_ddiv+0xee>
 8000c5c:	e1d4      	b.n	8001008 <__aeabi_ddiv+0x498>
 8000c5e:	d100      	bne.n	8000c62 <__aeabi_ddiv+0xf2>
 8000c60:	e1cf      	b.n	8001002 <__aeabi_ddiv+0x492>
 8000c62:	2301      	movs	r3, #1
 8000c64:	425b      	negs	r3, r3
 8000c66:	469c      	mov	ip, r3
 8000c68:	4644      	mov	r4, r8
 8000c6a:	4648      	mov	r0, r9
 8000c6c:	2700      	movs	r7, #0
 8000c6e:	44e2      	add	sl, ip
 8000c70:	465b      	mov	r3, fp
 8000c72:	0e15      	lsrs	r5, r2, #24
 8000c74:	021b      	lsls	r3, r3, #8
 8000c76:	431d      	orrs	r5, r3
 8000c78:	0c19      	lsrs	r1, r3, #16
 8000c7a:	042b      	lsls	r3, r5, #16
 8000c7c:	0212      	lsls	r2, r2, #8
 8000c7e:	9500      	str	r5, [sp, #0]
 8000c80:	0c1d      	lsrs	r5, r3, #16
 8000c82:	4691      	mov	r9, r2
 8000c84:	9102      	str	r1, [sp, #8]
 8000c86:	9503      	str	r5, [sp, #12]
 8000c88:	f7ff fae0 	bl	800024c <__aeabi_uidivmod>
 8000c8c:	0002      	movs	r2, r0
 8000c8e:	436a      	muls	r2, r5
 8000c90:	040b      	lsls	r3, r1, #16
 8000c92:	0c21      	lsrs	r1, r4, #16
 8000c94:	4680      	mov	r8, r0
 8000c96:	4319      	orrs	r1, r3
 8000c98:	428a      	cmp	r2, r1
 8000c9a:	d909      	bls.n	8000cb0 <__aeabi_ddiv+0x140>
 8000c9c:	9d00      	ldr	r5, [sp, #0]
 8000c9e:	2301      	movs	r3, #1
 8000ca0:	46ac      	mov	ip, r5
 8000ca2:	425b      	negs	r3, r3
 8000ca4:	4461      	add	r1, ip
 8000ca6:	469c      	mov	ip, r3
 8000ca8:	44e0      	add	r8, ip
 8000caa:	428d      	cmp	r5, r1
 8000cac:	d800      	bhi.n	8000cb0 <__aeabi_ddiv+0x140>
 8000cae:	e1fb      	b.n	80010a8 <__aeabi_ddiv+0x538>
 8000cb0:	1a88      	subs	r0, r1, r2
 8000cb2:	9902      	ldr	r1, [sp, #8]
 8000cb4:	f7ff faca 	bl	800024c <__aeabi_uidivmod>
 8000cb8:	9a03      	ldr	r2, [sp, #12]
 8000cba:	0424      	lsls	r4, r4, #16
 8000cbc:	4342      	muls	r2, r0
 8000cbe:	0409      	lsls	r1, r1, #16
 8000cc0:	0c24      	lsrs	r4, r4, #16
 8000cc2:	0003      	movs	r3, r0
 8000cc4:	430c      	orrs	r4, r1
 8000cc6:	42a2      	cmp	r2, r4
 8000cc8:	d906      	bls.n	8000cd8 <__aeabi_ddiv+0x168>
 8000cca:	9900      	ldr	r1, [sp, #0]
 8000ccc:	3b01      	subs	r3, #1
 8000cce:	468c      	mov	ip, r1
 8000cd0:	4464      	add	r4, ip
 8000cd2:	42a1      	cmp	r1, r4
 8000cd4:	d800      	bhi.n	8000cd8 <__aeabi_ddiv+0x168>
 8000cd6:	e1e1      	b.n	800109c <__aeabi_ddiv+0x52c>
 8000cd8:	1aa0      	subs	r0, r4, r2
 8000cda:	4642      	mov	r2, r8
 8000cdc:	0412      	lsls	r2, r2, #16
 8000cde:	431a      	orrs	r2, r3
 8000ce0:	4693      	mov	fp, r2
 8000ce2:	464b      	mov	r3, r9
 8000ce4:	4659      	mov	r1, fp
 8000ce6:	0c1b      	lsrs	r3, r3, #16
 8000ce8:	001d      	movs	r5, r3
 8000cea:	9304      	str	r3, [sp, #16]
 8000cec:	040b      	lsls	r3, r1, #16
 8000cee:	4649      	mov	r1, r9
 8000cf0:	0409      	lsls	r1, r1, #16
 8000cf2:	0c09      	lsrs	r1, r1, #16
 8000cf4:	000c      	movs	r4, r1
 8000cf6:	0c1b      	lsrs	r3, r3, #16
 8000cf8:	435c      	muls	r4, r3
 8000cfa:	0c12      	lsrs	r2, r2, #16
 8000cfc:	436b      	muls	r3, r5
 8000cfe:	4688      	mov	r8, r1
 8000d00:	4351      	muls	r1, r2
 8000d02:	436a      	muls	r2, r5
 8000d04:	0c25      	lsrs	r5, r4, #16
 8000d06:	46ac      	mov	ip, r5
 8000d08:	185b      	adds	r3, r3, r1
 8000d0a:	4463      	add	r3, ip
 8000d0c:	4299      	cmp	r1, r3
 8000d0e:	d903      	bls.n	8000d18 <__aeabi_ddiv+0x1a8>
 8000d10:	2180      	movs	r1, #128	@ 0x80
 8000d12:	0249      	lsls	r1, r1, #9
 8000d14:	468c      	mov	ip, r1
 8000d16:	4462      	add	r2, ip
 8000d18:	0c19      	lsrs	r1, r3, #16
 8000d1a:	0424      	lsls	r4, r4, #16
 8000d1c:	041b      	lsls	r3, r3, #16
 8000d1e:	0c24      	lsrs	r4, r4, #16
 8000d20:	188a      	adds	r2, r1, r2
 8000d22:	191c      	adds	r4, r3, r4
 8000d24:	4290      	cmp	r0, r2
 8000d26:	d302      	bcc.n	8000d2e <__aeabi_ddiv+0x1be>
 8000d28:	d116      	bne.n	8000d58 <__aeabi_ddiv+0x1e8>
 8000d2a:	42a7      	cmp	r7, r4
 8000d2c:	d214      	bcs.n	8000d58 <__aeabi_ddiv+0x1e8>
 8000d2e:	465b      	mov	r3, fp
 8000d30:	9d00      	ldr	r5, [sp, #0]
 8000d32:	3b01      	subs	r3, #1
 8000d34:	444f      	add	r7, r9
 8000d36:	9305      	str	r3, [sp, #20]
 8000d38:	454f      	cmp	r7, r9
 8000d3a:	419b      	sbcs	r3, r3
 8000d3c:	46ac      	mov	ip, r5
 8000d3e:	425b      	negs	r3, r3
 8000d40:	4463      	add	r3, ip
 8000d42:	18c0      	adds	r0, r0, r3
 8000d44:	4285      	cmp	r5, r0
 8000d46:	d300      	bcc.n	8000d4a <__aeabi_ddiv+0x1da>
 8000d48:	e1a1      	b.n	800108e <__aeabi_ddiv+0x51e>
 8000d4a:	4282      	cmp	r2, r0
 8000d4c:	d900      	bls.n	8000d50 <__aeabi_ddiv+0x1e0>
 8000d4e:	e1f6      	b.n	800113e <__aeabi_ddiv+0x5ce>
 8000d50:	d100      	bne.n	8000d54 <__aeabi_ddiv+0x1e4>
 8000d52:	e1f1      	b.n	8001138 <__aeabi_ddiv+0x5c8>
 8000d54:	9b05      	ldr	r3, [sp, #20]
 8000d56:	469b      	mov	fp, r3
 8000d58:	1b3c      	subs	r4, r7, r4
 8000d5a:	42a7      	cmp	r7, r4
 8000d5c:	41bf      	sbcs	r7, r7
 8000d5e:	9d00      	ldr	r5, [sp, #0]
 8000d60:	1a80      	subs	r0, r0, r2
 8000d62:	427f      	negs	r7, r7
 8000d64:	1bc0      	subs	r0, r0, r7
 8000d66:	4285      	cmp	r5, r0
 8000d68:	d100      	bne.n	8000d6c <__aeabi_ddiv+0x1fc>
 8000d6a:	e1d0      	b.n	800110e <__aeabi_ddiv+0x59e>
 8000d6c:	9902      	ldr	r1, [sp, #8]
 8000d6e:	f7ff fa6d 	bl	800024c <__aeabi_uidivmod>
 8000d72:	9a03      	ldr	r2, [sp, #12]
 8000d74:	040b      	lsls	r3, r1, #16
 8000d76:	4342      	muls	r2, r0
 8000d78:	0c21      	lsrs	r1, r4, #16
 8000d7a:	0007      	movs	r7, r0
 8000d7c:	4319      	orrs	r1, r3
 8000d7e:	428a      	cmp	r2, r1
 8000d80:	d900      	bls.n	8000d84 <__aeabi_ddiv+0x214>
 8000d82:	e178      	b.n	8001076 <__aeabi_ddiv+0x506>
 8000d84:	1a88      	subs	r0, r1, r2
 8000d86:	9902      	ldr	r1, [sp, #8]
 8000d88:	f7ff fa60 	bl	800024c <__aeabi_uidivmod>
 8000d8c:	9a03      	ldr	r2, [sp, #12]
 8000d8e:	0424      	lsls	r4, r4, #16
 8000d90:	4342      	muls	r2, r0
 8000d92:	0409      	lsls	r1, r1, #16
 8000d94:	0c24      	lsrs	r4, r4, #16
 8000d96:	0003      	movs	r3, r0
 8000d98:	430c      	orrs	r4, r1
 8000d9a:	42a2      	cmp	r2, r4
 8000d9c:	d900      	bls.n	8000da0 <__aeabi_ddiv+0x230>
 8000d9e:	e15d      	b.n	800105c <__aeabi_ddiv+0x4ec>
 8000da0:	4641      	mov	r1, r8
 8000da2:	1aa4      	subs	r4, r4, r2
 8000da4:	043a      	lsls	r2, r7, #16
 8000da6:	431a      	orrs	r2, r3
 8000da8:	9d04      	ldr	r5, [sp, #16]
 8000daa:	0413      	lsls	r3, r2, #16
 8000dac:	0c1b      	lsrs	r3, r3, #16
 8000dae:	4359      	muls	r1, r3
 8000db0:	4647      	mov	r7, r8
 8000db2:	436b      	muls	r3, r5
 8000db4:	469c      	mov	ip, r3
 8000db6:	0c10      	lsrs	r0, r2, #16
 8000db8:	4347      	muls	r7, r0
 8000dba:	0c0b      	lsrs	r3, r1, #16
 8000dbc:	44bc      	add	ip, r7
 8000dbe:	4463      	add	r3, ip
 8000dc0:	4368      	muls	r0, r5
 8000dc2:	429f      	cmp	r7, r3
 8000dc4:	d903      	bls.n	8000dce <__aeabi_ddiv+0x25e>
 8000dc6:	2580      	movs	r5, #128	@ 0x80
 8000dc8:	026d      	lsls	r5, r5, #9
 8000dca:	46ac      	mov	ip, r5
 8000dcc:	4460      	add	r0, ip
 8000dce:	0c1f      	lsrs	r7, r3, #16
 8000dd0:	0409      	lsls	r1, r1, #16
 8000dd2:	041b      	lsls	r3, r3, #16
 8000dd4:	0c09      	lsrs	r1, r1, #16
 8000dd6:	183f      	adds	r7, r7, r0
 8000dd8:	185b      	adds	r3, r3, r1
 8000dda:	42bc      	cmp	r4, r7
 8000ddc:	d200      	bcs.n	8000de0 <__aeabi_ddiv+0x270>
 8000dde:	e102      	b.n	8000fe6 <__aeabi_ddiv+0x476>
 8000de0:	d100      	bne.n	8000de4 <__aeabi_ddiv+0x274>
 8000de2:	e0fd      	b.n	8000fe0 <__aeabi_ddiv+0x470>
 8000de4:	2301      	movs	r3, #1
 8000de6:	431a      	orrs	r2, r3
 8000de8:	4b43      	ldr	r3, [pc, #268]	@ (8000ef8 <__aeabi_ddiv+0x388>)
 8000dea:	4453      	add	r3, sl
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	dc00      	bgt.n	8000df2 <__aeabi_ddiv+0x282>
 8000df0:	e0ae      	b.n	8000f50 <__aeabi_ddiv+0x3e0>
 8000df2:	0751      	lsls	r1, r2, #29
 8000df4:	d000      	beq.n	8000df8 <__aeabi_ddiv+0x288>
 8000df6:	e198      	b.n	800112a <__aeabi_ddiv+0x5ba>
 8000df8:	4659      	mov	r1, fp
 8000dfa:	01c9      	lsls	r1, r1, #7
 8000dfc:	d506      	bpl.n	8000e0c <__aeabi_ddiv+0x29c>
 8000dfe:	4659      	mov	r1, fp
 8000e00:	4b3e      	ldr	r3, [pc, #248]	@ (8000efc <__aeabi_ddiv+0x38c>)
 8000e02:	4019      	ands	r1, r3
 8000e04:	2380      	movs	r3, #128	@ 0x80
 8000e06:	468b      	mov	fp, r1
 8000e08:	00db      	lsls	r3, r3, #3
 8000e0a:	4453      	add	r3, sl
 8000e0c:	493c      	ldr	r1, [pc, #240]	@ (8000f00 <__aeabi_ddiv+0x390>)
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	dd00      	ble.n	8000e14 <__aeabi_ddiv+0x2a4>
 8000e12:	e71a      	b.n	8000c4a <__aeabi_ddiv+0xda>
 8000e14:	4659      	mov	r1, fp
 8000e16:	08d2      	lsrs	r2, r2, #3
 8000e18:	0749      	lsls	r1, r1, #29
 8000e1a:	4311      	orrs	r1, r2
 8000e1c:	465a      	mov	r2, fp
 8000e1e:	055b      	lsls	r3, r3, #21
 8000e20:	0254      	lsls	r4, r2, #9
 8000e22:	4688      	mov	r8, r1
 8000e24:	0b24      	lsrs	r4, r4, #12
 8000e26:	0d5b      	lsrs	r3, r3, #21
 8000e28:	e702      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000e2a:	465a      	mov	r2, fp
 8000e2c:	9b00      	ldr	r3, [sp, #0]
 8000e2e:	431a      	orrs	r2, r3
 8000e30:	d100      	bne.n	8000e34 <__aeabi_ddiv+0x2c4>
 8000e32:	e07e      	b.n	8000f32 <__aeabi_ddiv+0x3c2>
 8000e34:	465b      	mov	r3, fp
 8000e36:	2b00      	cmp	r3, #0
 8000e38:	d100      	bne.n	8000e3c <__aeabi_ddiv+0x2cc>
 8000e3a:	e100      	b.n	800103e <__aeabi_ddiv+0x4ce>
 8000e3c:	4658      	mov	r0, fp
 8000e3e:	f001 f9ef 	bl	8002220 <__clzsi2>
 8000e42:	0002      	movs	r2, r0
 8000e44:	0003      	movs	r3, r0
 8000e46:	3a0b      	subs	r2, #11
 8000e48:	271d      	movs	r7, #29
 8000e4a:	9e00      	ldr	r6, [sp, #0]
 8000e4c:	1aba      	subs	r2, r7, r2
 8000e4e:	0019      	movs	r1, r3
 8000e50:	4658      	mov	r0, fp
 8000e52:	40d6      	lsrs	r6, r2
 8000e54:	3908      	subs	r1, #8
 8000e56:	4088      	lsls	r0, r1
 8000e58:	0032      	movs	r2, r6
 8000e5a:	4302      	orrs	r2, r0
 8000e5c:	4693      	mov	fp, r2
 8000e5e:	9a00      	ldr	r2, [sp, #0]
 8000e60:	408a      	lsls	r2, r1
 8000e62:	4928      	ldr	r1, [pc, #160]	@ (8000f04 <__aeabi_ddiv+0x394>)
 8000e64:	4453      	add	r3, sl
 8000e66:	468a      	mov	sl, r1
 8000e68:	449a      	add	sl, r3
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	e6c8      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000e6e:	465b      	mov	r3, fp
 8000e70:	4303      	orrs	r3, r0
 8000e72:	4699      	mov	r9, r3
 8000e74:	d056      	beq.n	8000f24 <__aeabi_ddiv+0x3b4>
 8000e76:	465b      	mov	r3, fp
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d100      	bne.n	8000e7e <__aeabi_ddiv+0x30e>
 8000e7c:	e0cd      	b.n	800101a <__aeabi_ddiv+0x4aa>
 8000e7e:	4658      	mov	r0, fp
 8000e80:	f001 f9ce 	bl	8002220 <__clzsi2>
 8000e84:	230b      	movs	r3, #11
 8000e86:	425b      	negs	r3, r3
 8000e88:	469c      	mov	ip, r3
 8000e8a:	0002      	movs	r2, r0
 8000e8c:	4484      	add	ip, r0
 8000e8e:	4666      	mov	r6, ip
 8000e90:	231d      	movs	r3, #29
 8000e92:	1b9b      	subs	r3, r3, r6
 8000e94:	0026      	movs	r6, r4
 8000e96:	0011      	movs	r1, r2
 8000e98:	4658      	mov	r0, fp
 8000e9a:	40de      	lsrs	r6, r3
 8000e9c:	3908      	subs	r1, #8
 8000e9e:	4088      	lsls	r0, r1
 8000ea0:	0033      	movs	r3, r6
 8000ea2:	4303      	orrs	r3, r0
 8000ea4:	4699      	mov	r9, r3
 8000ea6:	0023      	movs	r3, r4
 8000ea8:	408b      	lsls	r3, r1
 8000eaa:	4698      	mov	r8, r3
 8000eac:	4b16      	ldr	r3, [pc, #88]	@ (8000f08 <__aeabi_ddiv+0x398>)
 8000eae:	2400      	movs	r4, #0
 8000eb0:	1a9b      	subs	r3, r3, r2
 8000eb2:	469a      	mov	sl, r3
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	9303      	str	r3, [sp, #12]
 8000eb8:	e682      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000eba:	465a      	mov	r2, fp
 8000ebc:	4302      	orrs	r2, r0
 8000ebe:	4691      	mov	r9, r2
 8000ec0:	d12a      	bne.n	8000f18 <__aeabi_ddiv+0x3a8>
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	469a      	mov	sl, r3
 8000ec6:	2302      	movs	r3, #2
 8000ec8:	4690      	mov	r8, r2
 8000eca:	2408      	movs	r4, #8
 8000ecc:	9303      	str	r3, [sp, #12]
 8000ece:	e677      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000ed0:	465a      	mov	r2, fp
 8000ed2:	9b00      	ldr	r3, [sp, #0]
 8000ed4:	431a      	orrs	r2, r3
 8000ed6:	4b0d      	ldr	r3, [pc, #52]	@ (8000f0c <__aeabi_ddiv+0x39c>)
 8000ed8:	469c      	mov	ip, r3
 8000eda:	44e2      	add	sl, ip
 8000edc:	2a00      	cmp	r2, #0
 8000ede:	d117      	bne.n	8000f10 <__aeabi_ddiv+0x3a0>
 8000ee0:	2302      	movs	r3, #2
 8000ee2:	431c      	orrs	r4, r3
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	469b      	mov	fp, r3
 8000ee8:	3302      	adds	r3, #2
 8000eea:	e689      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000eec:	000007ff 	.word	0x000007ff
 8000ef0:	fffffc01 	.word	0xfffffc01
 8000ef4:	08006d1c 	.word	0x08006d1c
 8000ef8:	000003ff 	.word	0x000003ff
 8000efc:	feffffff 	.word	0xfeffffff
 8000f00:	000007fe 	.word	0x000007fe
 8000f04:	000003f3 	.word	0x000003f3
 8000f08:	fffffc0d 	.word	0xfffffc0d
 8000f0c:	fffff801 	.word	0xfffff801
 8000f10:	2303      	movs	r3, #3
 8000f12:	0032      	movs	r2, r6
 8000f14:	431c      	orrs	r4, r3
 8000f16:	e673      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000f18:	469a      	mov	sl, r3
 8000f1a:	2303      	movs	r3, #3
 8000f1c:	46d9      	mov	r9, fp
 8000f1e:	240c      	movs	r4, #12
 8000f20:	9303      	str	r3, [sp, #12]
 8000f22:	e64d      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000f24:	2300      	movs	r3, #0
 8000f26:	4698      	mov	r8, r3
 8000f28:	469a      	mov	sl, r3
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	2404      	movs	r4, #4
 8000f2e:	9303      	str	r3, [sp, #12]
 8000f30:	e646      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000f32:	2301      	movs	r3, #1
 8000f34:	431c      	orrs	r4, r3
 8000f36:	2300      	movs	r3, #0
 8000f38:	469b      	mov	fp, r3
 8000f3a:	3301      	adds	r3, #1
 8000f3c:	e660      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000f3e:	2300      	movs	r3, #0
 8000f40:	2480      	movs	r4, #128	@ 0x80
 8000f42:	4698      	mov	r8, r3
 8000f44:	2600      	movs	r6, #0
 8000f46:	4b92      	ldr	r3, [pc, #584]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000f48:	0324      	lsls	r4, r4, #12
 8000f4a:	e671      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000f4c:	2201      	movs	r2, #1
 8000f4e:	4252      	negs	r2, r2
 8000f50:	2101      	movs	r1, #1
 8000f52:	1ac9      	subs	r1, r1, r3
 8000f54:	2938      	cmp	r1, #56	@ 0x38
 8000f56:	dd00      	ble.n	8000f5a <__aeabi_ddiv+0x3ea>
 8000f58:	e666      	b.n	8000c28 <__aeabi_ddiv+0xb8>
 8000f5a:	291f      	cmp	r1, #31
 8000f5c:	dc00      	bgt.n	8000f60 <__aeabi_ddiv+0x3f0>
 8000f5e:	e0ab      	b.n	80010b8 <__aeabi_ddiv+0x548>
 8000f60:	201f      	movs	r0, #31
 8000f62:	4240      	negs	r0, r0
 8000f64:	1ac3      	subs	r3, r0, r3
 8000f66:	4658      	mov	r0, fp
 8000f68:	40d8      	lsrs	r0, r3
 8000f6a:	0003      	movs	r3, r0
 8000f6c:	2920      	cmp	r1, #32
 8000f6e:	d004      	beq.n	8000f7a <__aeabi_ddiv+0x40a>
 8000f70:	4658      	mov	r0, fp
 8000f72:	4988      	ldr	r1, [pc, #544]	@ (8001194 <__aeabi_ddiv+0x624>)
 8000f74:	4451      	add	r1, sl
 8000f76:	4088      	lsls	r0, r1
 8000f78:	4302      	orrs	r2, r0
 8000f7a:	1e51      	subs	r1, r2, #1
 8000f7c:	418a      	sbcs	r2, r1
 8000f7e:	431a      	orrs	r2, r3
 8000f80:	2307      	movs	r3, #7
 8000f82:	0019      	movs	r1, r3
 8000f84:	2400      	movs	r4, #0
 8000f86:	4011      	ands	r1, r2
 8000f88:	4213      	tst	r3, r2
 8000f8a:	d00c      	beq.n	8000fa6 <__aeabi_ddiv+0x436>
 8000f8c:	230f      	movs	r3, #15
 8000f8e:	4013      	ands	r3, r2
 8000f90:	2b04      	cmp	r3, #4
 8000f92:	d100      	bne.n	8000f96 <__aeabi_ddiv+0x426>
 8000f94:	e0f9      	b.n	800118a <__aeabi_ddiv+0x61a>
 8000f96:	1d11      	adds	r1, r2, #4
 8000f98:	4291      	cmp	r1, r2
 8000f9a:	419b      	sbcs	r3, r3
 8000f9c:	000a      	movs	r2, r1
 8000f9e:	425b      	negs	r3, r3
 8000fa0:	0759      	lsls	r1, r3, #29
 8000fa2:	025b      	lsls	r3, r3, #9
 8000fa4:	0b1c      	lsrs	r4, r3, #12
 8000fa6:	08d2      	lsrs	r2, r2, #3
 8000fa8:	430a      	orrs	r2, r1
 8000faa:	4690      	mov	r8, r2
 8000fac:	2300      	movs	r3, #0
 8000fae:	e63f      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fb0:	2480      	movs	r4, #128	@ 0x80
 8000fb2:	464b      	mov	r3, r9
 8000fb4:	0324      	lsls	r4, r4, #12
 8000fb6:	4223      	tst	r3, r4
 8000fb8:	d009      	beq.n	8000fce <__aeabi_ddiv+0x45e>
 8000fba:	465b      	mov	r3, fp
 8000fbc:	4223      	tst	r3, r4
 8000fbe:	d106      	bne.n	8000fce <__aeabi_ddiv+0x45e>
 8000fc0:	431c      	orrs	r4, r3
 8000fc2:	0324      	lsls	r4, r4, #12
 8000fc4:	002e      	movs	r6, r5
 8000fc6:	4690      	mov	r8, r2
 8000fc8:	4b71      	ldr	r3, [pc, #452]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000fca:	0b24      	lsrs	r4, r4, #12
 8000fcc:	e630      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fce:	2480      	movs	r4, #128	@ 0x80
 8000fd0:	464b      	mov	r3, r9
 8000fd2:	0324      	lsls	r4, r4, #12
 8000fd4:	431c      	orrs	r4, r3
 8000fd6:	0324      	lsls	r4, r4, #12
 8000fd8:	9e02      	ldr	r6, [sp, #8]
 8000fda:	4b6d      	ldr	r3, [pc, #436]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000fdc:	0b24      	lsrs	r4, r4, #12
 8000fde:	e627      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d100      	bne.n	8000fe6 <__aeabi_ddiv+0x476>
 8000fe4:	e700      	b.n	8000de8 <__aeabi_ddiv+0x278>
 8000fe6:	9800      	ldr	r0, [sp, #0]
 8000fe8:	1e51      	subs	r1, r2, #1
 8000fea:	4684      	mov	ip, r0
 8000fec:	4464      	add	r4, ip
 8000fee:	4284      	cmp	r4, r0
 8000ff0:	d200      	bcs.n	8000ff4 <__aeabi_ddiv+0x484>
 8000ff2:	e084      	b.n	80010fe <__aeabi_ddiv+0x58e>
 8000ff4:	42bc      	cmp	r4, r7
 8000ff6:	d200      	bcs.n	8000ffa <__aeabi_ddiv+0x48a>
 8000ff8:	e0ae      	b.n	8001158 <__aeabi_ddiv+0x5e8>
 8000ffa:	d100      	bne.n	8000ffe <__aeabi_ddiv+0x48e>
 8000ffc:	e0c1      	b.n	8001182 <__aeabi_ddiv+0x612>
 8000ffe:	000a      	movs	r2, r1
 8001000:	e6f0      	b.n	8000de4 <__aeabi_ddiv+0x274>
 8001002:	4542      	cmp	r2, r8
 8001004:	d900      	bls.n	8001008 <__aeabi_ddiv+0x498>
 8001006:	e62c      	b.n	8000c62 <__aeabi_ddiv+0xf2>
 8001008:	464b      	mov	r3, r9
 800100a:	07dc      	lsls	r4, r3, #31
 800100c:	0858      	lsrs	r0, r3, #1
 800100e:	4643      	mov	r3, r8
 8001010:	085b      	lsrs	r3, r3, #1
 8001012:	431c      	orrs	r4, r3
 8001014:	4643      	mov	r3, r8
 8001016:	07df      	lsls	r7, r3, #31
 8001018:	e62a      	b.n	8000c70 <__aeabi_ddiv+0x100>
 800101a:	f001 f901 	bl	8002220 <__clzsi2>
 800101e:	2315      	movs	r3, #21
 8001020:	469c      	mov	ip, r3
 8001022:	4484      	add	ip, r0
 8001024:	0002      	movs	r2, r0
 8001026:	4663      	mov	r3, ip
 8001028:	3220      	adds	r2, #32
 800102a:	2b1c      	cmp	r3, #28
 800102c:	dc00      	bgt.n	8001030 <__aeabi_ddiv+0x4c0>
 800102e:	e72e      	b.n	8000e8e <__aeabi_ddiv+0x31e>
 8001030:	0023      	movs	r3, r4
 8001032:	3808      	subs	r0, #8
 8001034:	4083      	lsls	r3, r0
 8001036:	4699      	mov	r9, r3
 8001038:	2300      	movs	r3, #0
 800103a:	4698      	mov	r8, r3
 800103c:	e736      	b.n	8000eac <__aeabi_ddiv+0x33c>
 800103e:	f001 f8ef 	bl	8002220 <__clzsi2>
 8001042:	0002      	movs	r2, r0
 8001044:	0003      	movs	r3, r0
 8001046:	3215      	adds	r2, #21
 8001048:	3320      	adds	r3, #32
 800104a:	2a1c      	cmp	r2, #28
 800104c:	dc00      	bgt.n	8001050 <__aeabi_ddiv+0x4e0>
 800104e:	e6fb      	b.n	8000e48 <__aeabi_ddiv+0x2d8>
 8001050:	9900      	ldr	r1, [sp, #0]
 8001052:	3808      	subs	r0, #8
 8001054:	4081      	lsls	r1, r0
 8001056:	2200      	movs	r2, #0
 8001058:	468b      	mov	fp, r1
 800105a:	e702      	b.n	8000e62 <__aeabi_ddiv+0x2f2>
 800105c:	9900      	ldr	r1, [sp, #0]
 800105e:	3b01      	subs	r3, #1
 8001060:	468c      	mov	ip, r1
 8001062:	4464      	add	r4, ip
 8001064:	42a1      	cmp	r1, r4
 8001066:	d900      	bls.n	800106a <__aeabi_ddiv+0x4fa>
 8001068:	e69a      	b.n	8000da0 <__aeabi_ddiv+0x230>
 800106a:	42a2      	cmp	r2, r4
 800106c:	d800      	bhi.n	8001070 <__aeabi_ddiv+0x500>
 800106e:	e697      	b.n	8000da0 <__aeabi_ddiv+0x230>
 8001070:	1e83      	subs	r3, r0, #2
 8001072:	4464      	add	r4, ip
 8001074:	e694      	b.n	8000da0 <__aeabi_ddiv+0x230>
 8001076:	46ac      	mov	ip, r5
 8001078:	4461      	add	r1, ip
 800107a:	3f01      	subs	r7, #1
 800107c:	428d      	cmp	r5, r1
 800107e:	d900      	bls.n	8001082 <__aeabi_ddiv+0x512>
 8001080:	e680      	b.n	8000d84 <__aeabi_ddiv+0x214>
 8001082:	428a      	cmp	r2, r1
 8001084:	d800      	bhi.n	8001088 <__aeabi_ddiv+0x518>
 8001086:	e67d      	b.n	8000d84 <__aeabi_ddiv+0x214>
 8001088:	1e87      	subs	r7, r0, #2
 800108a:	4461      	add	r1, ip
 800108c:	e67a      	b.n	8000d84 <__aeabi_ddiv+0x214>
 800108e:	4285      	cmp	r5, r0
 8001090:	d000      	beq.n	8001094 <__aeabi_ddiv+0x524>
 8001092:	e65f      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 8001094:	45b9      	cmp	r9, r7
 8001096:	d900      	bls.n	800109a <__aeabi_ddiv+0x52a>
 8001098:	e65c      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 800109a:	e656      	b.n	8000d4a <__aeabi_ddiv+0x1da>
 800109c:	42a2      	cmp	r2, r4
 800109e:	d800      	bhi.n	80010a2 <__aeabi_ddiv+0x532>
 80010a0:	e61a      	b.n	8000cd8 <__aeabi_ddiv+0x168>
 80010a2:	1e83      	subs	r3, r0, #2
 80010a4:	4464      	add	r4, ip
 80010a6:	e617      	b.n	8000cd8 <__aeabi_ddiv+0x168>
 80010a8:	428a      	cmp	r2, r1
 80010aa:	d800      	bhi.n	80010ae <__aeabi_ddiv+0x53e>
 80010ac:	e600      	b.n	8000cb0 <__aeabi_ddiv+0x140>
 80010ae:	46ac      	mov	ip, r5
 80010b0:	1e83      	subs	r3, r0, #2
 80010b2:	4698      	mov	r8, r3
 80010b4:	4461      	add	r1, ip
 80010b6:	e5fb      	b.n	8000cb0 <__aeabi_ddiv+0x140>
 80010b8:	4837      	ldr	r0, [pc, #220]	@ (8001198 <__aeabi_ddiv+0x628>)
 80010ba:	0014      	movs	r4, r2
 80010bc:	4450      	add	r0, sl
 80010be:	4082      	lsls	r2, r0
 80010c0:	465b      	mov	r3, fp
 80010c2:	0017      	movs	r7, r2
 80010c4:	4083      	lsls	r3, r0
 80010c6:	40cc      	lsrs	r4, r1
 80010c8:	1e7a      	subs	r2, r7, #1
 80010ca:	4197      	sbcs	r7, r2
 80010cc:	4323      	orrs	r3, r4
 80010ce:	433b      	orrs	r3, r7
 80010d0:	001a      	movs	r2, r3
 80010d2:	465b      	mov	r3, fp
 80010d4:	40cb      	lsrs	r3, r1
 80010d6:	0751      	lsls	r1, r2, #29
 80010d8:	d009      	beq.n	80010ee <__aeabi_ddiv+0x57e>
 80010da:	210f      	movs	r1, #15
 80010dc:	4011      	ands	r1, r2
 80010de:	2904      	cmp	r1, #4
 80010e0:	d005      	beq.n	80010ee <__aeabi_ddiv+0x57e>
 80010e2:	1d11      	adds	r1, r2, #4
 80010e4:	4291      	cmp	r1, r2
 80010e6:	4192      	sbcs	r2, r2
 80010e8:	4252      	negs	r2, r2
 80010ea:	189b      	adds	r3, r3, r2
 80010ec:	000a      	movs	r2, r1
 80010ee:	0219      	lsls	r1, r3, #8
 80010f0:	d400      	bmi.n	80010f4 <__aeabi_ddiv+0x584>
 80010f2:	e755      	b.n	8000fa0 <__aeabi_ddiv+0x430>
 80010f4:	2200      	movs	r2, #0
 80010f6:	2301      	movs	r3, #1
 80010f8:	2400      	movs	r4, #0
 80010fa:	4690      	mov	r8, r2
 80010fc:	e598      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 80010fe:	000a      	movs	r2, r1
 8001100:	42bc      	cmp	r4, r7
 8001102:	d000      	beq.n	8001106 <__aeabi_ddiv+0x596>
 8001104:	e66e      	b.n	8000de4 <__aeabi_ddiv+0x274>
 8001106:	454b      	cmp	r3, r9
 8001108:	d000      	beq.n	800110c <__aeabi_ddiv+0x59c>
 800110a:	e66b      	b.n	8000de4 <__aeabi_ddiv+0x274>
 800110c:	e66c      	b.n	8000de8 <__aeabi_ddiv+0x278>
 800110e:	4b23      	ldr	r3, [pc, #140]	@ (800119c <__aeabi_ddiv+0x62c>)
 8001110:	4a23      	ldr	r2, [pc, #140]	@ (80011a0 <__aeabi_ddiv+0x630>)
 8001112:	4453      	add	r3, sl
 8001114:	4592      	cmp	sl, r2
 8001116:	da00      	bge.n	800111a <__aeabi_ddiv+0x5aa>
 8001118:	e718      	b.n	8000f4c <__aeabi_ddiv+0x3dc>
 800111a:	2101      	movs	r1, #1
 800111c:	4249      	negs	r1, r1
 800111e:	1d0a      	adds	r2, r1, #4
 8001120:	428a      	cmp	r2, r1
 8001122:	4189      	sbcs	r1, r1
 8001124:	4249      	negs	r1, r1
 8001126:	448b      	add	fp, r1
 8001128:	e666      	b.n	8000df8 <__aeabi_ddiv+0x288>
 800112a:	210f      	movs	r1, #15
 800112c:	4011      	ands	r1, r2
 800112e:	2904      	cmp	r1, #4
 8001130:	d100      	bne.n	8001134 <__aeabi_ddiv+0x5c4>
 8001132:	e661      	b.n	8000df8 <__aeabi_ddiv+0x288>
 8001134:	0011      	movs	r1, r2
 8001136:	e7f2      	b.n	800111e <__aeabi_ddiv+0x5ae>
 8001138:	42bc      	cmp	r4, r7
 800113a:	d800      	bhi.n	800113e <__aeabi_ddiv+0x5ce>
 800113c:	e60a      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 800113e:	2302      	movs	r3, #2
 8001140:	425b      	negs	r3, r3
 8001142:	469c      	mov	ip, r3
 8001144:	9900      	ldr	r1, [sp, #0]
 8001146:	444f      	add	r7, r9
 8001148:	454f      	cmp	r7, r9
 800114a:	419b      	sbcs	r3, r3
 800114c:	44e3      	add	fp, ip
 800114e:	468c      	mov	ip, r1
 8001150:	425b      	negs	r3, r3
 8001152:	4463      	add	r3, ip
 8001154:	18c0      	adds	r0, r0, r3
 8001156:	e5ff      	b.n	8000d58 <__aeabi_ddiv+0x1e8>
 8001158:	4649      	mov	r1, r9
 800115a:	9d00      	ldr	r5, [sp, #0]
 800115c:	0048      	lsls	r0, r1, #1
 800115e:	4548      	cmp	r0, r9
 8001160:	4189      	sbcs	r1, r1
 8001162:	46ac      	mov	ip, r5
 8001164:	4249      	negs	r1, r1
 8001166:	4461      	add	r1, ip
 8001168:	4681      	mov	r9, r0
 800116a:	3a02      	subs	r2, #2
 800116c:	1864      	adds	r4, r4, r1
 800116e:	e7c7      	b.n	8001100 <__aeabi_ddiv+0x590>
 8001170:	2480      	movs	r4, #128	@ 0x80
 8001172:	465b      	mov	r3, fp
 8001174:	0324      	lsls	r4, r4, #12
 8001176:	431c      	orrs	r4, r3
 8001178:	0324      	lsls	r4, r4, #12
 800117a:	4690      	mov	r8, r2
 800117c:	4b04      	ldr	r3, [pc, #16]	@ (8001190 <__aeabi_ddiv+0x620>)
 800117e:	0b24      	lsrs	r4, r4, #12
 8001180:	e556      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8001182:	4599      	cmp	r9, r3
 8001184:	d3e8      	bcc.n	8001158 <__aeabi_ddiv+0x5e8>
 8001186:	000a      	movs	r2, r1
 8001188:	e7bd      	b.n	8001106 <__aeabi_ddiv+0x596>
 800118a:	2300      	movs	r3, #0
 800118c:	e708      	b.n	8000fa0 <__aeabi_ddiv+0x430>
 800118e:	46c0      	nop			@ (mov r8, r8)
 8001190:	000007ff 	.word	0x000007ff
 8001194:	0000043e 	.word	0x0000043e
 8001198:	0000041e 	.word	0x0000041e
 800119c:	000003ff 	.word	0x000003ff
 80011a0:	fffffc02 	.word	0xfffffc02

080011a4 <__eqdf2>:
 80011a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011a6:	4657      	mov	r7, sl
 80011a8:	46de      	mov	lr, fp
 80011aa:	464e      	mov	r6, r9
 80011ac:	4645      	mov	r5, r8
 80011ae:	b5e0      	push	{r5, r6, r7, lr}
 80011b0:	000d      	movs	r5, r1
 80011b2:	0004      	movs	r4, r0
 80011b4:	0fe8      	lsrs	r0, r5, #31
 80011b6:	4683      	mov	fp, r0
 80011b8:	0309      	lsls	r1, r1, #12
 80011ba:	0fd8      	lsrs	r0, r3, #31
 80011bc:	0b09      	lsrs	r1, r1, #12
 80011be:	4682      	mov	sl, r0
 80011c0:	4819      	ldr	r0, [pc, #100]	@ (8001228 <__eqdf2+0x84>)
 80011c2:	468c      	mov	ip, r1
 80011c4:	031f      	lsls	r7, r3, #12
 80011c6:	0069      	lsls	r1, r5, #1
 80011c8:	005e      	lsls	r6, r3, #1
 80011ca:	0d49      	lsrs	r1, r1, #21
 80011cc:	0b3f      	lsrs	r7, r7, #12
 80011ce:	0d76      	lsrs	r6, r6, #21
 80011d0:	4281      	cmp	r1, r0
 80011d2:	d018      	beq.n	8001206 <__eqdf2+0x62>
 80011d4:	4286      	cmp	r6, r0
 80011d6:	d00f      	beq.n	80011f8 <__eqdf2+0x54>
 80011d8:	2001      	movs	r0, #1
 80011da:	42b1      	cmp	r1, r6
 80011dc:	d10d      	bne.n	80011fa <__eqdf2+0x56>
 80011de:	45bc      	cmp	ip, r7
 80011e0:	d10b      	bne.n	80011fa <__eqdf2+0x56>
 80011e2:	4294      	cmp	r4, r2
 80011e4:	d109      	bne.n	80011fa <__eqdf2+0x56>
 80011e6:	45d3      	cmp	fp, sl
 80011e8:	d01c      	beq.n	8001224 <__eqdf2+0x80>
 80011ea:	2900      	cmp	r1, #0
 80011ec:	d105      	bne.n	80011fa <__eqdf2+0x56>
 80011ee:	4660      	mov	r0, ip
 80011f0:	4320      	orrs	r0, r4
 80011f2:	1e43      	subs	r3, r0, #1
 80011f4:	4198      	sbcs	r0, r3
 80011f6:	e000      	b.n	80011fa <__eqdf2+0x56>
 80011f8:	2001      	movs	r0, #1
 80011fa:	bcf0      	pop	{r4, r5, r6, r7}
 80011fc:	46bb      	mov	fp, r7
 80011fe:	46b2      	mov	sl, r6
 8001200:	46a9      	mov	r9, r5
 8001202:	46a0      	mov	r8, r4
 8001204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001206:	2001      	movs	r0, #1
 8001208:	428e      	cmp	r6, r1
 800120a:	d1f6      	bne.n	80011fa <__eqdf2+0x56>
 800120c:	4661      	mov	r1, ip
 800120e:	4339      	orrs	r1, r7
 8001210:	000f      	movs	r7, r1
 8001212:	4317      	orrs	r7, r2
 8001214:	4327      	orrs	r7, r4
 8001216:	d1f0      	bne.n	80011fa <__eqdf2+0x56>
 8001218:	465b      	mov	r3, fp
 800121a:	4652      	mov	r2, sl
 800121c:	1a98      	subs	r0, r3, r2
 800121e:	1e43      	subs	r3, r0, #1
 8001220:	4198      	sbcs	r0, r3
 8001222:	e7ea      	b.n	80011fa <__eqdf2+0x56>
 8001224:	2000      	movs	r0, #0
 8001226:	e7e8      	b.n	80011fa <__eqdf2+0x56>
 8001228:	000007ff 	.word	0x000007ff

0800122c <__gedf2>:
 800122c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800122e:	4657      	mov	r7, sl
 8001230:	464e      	mov	r6, r9
 8001232:	4645      	mov	r5, r8
 8001234:	46de      	mov	lr, fp
 8001236:	b5e0      	push	{r5, r6, r7, lr}
 8001238:	000d      	movs	r5, r1
 800123a:	030f      	lsls	r7, r1, #12
 800123c:	0b39      	lsrs	r1, r7, #12
 800123e:	b083      	sub	sp, #12
 8001240:	0004      	movs	r4, r0
 8001242:	4680      	mov	r8, r0
 8001244:	9101      	str	r1, [sp, #4]
 8001246:	0058      	lsls	r0, r3, #1
 8001248:	0fe9      	lsrs	r1, r5, #31
 800124a:	4f31      	ldr	r7, [pc, #196]	@ (8001310 <__gedf2+0xe4>)
 800124c:	0d40      	lsrs	r0, r0, #21
 800124e:	468c      	mov	ip, r1
 8001250:	006e      	lsls	r6, r5, #1
 8001252:	0319      	lsls	r1, r3, #12
 8001254:	4682      	mov	sl, r0
 8001256:	4691      	mov	r9, r2
 8001258:	0d76      	lsrs	r6, r6, #21
 800125a:	0b09      	lsrs	r1, r1, #12
 800125c:	0fd8      	lsrs	r0, r3, #31
 800125e:	42be      	cmp	r6, r7
 8001260:	d01f      	beq.n	80012a2 <__gedf2+0x76>
 8001262:	45ba      	cmp	sl, r7
 8001264:	d00f      	beq.n	8001286 <__gedf2+0x5a>
 8001266:	2e00      	cmp	r6, #0
 8001268:	d12f      	bne.n	80012ca <__gedf2+0x9e>
 800126a:	4655      	mov	r5, sl
 800126c:	9e01      	ldr	r6, [sp, #4]
 800126e:	4334      	orrs	r4, r6
 8001270:	2d00      	cmp	r5, #0
 8001272:	d127      	bne.n	80012c4 <__gedf2+0x98>
 8001274:	430a      	orrs	r2, r1
 8001276:	d03a      	beq.n	80012ee <__gedf2+0xc2>
 8001278:	2c00      	cmp	r4, #0
 800127a:	d145      	bne.n	8001308 <__gedf2+0xdc>
 800127c:	2800      	cmp	r0, #0
 800127e:	d11a      	bne.n	80012b6 <__gedf2+0x8a>
 8001280:	2001      	movs	r0, #1
 8001282:	4240      	negs	r0, r0
 8001284:	e017      	b.n	80012b6 <__gedf2+0x8a>
 8001286:	4311      	orrs	r1, r2
 8001288:	d13b      	bne.n	8001302 <__gedf2+0xd6>
 800128a:	2e00      	cmp	r6, #0
 800128c:	d102      	bne.n	8001294 <__gedf2+0x68>
 800128e:	9f01      	ldr	r7, [sp, #4]
 8001290:	4327      	orrs	r7, r4
 8001292:	d0f3      	beq.n	800127c <__gedf2+0x50>
 8001294:	4584      	cmp	ip, r0
 8001296:	d109      	bne.n	80012ac <__gedf2+0x80>
 8001298:	4663      	mov	r3, ip
 800129a:	2b00      	cmp	r3, #0
 800129c:	d0f0      	beq.n	8001280 <__gedf2+0x54>
 800129e:	4660      	mov	r0, ip
 80012a0:	e009      	b.n	80012b6 <__gedf2+0x8a>
 80012a2:	9f01      	ldr	r7, [sp, #4]
 80012a4:	4327      	orrs	r7, r4
 80012a6:	d12c      	bne.n	8001302 <__gedf2+0xd6>
 80012a8:	45b2      	cmp	sl, r6
 80012aa:	d024      	beq.n	80012f6 <__gedf2+0xca>
 80012ac:	4663      	mov	r3, ip
 80012ae:	2002      	movs	r0, #2
 80012b0:	3b01      	subs	r3, #1
 80012b2:	4018      	ands	r0, r3
 80012b4:	3801      	subs	r0, #1
 80012b6:	b003      	add	sp, #12
 80012b8:	bcf0      	pop	{r4, r5, r6, r7}
 80012ba:	46bb      	mov	fp, r7
 80012bc:	46b2      	mov	sl, r6
 80012be:	46a9      	mov	r9, r5
 80012c0:	46a0      	mov	r8, r4
 80012c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012c4:	2c00      	cmp	r4, #0
 80012c6:	d0d9      	beq.n	800127c <__gedf2+0x50>
 80012c8:	e7e4      	b.n	8001294 <__gedf2+0x68>
 80012ca:	4654      	mov	r4, sl
 80012cc:	2c00      	cmp	r4, #0
 80012ce:	d0ed      	beq.n	80012ac <__gedf2+0x80>
 80012d0:	4584      	cmp	ip, r0
 80012d2:	d1eb      	bne.n	80012ac <__gedf2+0x80>
 80012d4:	4556      	cmp	r6, sl
 80012d6:	dce9      	bgt.n	80012ac <__gedf2+0x80>
 80012d8:	dbde      	blt.n	8001298 <__gedf2+0x6c>
 80012da:	9b01      	ldr	r3, [sp, #4]
 80012dc:	428b      	cmp	r3, r1
 80012de:	d8e5      	bhi.n	80012ac <__gedf2+0x80>
 80012e0:	d1da      	bne.n	8001298 <__gedf2+0x6c>
 80012e2:	45c8      	cmp	r8, r9
 80012e4:	d8e2      	bhi.n	80012ac <__gedf2+0x80>
 80012e6:	2000      	movs	r0, #0
 80012e8:	45c8      	cmp	r8, r9
 80012ea:	d2e4      	bcs.n	80012b6 <__gedf2+0x8a>
 80012ec:	e7d4      	b.n	8001298 <__gedf2+0x6c>
 80012ee:	2000      	movs	r0, #0
 80012f0:	2c00      	cmp	r4, #0
 80012f2:	d0e0      	beq.n	80012b6 <__gedf2+0x8a>
 80012f4:	e7da      	b.n	80012ac <__gedf2+0x80>
 80012f6:	4311      	orrs	r1, r2
 80012f8:	d103      	bne.n	8001302 <__gedf2+0xd6>
 80012fa:	4584      	cmp	ip, r0
 80012fc:	d1d6      	bne.n	80012ac <__gedf2+0x80>
 80012fe:	2000      	movs	r0, #0
 8001300:	e7d9      	b.n	80012b6 <__gedf2+0x8a>
 8001302:	2002      	movs	r0, #2
 8001304:	4240      	negs	r0, r0
 8001306:	e7d6      	b.n	80012b6 <__gedf2+0x8a>
 8001308:	4584      	cmp	ip, r0
 800130a:	d0e6      	beq.n	80012da <__gedf2+0xae>
 800130c:	e7ce      	b.n	80012ac <__gedf2+0x80>
 800130e:	46c0      	nop			@ (mov r8, r8)
 8001310:	000007ff 	.word	0x000007ff

08001314 <__ledf2>:
 8001314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001316:	4657      	mov	r7, sl
 8001318:	464e      	mov	r6, r9
 800131a:	4645      	mov	r5, r8
 800131c:	46de      	mov	lr, fp
 800131e:	b5e0      	push	{r5, r6, r7, lr}
 8001320:	000d      	movs	r5, r1
 8001322:	030f      	lsls	r7, r1, #12
 8001324:	0004      	movs	r4, r0
 8001326:	4680      	mov	r8, r0
 8001328:	0fe8      	lsrs	r0, r5, #31
 800132a:	0b39      	lsrs	r1, r7, #12
 800132c:	4684      	mov	ip, r0
 800132e:	b083      	sub	sp, #12
 8001330:	0058      	lsls	r0, r3, #1
 8001332:	4f30      	ldr	r7, [pc, #192]	@ (80013f4 <__ledf2+0xe0>)
 8001334:	0d40      	lsrs	r0, r0, #21
 8001336:	9101      	str	r1, [sp, #4]
 8001338:	031e      	lsls	r6, r3, #12
 800133a:	0069      	lsls	r1, r5, #1
 800133c:	4682      	mov	sl, r0
 800133e:	4691      	mov	r9, r2
 8001340:	0d49      	lsrs	r1, r1, #21
 8001342:	0b36      	lsrs	r6, r6, #12
 8001344:	0fd8      	lsrs	r0, r3, #31
 8001346:	42b9      	cmp	r1, r7
 8001348:	d020      	beq.n	800138c <__ledf2+0x78>
 800134a:	45ba      	cmp	sl, r7
 800134c:	d00f      	beq.n	800136e <__ledf2+0x5a>
 800134e:	2900      	cmp	r1, #0
 8001350:	d12b      	bne.n	80013aa <__ledf2+0x96>
 8001352:	9901      	ldr	r1, [sp, #4]
 8001354:	430c      	orrs	r4, r1
 8001356:	4651      	mov	r1, sl
 8001358:	2900      	cmp	r1, #0
 800135a:	d137      	bne.n	80013cc <__ledf2+0xb8>
 800135c:	4332      	orrs	r2, r6
 800135e:	d038      	beq.n	80013d2 <__ledf2+0xbe>
 8001360:	2c00      	cmp	r4, #0
 8001362:	d144      	bne.n	80013ee <__ledf2+0xda>
 8001364:	2800      	cmp	r0, #0
 8001366:	d119      	bne.n	800139c <__ledf2+0x88>
 8001368:	2001      	movs	r0, #1
 800136a:	4240      	negs	r0, r0
 800136c:	e016      	b.n	800139c <__ledf2+0x88>
 800136e:	4316      	orrs	r6, r2
 8001370:	d113      	bne.n	800139a <__ledf2+0x86>
 8001372:	2900      	cmp	r1, #0
 8001374:	d102      	bne.n	800137c <__ledf2+0x68>
 8001376:	9f01      	ldr	r7, [sp, #4]
 8001378:	4327      	orrs	r7, r4
 800137a:	d0f3      	beq.n	8001364 <__ledf2+0x50>
 800137c:	4584      	cmp	ip, r0
 800137e:	d020      	beq.n	80013c2 <__ledf2+0xae>
 8001380:	4663      	mov	r3, ip
 8001382:	2002      	movs	r0, #2
 8001384:	3b01      	subs	r3, #1
 8001386:	4018      	ands	r0, r3
 8001388:	3801      	subs	r0, #1
 800138a:	e007      	b.n	800139c <__ledf2+0x88>
 800138c:	9f01      	ldr	r7, [sp, #4]
 800138e:	4327      	orrs	r7, r4
 8001390:	d103      	bne.n	800139a <__ledf2+0x86>
 8001392:	458a      	cmp	sl, r1
 8001394:	d1f4      	bne.n	8001380 <__ledf2+0x6c>
 8001396:	4316      	orrs	r6, r2
 8001398:	d01f      	beq.n	80013da <__ledf2+0xc6>
 800139a:	2002      	movs	r0, #2
 800139c:	b003      	add	sp, #12
 800139e:	bcf0      	pop	{r4, r5, r6, r7}
 80013a0:	46bb      	mov	fp, r7
 80013a2:	46b2      	mov	sl, r6
 80013a4:	46a9      	mov	r9, r5
 80013a6:	46a0      	mov	r8, r4
 80013a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013aa:	4654      	mov	r4, sl
 80013ac:	2c00      	cmp	r4, #0
 80013ae:	d0e7      	beq.n	8001380 <__ledf2+0x6c>
 80013b0:	4584      	cmp	ip, r0
 80013b2:	d1e5      	bne.n	8001380 <__ledf2+0x6c>
 80013b4:	4551      	cmp	r1, sl
 80013b6:	dce3      	bgt.n	8001380 <__ledf2+0x6c>
 80013b8:	db03      	blt.n	80013c2 <__ledf2+0xae>
 80013ba:	9b01      	ldr	r3, [sp, #4]
 80013bc:	42b3      	cmp	r3, r6
 80013be:	d8df      	bhi.n	8001380 <__ledf2+0x6c>
 80013c0:	d00f      	beq.n	80013e2 <__ledf2+0xce>
 80013c2:	4663      	mov	r3, ip
 80013c4:	2b00      	cmp	r3, #0
 80013c6:	d0cf      	beq.n	8001368 <__ledf2+0x54>
 80013c8:	4660      	mov	r0, ip
 80013ca:	e7e7      	b.n	800139c <__ledf2+0x88>
 80013cc:	2c00      	cmp	r4, #0
 80013ce:	d0c9      	beq.n	8001364 <__ledf2+0x50>
 80013d0:	e7d4      	b.n	800137c <__ledf2+0x68>
 80013d2:	2000      	movs	r0, #0
 80013d4:	2c00      	cmp	r4, #0
 80013d6:	d0e1      	beq.n	800139c <__ledf2+0x88>
 80013d8:	e7d2      	b.n	8001380 <__ledf2+0x6c>
 80013da:	4584      	cmp	ip, r0
 80013dc:	d1d0      	bne.n	8001380 <__ledf2+0x6c>
 80013de:	2000      	movs	r0, #0
 80013e0:	e7dc      	b.n	800139c <__ledf2+0x88>
 80013e2:	45c8      	cmp	r8, r9
 80013e4:	d8cc      	bhi.n	8001380 <__ledf2+0x6c>
 80013e6:	2000      	movs	r0, #0
 80013e8:	45c8      	cmp	r8, r9
 80013ea:	d2d7      	bcs.n	800139c <__ledf2+0x88>
 80013ec:	e7e9      	b.n	80013c2 <__ledf2+0xae>
 80013ee:	4584      	cmp	ip, r0
 80013f0:	d0e3      	beq.n	80013ba <__ledf2+0xa6>
 80013f2:	e7c5      	b.n	8001380 <__ledf2+0x6c>
 80013f4:	000007ff 	.word	0x000007ff

080013f8 <__aeabi_dmul>:
 80013f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013fa:	4657      	mov	r7, sl
 80013fc:	46de      	mov	lr, fp
 80013fe:	464e      	mov	r6, r9
 8001400:	4645      	mov	r5, r8
 8001402:	b5e0      	push	{r5, r6, r7, lr}
 8001404:	001f      	movs	r7, r3
 8001406:	030b      	lsls	r3, r1, #12
 8001408:	0b1b      	lsrs	r3, r3, #12
 800140a:	0016      	movs	r6, r2
 800140c:	469a      	mov	sl, r3
 800140e:	0fca      	lsrs	r2, r1, #31
 8001410:	004b      	lsls	r3, r1, #1
 8001412:	0004      	movs	r4, r0
 8001414:	4693      	mov	fp, r2
 8001416:	b087      	sub	sp, #28
 8001418:	0d5b      	lsrs	r3, r3, #21
 800141a:	d100      	bne.n	800141e <__aeabi_dmul+0x26>
 800141c:	e0d5      	b.n	80015ca <__aeabi_dmul+0x1d2>
 800141e:	4abb      	ldr	r2, [pc, #748]	@ (800170c <__aeabi_dmul+0x314>)
 8001420:	4293      	cmp	r3, r2
 8001422:	d100      	bne.n	8001426 <__aeabi_dmul+0x2e>
 8001424:	e0f8      	b.n	8001618 <__aeabi_dmul+0x220>
 8001426:	4651      	mov	r1, sl
 8001428:	0f42      	lsrs	r2, r0, #29
 800142a:	00c9      	lsls	r1, r1, #3
 800142c:	430a      	orrs	r2, r1
 800142e:	2180      	movs	r1, #128	@ 0x80
 8001430:	0409      	lsls	r1, r1, #16
 8001432:	4311      	orrs	r1, r2
 8001434:	00c2      	lsls	r2, r0, #3
 8001436:	4691      	mov	r9, r2
 8001438:	4ab5      	ldr	r2, [pc, #724]	@ (8001710 <__aeabi_dmul+0x318>)
 800143a:	468a      	mov	sl, r1
 800143c:	189d      	adds	r5, r3, r2
 800143e:	2300      	movs	r3, #0
 8001440:	4698      	mov	r8, r3
 8001442:	9302      	str	r3, [sp, #8]
 8001444:	033c      	lsls	r4, r7, #12
 8001446:	007b      	lsls	r3, r7, #1
 8001448:	0ffa      	lsrs	r2, r7, #31
 800144a:	0030      	movs	r0, r6
 800144c:	0b24      	lsrs	r4, r4, #12
 800144e:	0d5b      	lsrs	r3, r3, #21
 8001450:	9200      	str	r2, [sp, #0]
 8001452:	d100      	bne.n	8001456 <__aeabi_dmul+0x5e>
 8001454:	e096      	b.n	8001584 <__aeabi_dmul+0x18c>
 8001456:	4aad      	ldr	r2, [pc, #692]	@ (800170c <__aeabi_dmul+0x314>)
 8001458:	4293      	cmp	r3, r2
 800145a:	d031      	beq.n	80014c0 <__aeabi_dmul+0xc8>
 800145c:	0f72      	lsrs	r2, r6, #29
 800145e:	00e4      	lsls	r4, r4, #3
 8001460:	4322      	orrs	r2, r4
 8001462:	2480      	movs	r4, #128	@ 0x80
 8001464:	0424      	lsls	r4, r4, #16
 8001466:	4314      	orrs	r4, r2
 8001468:	4aa9      	ldr	r2, [pc, #676]	@ (8001710 <__aeabi_dmul+0x318>)
 800146a:	00f0      	lsls	r0, r6, #3
 800146c:	4694      	mov	ip, r2
 800146e:	4463      	add	r3, ip
 8001470:	195b      	adds	r3, r3, r5
 8001472:	1c5a      	adds	r2, r3, #1
 8001474:	9201      	str	r2, [sp, #4]
 8001476:	4642      	mov	r2, r8
 8001478:	2600      	movs	r6, #0
 800147a:	2a0a      	cmp	r2, #10
 800147c:	dc42      	bgt.n	8001504 <__aeabi_dmul+0x10c>
 800147e:	465a      	mov	r2, fp
 8001480:	9900      	ldr	r1, [sp, #0]
 8001482:	404a      	eors	r2, r1
 8001484:	4693      	mov	fp, r2
 8001486:	4642      	mov	r2, r8
 8001488:	2a02      	cmp	r2, #2
 800148a:	dc32      	bgt.n	80014f2 <__aeabi_dmul+0xfa>
 800148c:	3a01      	subs	r2, #1
 800148e:	2a01      	cmp	r2, #1
 8001490:	d900      	bls.n	8001494 <__aeabi_dmul+0x9c>
 8001492:	e149      	b.n	8001728 <__aeabi_dmul+0x330>
 8001494:	2e02      	cmp	r6, #2
 8001496:	d100      	bne.n	800149a <__aeabi_dmul+0xa2>
 8001498:	e0ca      	b.n	8001630 <__aeabi_dmul+0x238>
 800149a:	2e01      	cmp	r6, #1
 800149c:	d13d      	bne.n	800151a <__aeabi_dmul+0x122>
 800149e:	2300      	movs	r3, #0
 80014a0:	2400      	movs	r4, #0
 80014a2:	2200      	movs	r2, #0
 80014a4:	0010      	movs	r0, r2
 80014a6:	465a      	mov	r2, fp
 80014a8:	051b      	lsls	r3, r3, #20
 80014aa:	4323      	orrs	r3, r4
 80014ac:	07d2      	lsls	r2, r2, #31
 80014ae:	4313      	orrs	r3, r2
 80014b0:	0019      	movs	r1, r3
 80014b2:	b007      	add	sp, #28
 80014b4:	bcf0      	pop	{r4, r5, r6, r7}
 80014b6:	46bb      	mov	fp, r7
 80014b8:	46b2      	mov	sl, r6
 80014ba:	46a9      	mov	r9, r5
 80014bc:	46a0      	mov	r8, r4
 80014be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014c0:	4b92      	ldr	r3, [pc, #584]	@ (800170c <__aeabi_dmul+0x314>)
 80014c2:	4326      	orrs	r6, r4
 80014c4:	18eb      	adds	r3, r5, r3
 80014c6:	2e00      	cmp	r6, #0
 80014c8:	d100      	bne.n	80014cc <__aeabi_dmul+0xd4>
 80014ca:	e0bb      	b.n	8001644 <__aeabi_dmul+0x24c>
 80014cc:	2203      	movs	r2, #3
 80014ce:	4641      	mov	r1, r8
 80014d0:	4311      	orrs	r1, r2
 80014d2:	465a      	mov	r2, fp
 80014d4:	4688      	mov	r8, r1
 80014d6:	9900      	ldr	r1, [sp, #0]
 80014d8:	404a      	eors	r2, r1
 80014da:	2180      	movs	r1, #128	@ 0x80
 80014dc:	0109      	lsls	r1, r1, #4
 80014de:	468c      	mov	ip, r1
 80014e0:	0029      	movs	r1, r5
 80014e2:	4461      	add	r1, ip
 80014e4:	9101      	str	r1, [sp, #4]
 80014e6:	4641      	mov	r1, r8
 80014e8:	290a      	cmp	r1, #10
 80014ea:	dd00      	ble.n	80014ee <__aeabi_dmul+0xf6>
 80014ec:	e233      	b.n	8001956 <__aeabi_dmul+0x55e>
 80014ee:	4693      	mov	fp, r2
 80014f0:	2603      	movs	r6, #3
 80014f2:	4642      	mov	r2, r8
 80014f4:	2701      	movs	r7, #1
 80014f6:	4097      	lsls	r7, r2
 80014f8:	21a6      	movs	r1, #166	@ 0xa6
 80014fa:	003a      	movs	r2, r7
 80014fc:	00c9      	lsls	r1, r1, #3
 80014fe:	400a      	ands	r2, r1
 8001500:	420f      	tst	r7, r1
 8001502:	d031      	beq.n	8001568 <__aeabi_dmul+0x170>
 8001504:	9e02      	ldr	r6, [sp, #8]
 8001506:	2e02      	cmp	r6, #2
 8001508:	d100      	bne.n	800150c <__aeabi_dmul+0x114>
 800150a:	e235      	b.n	8001978 <__aeabi_dmul+0x580>
 800150c:	2e03      	cmp	r6, #3
 800150e:	d100      	bne.n	8001512 <__aeabi_dmul+0x11a>
 8001510:	e1d2      	b.n	80018b8 <__aeabi_dmul+0x4c0>
 8001512:	4654      	mov	r4, sl
 8001514:	4648      	mov	r0, r9
 8001516:	2e01      	cmp	r6, #1
 8001518:	d0c1      	beq.n	800149e <__aeabi_dmul+0xa6>
 800151a:	9a01      	ldr	r2, [sp, #4]
 800151c:	4b7d      	ldr	r3, [pc, #500]	@ (8001714 <__aeabi_dmul+0x31c>)
 800151e:	4694      	mov	ip, r2
 8001520:	4463      	add	r3, ip
 8001522:	2b00      	cmp	r3, #0
 8001524:	dc00      	bgt.n	8001528 <__aeabi_dmul+0x130>
 8001526:	e0c0      	b.n	80016aa <__aeabi_dmul+0x2b2>
 8001528:	0742      	lsls	r2, r0, #29
 800152a:	d009      	beq.n	8001540 <__aeabi_dmul+0x148>
 800152c:	220f      	movs	r2, #15
 800152e:	4002      	ands	r2, r0
 8001530:	2a04      	cmp	r2, #4
 8001532:	d005      	beq.n	8001540 <__aeabi_dmul+0x148>
 8001534:	1d02      	adds	r2, r0, #4
 8001536:	4282      	cmp	r2, r0
 8001538:	4180      	sbcs	r0, r0
 800153a:	4240      	negs	r0, r0
 800153c:	1824      	adds	r4, r4, r0
 800153e:	0010      	movs	r0, r2
 8001540:	01e2      	lsls	r2, r4, #7
 8001542:	d506      	bpl.n	8001552 <__aeabi_dmul+0x15a>
 8001544:	4b74      	ldr	r3, [pc, #464]	@ (8001718 <__aeabi_dmul+0x320>)
 8001546:	9a01      	ldr	r2, [sp, #4]
 8001548:	401c      	ands	r4, r3
 800154a:	2380      	movs	r3, #128	@ 0x80
 800154c:	4694      	mov	ip, r2
 800154e:	00db      	lsls	r3, r3, #3
 8001550:	4463      	add	r3, ip
 8001552:	4a72      	ldr	r2, [pc, #456]	@ (800171c <__aeabi_dmul+0x324>)
 8001554:	4293      	cmp	r3, r2
 8001556:	dc6b      	bgt.n	8001630 <__aeabi_dmul+0x238>
 8001558:	0762      	lsls	r2, r4, #29
 800155a:	08c0      	lsrs	r0, r0, #3
 800155c:	0264      	lsls	r4, r4, #9
 800155e:	055b      	lsls	r3, r3, #21
 8001560:	4302      	orrs	r2, r0
 8001562:	0b24      	lsrs	r4, r4, #12
 8001564:	0d5b      	lsrs	r3, r3, #21
 8001566:	e79d      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001568:	2190      	movs	r1, #144	@ 0x90
 800156a:	0089      	lsls	r1, r1, #2
 800156c:	420f      	tst	r7, r1
 800156e:	d163      	bne.n	8001638 <__aeabi_dmul+0x240>
 8001570:	2288      	movs	r2, #136	@ 0x88
 8001572:	423a      	tst	r2, r7
 8001574:	d100      	bne.n	8001578 <__aeabi_dmul+0x180>
 8001576:	e0d7      	b.n	8001728 <__aeabi_dmul+0x330>
 8001578:	9b00      	ldr	r3, [sp, #0]
 800157a:	46a2      	mov	sl, r4
 800157c:	469b      	mov	fp, r3
 800157e:	4681      	mov	r9, r0
 8001580:	9602      	str	r6, [sp, #8]
 8001582:	e7bf      	b.n	8001504 <__aeabi_dmul+0x10c>
 8001584:	0023      	movs	r3, r4
 8001586:	4333      	orrs	r3, r6
 8001588:	d100      	bne.n	800158c <__aeabi_dmul+0x194>
 800158a:	e07f      	b.n	800168c <__aeabi_dmul+0x294>
 800158c:	2c00      	cmp	r4, #0
 800158e:	d100      	bne.n	8001592 <__aeabi_dmul+0x19a>
 8001590:	e1ad      	b.n	80018ee <__aeabi_dmul+0x4f6>
 8001592:	0020      	movs	r0, r4
 8001594:	f000 fe44 	bl	8002220 <__clzsi2>
 8001598:	0002      	movs	r2, r0
 800159a:	0003      	movs	r3, r0
 800159c:	3a0b      	subs	r2, #11
 800159e:	201d      	movs	r0, #29
 80015a0:	0019      	movs	r1, r3
 80015a2:	1a82      	subs	r2, r0, r2
 80015a4:	0030      	movs	r0, r6
 80015a6:	3908      	subs	r1, #8
 80015a8:	40d0      	lsrs	r0, r2
 80015aa:	408c      	lsls	r4, r1
 80015ac:	4304      	orrs	r4, r0
 80015ae:	0030      	movs	r0, r6
 80015b0:	4088      	lsls	r0, r1
 80015b2:	4a5b      	ldr	r2, [pc, #364]	@ (8001720 <__aeabi_dmul+0x328>)
 80015b4:	1aeb      	subs	r3, r5, r3
 80015b6:	4694      	mov	ip, r2
 80015b8:	4463      	add	r3, ip
 80015ba:	1c5a      	adds	r2, r3, #1
 80015bc:	9201      	str	r2, [sp, #4]
 80015be:	4642      	mov	r2, r8
 80015c0:	2600      	movs	r6, #0
 80015c2:	2a0a      	cmp	r2, #10
 80015c4:	dc00      	bgt.n	80015c8 <__aeabi_dmul+0x1d0>
 80015c6:	e75a      	b.n	800147e <__aeabi_dmul+0x86>
 80015c8:	e79c      	b.n	8001504 <__aeabi_dmul+0x10c>
 80015ca:	4653      	mov	r3, sl
 80015cc:	4303      	orrs	r3, r0
 80015ce:	4699      	mov	r9, r3
 80015d0:	d054      	beq.n	800167c <__aeabi_dmul+0x284>
 80015d2:	4653      	mov	r3, sl
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d100      	bne.n	80015da <__aeabi_dmul+0x1e2>
 80015d8:	e177      	b.n	80018ca <__aeabi_dmul+0x4d2>
 80015da:	4650      	mov	r0, sl
 80015dc:	f000 fe20 	bl	8002220 <__clzsi2>
 80015e0:	230b      	movs	r3, #11
 80015e2:	425b      	negs	r3, r3
 80015e4:	469c      	mov	ip, r3
 80015e6:	0002      	movs	r2, r0
 80015e8:	4484      	add	ip, r0
 80015ea:	0011      	movs	r1, r2
 80015ec:	4650      	mov	r0, sl
 80015ee:	3908      	subs	r1, #8
 80015f0:	4088      	lsls	r0, r1
 80015f2:	231d      	movs	r3, #29
 80015f4:	4680      	mov	r8, r0
 80015f6:	4660      	mov	r0, ip
 80015f8:	1a1b      	subs	r3, r3, r0
 80015fa:	0020      	movs	r0, r4
 80015fc:	40d8      	lsrs	r0, r3
 80015fe:	0003      	movs	r3, r0
 8001600:	4640      	mov	r0, r8
 8001602:	4303      	orrs	r3, r0
 8001604:	469a      	mov	sl, r3
 8001606:	0023      	movs	r3, r4
 8001608:	408b      	lsls	r3, r1
 800160a:	4699      	mov	r9, r3
 800160c:	2300      	movs	r3, #0
 800160e:	4d44      	ldr	r5, [pc, #272]	@ (8001720 <__aeabi_dmul+0x328>)
 8001610:	4698      	mov	r8, r3
 8001612:	1aad      	subs	r5, r5, r2
 8001614:	9302      	str	r3, [sp, #8]
 8001616:	e715      	b.n	8001444 <__aeabi_dmul+0x4c>
 8001618:	4652      	mov	r2, sl
 800161a:	4302      	orrs	r2, r0
 800161c:	4691      	mov	r9, r2
 800161e:	d126      	bne.n	800166e <__aeabi_dmul+0x276>
 8001620:	2200      	movs	r2, #0
 8001622:	001d      	movs	r5, r3
 8001624:	2302      	movs	r3, #2
 8001626:	4692      	mov	sl, r2
 8001628:	3208      	adds	r2, #8
 800162a:	4690      	mov	r8, r2
 800162c:	9302      	str	r3, [sp, #8]
 800162e:	e709      	b.n	8001444 <__aeabi_dmul+0x4c>
 8001630:	2400      	movs	r4, #0
 8001632:	2200      	movs	r2, #0
 8001634:	4b35      	ldr	r3, [pc, #212]	@ (800170c <__aeabi_dmul+0x314>)
 8001636:	e735      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001638:	2300      	movs	r3, #0
 800163a:	2480      	movs	r4, #128	@ 0x80
 800163c:	469b      	mov	fp, r3
 800163e:	0324      	lsls	r4, r4, #12
 8001640:	4b32      	ldr	r3, [pc, #200]	@ (800170c <__aeabi_dmul+0x314>)
 8001642:	e72f      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001644:	2202      	movs	r2, #2
 8001646:	4641      	mov	r1, r8
 8001648:	4311      	orrs	r1, r2
 800164a:	2280      	movs	r2, #128	@ 0x80
 800164c:	0112      	lsls	r2, r2, #4
 800164e:	4694      	mov	ip, r2
 8001650:	002a      	movs	r2, r5
 8001652:	4462      	add	r2, ip
 8001654:	4688      	mov	r8, r1
 8001656:	9201      	str	r2, [sp, #4]
 8001658:	290a      	cmp	r1, #10
 800165a:	dd00      	ble.n	800165e <__aeabi_dmul+0x266>
 800165c:	e752      	b.n	8001504 <__aeabi_dmul+0x10c>
 800165e:	465a      	mov	r2, fp
 8001660:	2000      	movs	r0, #0
 8001662:	9900      	ldr	r1, [sp, #0]
 8001664:	0004      	movs	r4, r0
 8001666:	404a      	eors	r2, r1
 8001668:	4693      	mov	fp, r2
 800166a:	2602      	movs	r6, #2
 800166c:	e70b      	b.n	8001486 <__aeabi_dmul+0x8e>
 800166e:	220c      	movs	r2, #12
 8001670:	001d      	movs	r5, r3
 8001672:	2303      	movs	r3, #3
 8001674:	4681      	mov	r9, r0
 8001676:	4690      	mov	r8, r2
 8001678:	9302      	str	r3, [sp, #8]
 800167a:	e6e3      	b.n	8001444 <__aeabi_dmul+0x4c>
 800167c:	2300      	movs	r3, #0
 800167e:	469a      	mov	sl, r3
 8001680:	3304      	adds	r3, #4
 8001682:	4698      	mov	r8, r3
 8001684:	3b03      	subs	r3, #3
 8001686:	2500      	movs	r5, #0
 8001688:	9302      	str	r3, [sp, #8]
 800168a:	e6db      	b.n	8001444 <__aeabi_dmul+0x4c>
 800168c:	4642      	mov	r2, r8
 800168e:	3301      	adds	r3, #1
 8001690:	431a      	orrs	r2, r3
 8001692:	002b      	movs	r3, r5
 8001694:	4690      	mov	r8, r2
 8001696:	1c5a      	adds	r2, r3, #1
 8001698:	9201      	str	r2, [sp, #4]
 800169a:	4642      	mov	r2, r8
 800169c:	2400      	movs	r4, #0
 800169e:	2000      	movs	r0, #0
 80016a0:	2601      	movs	r6, #1
 80016a2:	2a0a      	cmp	r2, #10
 80016a4:	dc00      	bgt.n	80016a8 <__aeabi_dmul+0x2b0>
 80016a6:	e6ea      	b.n	800147e <__aeabi_dmul+0x86>
 80016a8:	e72c      	b.n	8001504 <__aeabi_dmul+0x10c>
 80016aa:	2201      	movs	r2, #1
 80016ac:	1ad2      	subs	r2, r2, r3
 80016ae:	2a38      	cmp	r2, #56	@ 0x38
 80016b0:	dd00      	ble.n	80016b4 <__aeabi_dmul+0x2bc>
 80016b2:	e6f4      	b.n	800149e <__aeabi_dmul+0xa6>
 80016b4:	2a1f      	cmp	r2, #31
 80016b6:	dc00      	bgt.n	80016ba <__aeabi_dmul+0x2c2>
 80016b8:	e12a      	b.n	8001910 <__aeabi_dmul+0x518>
 80016ba:	211f      	movs	r1, #31
 80016bc:	4249      	negs	r1, r1
 80016be:	1acb      	subs	r3, r1, r3
 80016c0:	0021      	movs	r1, r4
 80016c2:	40d9      	lsrs	r1, r3
 80016c4:	000b      	movs	r3, r1
 80016c6:	2a20      	cmp	r2, #32
 80016c8:	d005      	beq.n	80016d6 <__aeabi_dmul+0x2de>
 80016ca:	4a16      	ldr	r2, [pc, #88]	@ (8001724 <__aeabi_dmul+0x32c>)
 80016cc:	9d01      	ldr	r5, [sp, #4]
 80016ce:	4694      	mov	ip, r2
 80016d0:	4465      	add	r5, ip
 80016d2:	40ac      	lsls	r4, r5
 80016d4:	4320      	orrs	r0, r4
 80016d6:	1e42      	subs	r2, r0, #1
 80016d8:	4190      	sbcs	r0, r2
 80016da:	4318      	orrs	r0, r3
 80016dc:	2307      	movs	r3, #7
 80016de:	0019      	movs	r1, r3
 80016e0:	2400      	movs	r4, #0
 80016e2:	4001      	ands	r1, r0
 80016e4:	4203      	tst	r3, r0
 80016e6:	d00c      	beq.n	8001702 <__aeabi_dmul+0x30a>
 80016e8:	230f      	movs	r3, #15
 80016ea:	4003      	ands	r3, r0
 80016ec:	2b04      	cmp	r3, #4
 80016ee:	d100      	bne.n	80016f2 <__aeabi_dmul+0x2fa>
 80016f0:	e140      	b.n	8001974 <__aeabi_dmul+0x57c>
 80016f2:	1d03      	adds	r3, r0, #4
 80016f4:	4283      	cmp	r3, r0
 80016f6:	41a4      	sbcs	r4, r4
 80016f8:	0018      	movs	r0, r3
 80016fa:	4264      	negs	r4, r4
 80016fc:	0761      	lsls	r1, r4, #29
 80016fe:	0264      	lsls	r4, r4, #9
 8001700:	0b24      	lsrs	r4, r4, #12
 8001702:	08c2      	lsrs	r2, r0, #3
 8001704:	2300      	movs	r3, #0
 8001706:	430a      	orrs	r2, r1
 8001708:	e6cc      	b.n	80014a4 <__aeabi_dmul+0xac>
 800170a:	46c0      	nop			@ (mov r8, r8)
 800170c:	000007ff 	.word	0x000007ff
 8001710:	fffffc01 	.word	0xfffffc01
 8001714:	000003ff 	.word	0x000003ff
 8001718:	feffffff 	.word	0xfeffffff
 800171c:	000007fe 	.word	0x000007fe
 8001720:	fffffc0d 	.word	0xfffffc0d
 8001724:	0000043e 	.word	0x0000043e
 8001728:	4649      	mov	r1, r9
 800172a:	464a      	mov	r2, r9
 800172c:	0409      	lsls	r1, r1, #16
 800172e:	0c09      	lsrs	r1, r1, #16
 8001730:	000d      	movs	r5, r1
 8001732:	0c16      	lsrs	r6, r2, #16
 8001734:	0c02      	lsrs	r2, r0, #16
 8001736:	0400      	lsls	r0, r0, #16
 8001738:	0c00      	lsrs	r0, r0, #16
 800173a:	4345      	muls	r5, r0
 800173c:	46ac      	mov	ip, r5
 800173e:	0005      	movs	r5, r0
 8001740:	4375      	muls	r5, r6
 8001742:	46a8      	mov	r8, r5
 8001744:	0015      	movs	r5, r2
 8001746:	000f      	movs	r7, r1
 8001748:	4375      	muls	r5, r6
 800174a:	9200      	str	r2, [sp, #0]
 800174c:	9502      	str	r5, [sp, #8]
 800174e:	002a      	movs	r2, r5
 8001750:	9d00      	ldr	r5, [sp, #0]
 8001752:	436f      	muls	r7, r5
 8001754:	4665      	mov	r5, ip
 8001756:	0c2d      	lsrs	r5, r5, #16
 8001758:	46a9      	mov	r9, r5
 800175a:	4447      	add	r7, r8
 800175c:	444f      	add	r7, r9
 800175e:	45b8      	cmp	r8, r7
 8001760:	d905      	bls.n	800176e <__aeabi_dmul+0x376>
 8001762:	0015      	movs	r5, r2
 8001764:	2280      	movs	r2, #128	@ 0x80
 8001766:	0252      	lsls	r2, r2, #9
 8001768:	4690      	mov	r8, r2
 800176a:	4445      	add	r5, r8
 800176c:	9502      	str	r5, [sp, #8]
 800176e:	0c3d      	lsrs	r5, r7, #16
 8001770:	9503      	str	r5, [sp, #12]
 8001772:	4665      	mov	r5, ip
 8001774:	042d      	lsls	r5, r5, #16
 8001776:	043f      	lsls	r7, r7, #16
 8001778:	0c2d      	lsrs	r5, r5, #16
 800177a:	46ac      	mov	ip, r5
 800177c:	003d      	movs	r5, r7
 800177e:	4465      	add	r5, ip
 8001780:	9504      	str	r5, [sp, #16]
 8001782:	0c25      	lsrs	r5, r4, #16
 8001784:	0424      	lsls	r4, r4, #16
 8001786:	0c24      	lsrs	r4, r4, #16
 8001788:	46ac      	mov	ip, r5
 800178a:	0025      	movs	r5, r4
 800178c:	4375      	muls	r5, r6
 800178e:	46a8      	mov	r8, r5
 8001790:	4665      	mov	r5, ip
 8001792:	000f      	movs	r7, r1
 8001794:	4369      	muls	r1, r5
 8001796:	4441      	add	r1, r8
 8001798:	4689      	mov	r9, r1
 800179a:	4367      	muls	r7, r4
 800179c:	0c39      	lsrs	r1, r7, #16
 800179e:	4449      	add	r1, r9
 80017a0:	436e      	muls	r6, r5
 80017a2:	4588      	cmp	r8, r1
 80017a4:	d903      	bls.n	80017ae <__aeabi_dmul+0x3b6>
 80017a6:	2280      	movs	r2, #128	@ 0x80
 80017a8:	0252      	lsls	r2, r2, #9
 80017aa:	4690      	mov	r8, r2
 80017ac:	4446      	add	r6, r8
 80017ae:	0c0d      	lsrs	r5, r1, #16
 80017b0:	46a8      	mov	r8, r5
 80017b2:	0035      	movs	r5, r6
 80017b4:	4445      	add	r5, r8
 80017b6:	9505      	str	r5, [sp, #20]
 80017b8:	9d03      	ldr	r5, [sp, #12]
 80017ba:	043f      	lsls	r7, r7, #16
 80017bc:	46a8      	mov	r8, r5
 80017be:	0c3f      	lsrs	r7, r7, #16
 80017c0:	0409      	lsls	r1, r1, #16
 80017c2:	19c9      	adds	r1, r1, r7
 80017c4:	4488      	add	r8, r1
 80017c6:	4645      	mov	r5, r8
 80017c8:	9503      	str	r5, [sp, #12]
 80017ca:	4655      	mov	r5, sl
 80017cc:	042e      	lsls	r6, r5, #16
 80017ce:	0c36      	lsrs	r6, r6, #16
 80017d0:	0c2f      	lsrs	r7, r5, #16
 80017d2:	0035      	movs	r5, r6
 80017d4:	4345      	muls	r5, r0
 80017d6:	4378      	muls	r0, r7
 80017d8:	4681      	mov	r9, r0
 80017da:	0038      	movs	r0, r7
 80017dc:	46a8      	mov	r8, r5
 80017de:	0c2d      	lsrs	r5, r5, #16
 80017e0:	46aa      	mov	sl, r5
 80017e2:	9a00      	ldr	r2, [sp, #0]
 80017e4:	4350      	muls	r0, r2
 80017e6:	4372      	muls	r2, r6
 80017e8:	444a      	add	r2, r9
 80017ea:	4452      	add	r2, sl
 80017ec:	4591      	cmp	r9, r2
 80017ee:	d903      	bls.n	80017f8 <__aeabi_dmul+0x400>
 80017f0:	2580      	movs	r5, #128	@ 0x80
 80017f2:	026d      	lsls	r5, r5, #9
 80017f4:	46a9      	mov	r9, r5
 80017f6:	4448      	add	r0, r9
 80017f8:	0c15      	lsrs	r5, r2, #16
 80017fa:	46a9      	mov	r9, r5
 80017fc:	4645      	mov	r5, r8
 80017fe:	042d      	lsls	r5, r5, #16
 8001800:	0c2d      	lsrs	r5, r5, #16
 8001802:	46a8      	mov	r8, r5
 8001804:	4665      	mov	r5, ip
 8001806:	437d      	muls	r5, r7
 8001808:	0412      	lsls	r2, r2, #16
 800180a:	4448      	add	r0, r9
 800180c:	4490      	add	r8, r2
 800180e:	46a9      	mov	r9, r5
 8001810:	0032      	movs	r2, r6
 8001812:	4665      	mov	r5, ip
 8001814:	4362      	muls	r2, r4
 8001816:	436e      	muls	r6, r5
 8001818:	437c      	muls	r4, r7
 800181a:	0c17      	lsrs	r7, r2, #16
 800181c:	1936      	adds	r6, r6, r4
 800181e:	19bf      	adds	r7, r7, r6
 8001820:	42bc      	cmp	r4, r7
 8001822:	d903      	bls.n	800182c <__aeabi_dmul+0x434>
 8001824:	2480      	movs	r4, #128	@ 0x80
 8001826:	0264      	lsls	r4, r4, #9
 8001828:	46a4      	mov	ip, r4
 800182a:	44e1      	add	r9, ip
 800182c:	9c02      	ldr	r4, [sp, #8]
 800182e:	9e03      	ldr	r6, [sp, #12]
 8001830:	46a4      	mov	ip, r4
 8001832:	9d05      	ldr	r5, [sp, #20]
 8001834:	4466      	add	r6, ip
 8001836:	428e      	cmp	r6, r1
 8001838:	4189      	sbcs	r1, r1
 800183a:	46ac      	mov	ip, r5
 800183c:	0412      	lsls	r2, r2, #16
 800183e:	043c      	lsls	r4, r7, #16
 8001840:	0c12      	lsrs	r2, r2, #16
 8001842:	18a2      	adds	r2, r4, r2
 8001844:	4462      	add	r2, ip
 8001846:	4249      	negs	r1, r1
 8001848:	1854      	adds	r4, r2, r1
 800184a:	4446      	add	r6, r8
 800184c:	46a4      	mov	ip, r4
 800184e:	4546      	cmp	r6, r8
 8001850:	41a4      	sbcs	r4, r4
 8001852:	4682      	mov	sl, r0
 8001854:	4264      	negs	r4, r4
 8001856:	46a0      	mov	r8, r4
 8001858:	42aa      	cmp	r2, r5
 800185a:	4192      	sbcs	r2, r2
 800185c:	458c      	cmp	ip, r1
 800185e:	4189      	sbcs	r1, r1
 8001860:	44e2      	add	sl, ip
 8001862:	44d0      	add	r8, sl
 8001864:	4249      	negs	r1, r1
 8001866:	4252      	negs	r2, r2
 8001868:	430a      	orrs	r2, r1
 800186a:	45a0      	cmp	r8, r4
 800186c:	41a4      	sbcs	r4, r4
 800186e:	4582      	cmp	sl, r0
 8001870:	4189      	sbcs	r1, r1
 8001872:	4264      	negs	r4, r4
 8001874:	4249      	negs	r1, r1
 8001876:	430c      	orrs	r4, r1
 8001878:	4641      	mov	r1, r8
 800187a:	0c3f      	lsrs	r7, r7, #16
 800187c:	19d2      	adds	r2, r2, r7
 800187e:	1912      	adds	r2, r2, r4
 8001880:	0dcc      	lsrs	r4, r1, #23
 8001882:	9904      	ldr	r1, [sp, #16]
 8001884:	0270      	lsls	r0, r6, #9
 8001886:	4308      	orrs	r0, r1
 8001888:	1e41      	subs	r1, r0, #1
 800188a:	4188      	sbcs	r0, r1
 800188c:	4641      	mov	r1, r8
 800188e:	444a      	add	r2, r9
 8001890:	0df6      	lsrs	r6, r6, #23
 8001892:	0252      	lsls	r2, r2, #9
 8001894:	4330      	orrs	r0, r6
 8001896:	0249      	lsls	r1, r1, #9
 8001898:	4314      	orrs	r4, r2
 800189a:	4308      	orrs	r0, r1
 800189c:	01d2      	lsls	r2, r2, #7
 800189e:	d535      	bpl.n	800190c <__aeabi_dmul+0x514>
 80018a0:	2201      	movs	r2, #1
 80018a2:	0843      	lsrs	r3, r0, #1
 80018a4:	4002      	ands	r2, r0
 80018a6:	4313      	orrs	r3, r2
 80018a8:	07e0      	lsls	r0, r4, #31
 80018aa:	4318      	orrs	r0, r3
 80018ac:	0864      	lsrs	r4, r4, #1
 80018ae:	e634      	b.n	800151a <__aeabi_dmul+0x122>
 80018b0:	9b00      	ldr	r3, [sp, #0]
 80018b2:	46a2      	mov	sl, r4
 80018b4:	469b      	mov	fp, r3
 80018b6:	4681      	mov	r9, r0
 80018b8:	2480      	movs	r4, #128	@ 0x80
 80018ba:	4653      	mov	r3, sl
 80018bc:	0324      	lsls	r4, r4, #12
 80018be:	431c      	orrs	r4, r3
 80018c0:	0324      	lsls	r4, r4, #12
 80018c2:	464a      	mov	r2, r9
 80018c4:	4b2e      	ldr	r3, [pc, #184]	@ (8001980 <__aeabi_dmul+0x588>)
 80018c6:	0b24      	lsrs	r4, r4, #12
 80018c8:	e5ec      	b.n	80014a4 <__aeabi_dmul+0xac>
 80018ca:	f000 fca9 	bl	8002220 <__clzsi2>
 80018ce:	2315      	movs	r3, #21
 80018d0:	469c      	mov	ip, r3
 80018d2:	4484      	add	ip, r0
 80018d4:	0002      	movs	r2, r0
 80018d6:	4663      	mov	r3, ip
 80018d8:	3220      	adds	r2, #32
 80018da:	2b1c      	cmp	r3, #28
 80018dc:	dc00      	bgt.n	80018e0 <__aeabi_dmul+0x4e8>
 80018de:	e684      	b.n	80015ea <__aeabi_dmul+0x1f2>
 80018e0:	2300      	movs	r3, #0
 80018e2:	4699      	mov	r9, r3
 80018e4:	0023      	movs	r3, r4
 80018e6:	3808      	subs	r0, #8
 80018e8:	4083      	lsls	r3, r0
 80018ea:	469a      	mov	sl, r3
 80018ec:	e68e      	b.n	800160c <__aeabi_dmul+0x214>
 80018ee:	f000 fc97 	bl	8002220 <__clzsi2>
 80018f2:	0002      	movs	r2, r0
 80018f4:	0003      	movs	r3, r0
 80018f6:	3215      	adds	r2, #21
 80018f8:	3320      	adds	r3, #32
 80018fa:	2a1c      	cmp	r2, #28
 80018fc:	dc00      	bgt.n	8001900 <__aeabi_dmul+0x508>
 80018fe:	e64e      	b.n	800159e <__aeabi_dmul+0x1a6>
 8001900:	0002      	movs	r2, r0
 8001902:	0034      	movs	r4, r6
 8001904:	3a08      	subs	r2, #8
 8001906:	2000      	movs	r0, #0
 8001908:	4094      	lsls	r4, r2
 800190a:	e652      	b.n	80015b2 <__aeabi_dmul+0x1ba>
 800190c:	9301      	str	r3, [sp, #4]
 800190e:	e604      	b.n	800151a <__aeabi_dmul+0x122>
 8001910:	4b1c      	ldr	r3, [pc, #112]	@ (8001984 <__aeabi_dmul+0x58c>)
 8001912:	0021      	movs	r1, r4
 8001914:	469c      	mov	ip, r3
 8001916:	0003      	movs	r3, r0
 8001918:	9d01      	ldr	r5, [sp, #4]
 800191a:	40d3      	lsrs	r3, r2
 800191c:	4465      	add	r5, ip
 800191e:	40a9      	lsls	r1, r5
 8001920:	4319      	orrs	r1, r3
 8001922:	0003      	movs	r3, r0
 8001924:	40ab      	lsls	r3, r5
 8001926:	1e58      	subs	r0, r3, #1
 8001928:	4183      	sbcs	r3, r0
 800192a:	4319      	orrs	r1, r3
 800192c:	0008      	movs	r0, r1
 800192e:	40d4      	lsrs	r4, r2
 8001930:	074b      	lsls	r3, r1, #29
 8001932:	d009      	beq.n	8001948 <__aeabi_dmul+0x550>
 8001934:	230f      	movs	r3, #15
 8001936:	400b      	ands	r3, r1
 8001938:	2b04      	cmp	r3, #4
 800193a:	d005      	beq.n	8001948 <__aeabi_dmul+0x550>
 800193c:	1d0b      	adds	r3, r1, #4
 800193e:	428b      	cmp	r3, r1
 8001940:	4180      	sbcs	r0, r0
 8001942:	4240      	negs	r0, r0
 8001944:	1824      	adds	r4, r4, r0
 8001946:	0018      	movs	r0, r3
 8001948:	0223      	lsls	r3, r4, #8
 800194a:	d400      	bmi.n	800194e <__aeabi_dmul+0x556>
 800194c:	e6d6      	b.n	80016fc <__aeabi_dmul+0x304>
 800194e:	2301      	movs	r3, #1
 8001950:	2400      	movs	r4, #0
 8001952:	2200      	movs	r2, #0
 8001954:	e5a6      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001956:	290f      	cmp	r1, #15
 8001958:	d1aa      	bne.n	80018b0 <__aeabi_dmul+0x4b8>
 800195a:	2380      	movs	r3, #128	@ 0x80
 800195c:	4652      	mov	r2, sl
 800195e:	031b      	lsls	r3, r3, #12
 8001960:	421a      	tst	r2, r3
 8001962:	d0a9      	beq.n	80018b8 <__aeabi_dmul+0x4c0>
 8001964:	421c      	tst	r4, r3
 8001966:	d1a7      	bne.n	80018b8 <__aeabi_dmul+0x4c0>
 8001968:	431c      	orrs	r4, r3
 800196a:	9b00      	ldr	r3, [sp, #0]
 800196c:	0002      	movs	r2, r0
 800196e:	469b      	mov	fp, r3
 8001970:	4b03      	ldr	r3, [pc, #12]	@ (8001980 <__aeabi_dmul+0x588>)
 8001972:	e597      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001974:	2400      	movs	r4, #0
 8001976:	e6c1      	b.n	80016fc <__aeabi_dmul+0x304>
 8001978:	2400      	movs	r4, #0
 800197a:	4b01      	ldr	r3, [pc, #4]	@ (8001980 <__aeabi_dmul+0x588>)
 800197c:	0022      	movs	r2, r4
 800197e:	e591      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001980:	000007ff 	.word	0x000007ff
 8001984:	0000041e 	.word	0x0000041e

08001988 <__aeabi_dsub>:
 8001988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800198a:	464e      	mov	r6, r9
 800198c:	4645      	mov	r5, r8
 800198e:	46de      	mov	lr, fp
 8001990:	4657      	mov	r7, sl
 8001992:	b5e0      	push	{r5, r6, r7, lr}
 8001994:	b085      	sub	sp, #20
 8001996:	9000      	str	r0, [sp, #0]
 8001998:	9101      	str	r1, [sp, #4]
 800199a:	030c      	lsls	r4, r1, #12
 800199c:	004f      	lsls	r7, r1, #1
 800199e:	0fce      	lsrs	r6, r1, #31
 80019a0:	0a61      	lsrs	r1, r4, #9
 80019a2:	9c00      	ldr	r4, [sp, #0]
 80019a4:	46b0      	mov	r8, r6
 80019a6:	0f64      	lsrs	r4, r4, #29
 80019a8:	430c      	orrs	r4, r1
 80019aa:	9900      	ldr	r1, [sp, #0]
 80019ac:	0d7f      	lsrs	r7, r7, #21
 80019ae:	00c8      	lsls	r0, r1, #3
 80019b0:	0011      	movs	r1, r2
 80019b2:	001a      	movs	r2, r3
 80019b4:	031b      	lsls	r3, r3, #12
 80019b6:	469c      	mov	ip, r3
 80019b8:	9100      	str	r1, [sp, #0]
 80019ba:	9201      	str	r2, [sp, #4]
 80019bc:	0051      	lsls	r1, r2, #1
 80019be:	0d4b      	lsrs	r3, r1, #21
 80019c0:	4699      	mov	r9, r3
 80019c2:	9b01      	ldr	r3, [sp, #4]
 80019c4:	9d00      	ldr	r5, [sp, #0]
 80019c6:	0fd9      	lsrs	r1, r3, #31
 80019c8:	4663      	mov	r3, ip
 80019ca:	0f6a      	lsrs	r2, r5, #29
 80019cc:	0a5b      	lsrs	r3, r3, #9
 80019ce:	4313      	orrs	r3, r2
 80019d0:	00ea      	lsls	r2, r5, #3
 80019d2:	4694      	mov	ip, r2
 80019d4:	4693      	mov	fp, r2
 80019d6:	4ac1      	ldr	r2, [pc, #772]	@ (8001cdc <__aeabi_dsub+0x354>)
 80019d8:	9003      	str	r0, [sp, #12]
 80019da:	9302      	str	r3, [sp, #8]
 80019dc:	4591      	cmp	r9, r2
 80019de:	d100      	bne.n	80019e2 <__aeabi_dsub+0x5a>
 80019e0:	e0cd      	b.n	8001b7e <__aeabi_dsub+0x1f6>
 80019e2:	2501      	movs	r5, #1
 80019e4:	4069      	eors	r1, r5
 80019e6:	464d      	mov	r5, r9
 80019e8:	1b7d      	subs	r5, r7, r5
 80019ea:	46aa      	mov	sl, r5
 80019ec:	428e      	cmp	r6, r1
 80019ee:	d100      	bne.n	80019f2 <__aeabi_dsub+0x6a>
 80019f0:	e080      	b.n	8001af4 <__aeabi_dsub+0x16c>
 80019f2:	2d00      	cmp	r5, #0
 80019f4:	dc00      	bgt.n	80019f8 <__aeabi_dsub+0x70>
 80019f6:	e335      	b.n	8002064 <__aeabi_dsub+0x6dc>
 80019f8:	4649      	mov	r1, r9
 80019fa:	2900      	cmp	r1, #0
 80019fc:	d100      	bne.n	8001a00 <__aeabi_dsub+0x78>
 80019fe:	e0df      	b.n	8001bc0 <__aeabi_dsub+0x238>
 8001a00:	4297      	cmp	r7, r2
 8001a02:	d100      	bne.n	8001a06 <__aeabi_dsub+0x7e>
 8001a04:	e194      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001a06:	4652      	mov	r2, sl
 8001a08:	2501      	movs	r5, #1
 8001a0a:	2a38      	cmp	r2, #56	@ 0x38
 8001a0c:	dc19      	bgt.n	8001a42 <__aeabi_dsub+0xba>
 8001a0e:	2280      	movs	r2, #128	@ 0x80
 8001a10:	9b02      	ldr	r3, [sp, #8]
 8001a12:	0412      	lsls	r2, r2, #16
 8001a14:	4313      	orrs	r3, r2
 8001a16:	9302      	str	r3, [sp, #8]
 8001a18:	4652      	mov	r2, sl
 8001a1a:	2a1f      	cmp	r2, #31
 8001a1c:	dd00      	ble.n	8001a20 <__aeabi_dsub+0x98>
 8001a1e:	e1e3      	b.n	8001de8 <__aeabi_dsub+0x460>
 8001a20:	4653      	mov	r3, sl
 8001a22:	2220      	movs	r2, #32
 8001a24:	4661      	mov	r1, ip
 8001a26:	9d02      	ldr	r5, [sp, #8]
 8001a28:	1ad2      	subs	r2, r2, r3
 8001a2a:	4095      	lsls	r5, r2
 8001a2c:	40d9      	lsrs	r1, r3
 8001a2e:	430d      	orrs	r5, r1
 8001a30:	4661      	mov	r1, ip
 8001a32:	4091      	lsls	r1, r2
 8001a34:	000a      	movs	r2, r1
 8001a36:	1e51      	subs	r1, r2, #1
 8001a38:	418a      	sbcs	r2, r1
 8001a3a:	4315      	orrs	r5, r2
 8001a3c:	9a02      	ldr	r2, [sp, #8]
 8001a3e:	40da      	lsrs	r2, r3
 8001a40:	1aa4      	subs	r4, r4, r2
 8001a42:	1b45      	subs	r5, r0, r5
 8001a44:	42a8      	cmp	r0, r5
 8001a46:	4180      	sbcs	r0, r0
 8001a48:	4240      	negs	r0, r0
 8001a4a:	1a24      	subs	r4, r4, r0
 8001a4c:	0223      	lsls	r3, r4, #8
 8001a4e:	d400      	bmi.n	8001a52 <__aeabi_dsub+0xca>
 8001a50:	e13d      	b.n	8001cce <__aeabi_dsub+0x346>
 8001a52:	0264      	lsls	r4, r4, #9
 8001a54:	0a64      	lsrs	r4, r4, #9
 8001a56:	2c00      	cmp	r4, #0
 8001a58:	d100      	bne.n	8001a5c <__aeabi_dsub+0xd4>
 8001a5a:	e147      	b.n	8001cec <__aeabi_dsub+0x364>
 8001a5c:	0020      	movs	r0, r4
 8001a5e:	f000 fbdf 	bl	8002220 <__clzsi2>
 8001a62:	0003      	movs	r3, r0
 8001a64:	3b08      	subs	r3, #8
 8001a66:	2120      	movs	r1, #32
 8001a68:	0028      	movs	r0, r5
 8001a6a:	1aca      	subs	r2, r1, r3
 8001a6c:	40d0      	lsrs	r0, r2
 8001a6e:	409c      	lsls	r4, r3
 8001a70:	0002      	movs	r2, r0
 8001a72:	409d      	lsls	r5, r3
 8001a74:	4322      	orrs	r2, r4
 8001a76:	429f      	cmp	r7, r3
 8001a78:	dd00      	ble.n	8001a7c <__aeabi_dsub+0xf4>
 8001a7a:	e177      	b.n	8001d6c <__aeabi_dsub+0x3e4>
 8001a7c:	1bd8      	subs	r0, r3, r7
 8001a7e:	3001      	adds	r0, #1
 8001a80:	1a09      	subs	r1, r1, r0
 8001a82:	002c      	movs	r4, r5
 8001a84:	408d      	lsls	r5, r1
 8001a86:	40c4      	lsrs	r4, r0
 8001a88:	1e6b      	subs	r3, r5, #1
 8001a8a:	419d      	sbcs	r5, r3
 8001a8c:	0013      	movs	r3, r2
 8001a8e:	40c2      	lsrs	r2, r0
 8001a90:	408b      	lsls	r3, r1
 8001a92:	4325      	orrs	r5, r4
 8001a94:	2700      	movs	r7, #0
 8001a96:	0014      	movs	r4, r2
 8001a98:	431d      	orrs	r5, r3
 8001a9a:	076b      	lsls	r3, r5, #29
 8001a9c:	d009      	beq.n	8001ab2 <__aeabi_dsub+0x12a>
 8001a9e:	230f      	movs	r3, #15
 8001aa0:	402b      	ands	r3, r5
 8001aa2:	2b04      	cmp	r3, #4
 8001aa4:	d005      	beq.n	8001ab2 <__aeabi_dsub+0x12a>
 8001aa6:	1d2b      	adds	r3, r5, #4
 8001aa8:	42ab      	cmp	r3, r5
 8001aaa:	41ad      	sbcs	r5, r5
 8001aac:	426d      	negs	r5, r5
 8001aae:	1964      	adds	r4, r4, r5
 8001ab0:	001d      	movs	r5, r3
 8001ab2:	0223      	lsls	r3, r4, #8
 8001ab4:	d400      	bmi.n	8001ab8 <__aeabi_dsub+0x130>
 8001ab6:	e140      	b.n	8001d3a <__aeabi_dsub+0x3b2>
 8001ab8:	4a88      	ldr	r2, [pc, #544]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001aba:	3701      	adds	r7, #1
 8001abc:	4297      	cmp	r7, r2
 8001abe:	d100      	bne.n	8001ac2 <__aeabi_dsub+0x13a>
 8001ac0:	e101      	b.n	8001cc6 <__aeabi_dsub+0x33e>
 8001ac2:	2601      	movs	r6, #1
 8001ac4:	4643      	mov	r3, r8
 8001ac6:	4986      	ldr	r1, [pc, #536]	@ (8001ce0 <__aeabi_dsub+0x358>)
 8001ac8:	08ed      	lsrs	r5, r5, #3
 8001aca:	4021      	ands	r1, r4
 8001acc:	074a      	lsls	r2, r1, #29
 8001ace:	432a      	orrs	r2, r5
 8001ad0:	057c      	lsls	r4, r7, #21
 8001ad2:	024d      	lsls	r5, r1, #9
 8001ad4:	0b2d      	lsrs	r5, r5, #12
 8001ad6:	0d64      	lsrs	r4, r4, #21
 8001ad8:	401e      	ands	r6, r3
 8001ada:	0524      	lsls	r4, r4, #20
 8001adc:	432c      	orrs	r4, r5
 8001ade:	07f6      	lsls	r6, r6, #31
 8001ae0:	4334      	orrs	r4, r6
 8001ae2:	0010      	movs	r0, r2
 8001ae4:	0021      	movs	r1, r4
 8001ae6:	b005      	add	sp, #20
 8001ae8:	bcf0      	pop	{r4, r5, r6, r7}
 8001aea:	46bb      	mov	fp, r7
 8001aec:	46b2      	mov	sl, r6
 8001aee:	46a9      	mov	r9, r5
 8001af0:	46a0      	mov	r8, r4
 8001af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001af4:	2d00      	cmp	r5, #0
 8001af6:	dc00      	bgt.n	8001afa <__aeabi_dsub+0x172>
 8001af8:	e2d0      	b.n	800209c <__aeabi_dsub+0x714>
 8001afa:	4649      	mov	r1, r9
 8001afc:	2900      	cmp	r1, #0
 8001afe:	d000      	beq.n	8001b02 <__aeabi_dsub+0x17a>
 8001b00:	e0d4      	b.n	8001cac <__aeabi_dsub+0x324>
 8001b02:	4661      	mov	r1, ip
 8001b04:	9b02      	ldr	r3, [sp, #8]
 8001b06:	4319      	orrs	r1, r3
 8001b08:	d100      	bne.n	8001b0c <__aeabi_dsub+0x184>
 8001b0a:	e12b      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001b0c:	1e69      	subs	r1, r5, #1
 8001b0e:	2d01      	cmp	r5, #1
 8001b10:	d100      	bne.n	8001b14 <__aeabi_dsub+0x18c>
 8001b12:	e1d9      	b.n	8001ec8 <__aeabi_dsub+0x540>
 8001b14:	4295      	cmp	r5, r2
 8001b16:	d100      	bne.n	8001b1a <__aeabi_dsub+0x192>
 8001b18:	e10a      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001b1a:	2501      	movs	r5, #1
 8001b1c:	2938      	cmp	r1, #56	@ 0x38
 8001b1e:	dc17      	bgt.n	8001b50 <__aeabi_dsub+0x1c8>
 8001b20:	468a      	mov	sl, r1
 8001b22:	4653      	mov	r3, sl
 8001b24:	2b1f      	cmp	r3, #31
 8001b26:	dd00      	ble.n	8001b2a <__aeabi_dsub+0x1a2>
 8001b28:	e1e7      	b.n	8001efa <__aeabi_dsub+0x572>
 8001b2a:	2220      	movs	r2, #32
 8001b2c:	1ad2      	subs	r2, r2, r3
 8001b2e:	9b02      	ldr	r3, [sp, #8]
 8001b30:	4661      	mov	r1, ip
 8001b32:	4093      	lsls	r3, r2
 8001b34:	001d      	movs	r5, r3
 8001b36:	4653      	mov	r3, sl
 8001b38:	40d9      	lsrs	r1, r3
 8001b3a:	4663      	mov	r3, ip
 8001b3c:	4093      	lsls	r3, r2
 8001b3e:	001a      	movs	r2, r3
 8001b40:	430d      	orrs	r5, r1
 8001b42:	1e51      	subs	r1, r2, #1
 8001b44:	418a      	sbcs	r2, r1
 8001b46:	4653      	mov	r3, sl
 8001b48:	4315      	orrs	r5, r2
 8001b4a:	9a02      	ldr	r2, [sp, #8]
 8001b4c:	40da      	lsrs	r2, r3
 8001b4e:	18a4      	adds	r4, r4, r2
 8001b50:	182d      	adds	r5, r5, r0
 8001b52:	4285      	cmp	r5, r0
 8001b54:	4180      	sbcs	r0, r0
 8001b56:	4240      	negs	r0, r0
 8001b58:	1824      	adds	r4, r4, r0
 8001b5a:	0223      	lsls	r3, r4, #8
 8001b5c:	d400      	bmi.n	8001b60 <__aeabi_dsub+0x1d8>
 8001b5e:	e0b6      	b.n	8001cce <__aeabi_dsub+0x346>
 8001b60:	4b5e      	ldr	r3, [pc, #376]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001b62:	3701      	adds	r7, #1
 8001b64:	429f      	cmp	r7, r3
 8001b66:	d100      	bne.n	8001b6a <__aeabi_dsub+0x1e2>
 8001b68:	e0ad      	b.n	8001cc6 <__aeabi_dsub+0x33e>
 8001b6a:	2101      	movs	r1, #1
 8001b6c:	4b5c      	ldr	r3, [pc, #368]	@ (8001ce0 <__aeabi_dsub+0x358>)
 8001b6e:	086a      	lsrs	r2, r5, #1
 8001b70:	401c      	ands	r4, r3
 8001b72:	4029      	ands	r1, r5
 8001b74:	430a      	orrs	r2, r1
 8001b76:	07e5      	lsls	r5, r4, #31
 8001b78:	4315      	orrs	r5, r2
 8001b7a:	0864      	lsrs	r4, r4, #1
 8001b7c:	e78d      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001b7e:	4a59      	ldr	r2, [pc, #356]	@ (8001ce4 <__aeabi_dsub+0x35c>)
 8001b80:	9b02      	ldr	r3, [sp, #8]
 8001b82:	4692      	mov	sl, r2
 8001b84:	4662      	mov	r2, ip
 8001b86:	44ba      	add	sl, r7
 8001b88:	431a      	orrs	r2, r3
 8001b8a:	d02c      	beq.n	8001be6 <__aeabi_dsub+0x25e>
 8001b8c:	428e      	cmp	r6, r1
 8001b8e:	d02e      	beq.n	8001bee <__aeabi_dsub+0x266>
 8001b90:	4652      	mov	r2, sl
 8001b92:	2a00      	cmp	r2, #0
 8001b94:	d060      	beq.n	8001c58 <__aeabi_dsub+0x2d0>
 8001b96:	2f00      	cmp	r7, #0
 8001b98:	d100      	bne.n	8001b9c <__aeabi_dsub+0x214>
 8001b9a:	e0db      	b.n	8001d54 <__aeabi_dsub+0x3cc>
 8001b9c:	4663      	mov	r3, ip
 8001b9e:	000e      	movs	r6, r1
 8001ba0:	9c02      	ldr	r4, [sp, #8]
 8001ba2:	08d8      	lsrs	r0, r3, #3
 8001ba4:	0762      	lsls	r2, r4, #29
 8001ba6:	4302      	orrs	r2, r0
 8001ba8:	08e4      	lsrs	r4, r4, #3
 8001baa:	0013      	movs	r3, r2
 8001bac:	4323      	orrs	r3, r4
 8001bae:	d100      	bne.n	8001bb2 <__aeabi_dsub+0x22a>
 8001bb0:	e254      	b.n	800205c <__aeabi_dsub+0x6d4>
 8001bb2:	2580      	movs	r5, #128	@ 0x80
 8001bb4:	032d      	lsls	r5, r5, #12
 8001bb6:	4325      	orrs	r5, r4
 8001bb8:	032d      	lsls	r5, r5, #12
 8001bba:	4c48      	ldr	r4, [pc, #288]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001bbc:	0b2d      	lsrs	r5, r5, #12
 8001bbe:	e78c      	b.n	8001ada <__aeabi_dsub+0x152>
 8001bc0:	4661      	mov	r1, ip
 8001bc2:	9b02      	ldr	r3, [sp, #8]
 8001bc4:	4319      	orrs	r1, r3
 8001bc6:	d100      	bne.n	8001bca <__aeabi_dsub+0x242>
 8001bc8:	e0cc      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001bca:	0029      	movs	r1, r5
 8001bcc:	3901      	subs	r1, #1
 8001bce:	2d01      	cmp	r5, #1
 8001bd0:	d100      	bne.n	8001bd4 <__aeabi_dsub+0x24c>
 8001bd2:	e188      	b.n	8001ee6 <__aeabi_dsub+0x55e>
 8001bd4:	4295      	cmp	r5, r2
 8001bd6:	d100      	bne.n	8001bda <__aeabi_dsub+0x252>
 8001bd8:	e0aa      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001bda:	2501      	movs	r5, #1
 8001bdc:	2938      	cmp	r1, #56	@ 0x38
 8001bde:	dd00      	ble.n	8001be2 <__aeabi_dsub+0x25a>
 8001be0:	e72f      	b.n	8001a42 <__aeabi_dsub+0xba>
 8001be2:	468a      	mov	sl, r1
 8001be4:	e718      	b.n	8001a18 <__aeabi_dsub+0x90>
 8001be6:	2201      	movs	r2, #1
 8001be8:	4051      	eors	r1, r2
 8001bea:	428e      	cmp	r6, r1
 8001bec:	d1d0      	bne.n	8001b90 <__aeabi_dsub+0x208>
 8001bee:	4653      	mov	r3, sl
 8001bf0:	2b00      	cmp	r3, #0
 8001bf2:	d100      	bne.n	8001bf6 <__aeabi_dsub+0x26e>
 8001bf4:	e0be      	b.n	8001d74 <__aeabi_dsub+0x3ec>
 8001bf6:	2f00      	cmp	r7, #0
 8001bf8:	d000      	beq.n	8001bfc <__aeabi_dsub+0x274>
 8001bfa:	e138      	b.n	8001e6e <__aeabi_dsub+0x4e6>
 8001bfc:	46ca      	mov	sl, r9
 8001bfe:	0022      	movs	r2, r4
 8001c00:	4302      	orrs	r2, r0
 8001c02:	d100      	bne.n	8001c06 <__aeabi_dsub+0x27e>
 8001c04:	e1e2      	b.n	8001fcc <__aeabi_dsub+0x644>
 8001c06:	4653      	mov	r3, sl
 8001c08:	1e59      	subs	r1, r3, #1
 8001c0a:	2b01      	cmp	r3, #1
 8001c0c:	d100      	bne.n	8001c10 <__aeabi_dsub+0x288>
 8001c0e:	e20d      	b.n	800202c <__aeabi_dsub+0x6a4>
 8001c10:	4a32      	ldr	r2, [pc, #200]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001c12:	4592      	cmp	sl, r2
 8001c14:	d100      	bne.n	8001c18 <__aeabi_dsub+0x290>
 8001c16:	e1d2      	b.n	8001fbe <__aeabi_dsub+0x636>
 8001c18:	2701      	movs	r7, #1
 8001c1a:	2938      	cmp	r1, #56	@ 0x38
 8001c1c:	dc13      	bgt.n	8001c46 <__aeabi_dsub+0x2be>
 8001c1e:	291f      	cmp	r1, #31
 8001c20:	dd00      	ble.n	8001c24 <__aeabi_dsub+0x29c>
 8001c22:	e1ee      	b.n	8002002 <__aeabi_dsub+0x67a>
 8001c24:	2220      	movs	r2, #32
 8001c26:	9b02      	ldr	r3, [sp, #8]
 8001c28:	1a52      	subs	r2, r2, r1
 8001c2a:	0025      	movs	r5, r4
 8001c2c:	0007      	movs	r7, r0
 8001c2e:	469a      	mov	sl, r3
 8001c30:	40cc      	lsrs	r4, r1
 8001c32:	4090      	lsls	r0, r2
 8001c34:	4095      	lsls	r5, r2
 8001c36:	40cf      	lsrs	r7, r1
 8001c38:	44a2      	add	sl, r4
 8001c3a:	1e42      	subs	r2, r0, #1
 8001c3c:	4190      	sbcs	r0, r2
 8001c3e:	4653      	mov	r3, sl
 8001c40:	432f      	orrs	r7, r5
 8001c42:	4307      	orrs	r7, r0
 8001c44:	9302      	str	r3, [sp, #8]
 8001c46:	003d      	movs	r5, r7
 8001c48:	4465      	add	r5, ip
 8001c4a:	4565      	cmp	r5, ip
 8001c4c:	4192      	sbcs	r2, r2
 8001c4e:	9b02      	ldr	r3, [sp, #8]
 8001c50:	4252      	negs	r2, r2
 8001c52:	464f      	mov	r7, r9
 8001c54:	18d4      	adds	r4, r2, r3
 8001c56:	e780      	b.n	8001b5a <__aeabi_dsub+0x1d2>
 8001c58:	4a23      	ldr	r2, [pc, #140]	@ (8001ce8 <__aeabi_dsub+0x360>)
 8001c5a:	1c7d      	adds	r5, r7, #1
 8001c5c:	4215      	tst	r5, r2
 8001c5e:	d000      	beq.n	8001c62 <__aeabi_dsub+0x2da>
 8001c60:	e0aa      	b.n	8001db8 <__aeabi_dsub+0x430>
 8001c62:	4662      	mov	r2, ip
 8001c64:	0025      	movs	r5, r4
 8001c66:	9b02      	ldr	r3, [sp, #8]
 8001c68:	4305      	orrs	r5, r0
 8001c6a:	431a      	orrs	r2, r3
 8001c6c:	2f00      	cmp	r7, #0
 8001c6e:	d000      	beq.n	8001c72 <__aeabi_dsub+0x2ea>
 8001c70:	e0f5      	b.n	8001e5e <__aeabi_dsub+0x4d6>
 8001c72:	2d00      	cmp	r5, #0
 8001c74:	d100      	bne.n	8001c78 <__aeabi_dsub+0x2f0>
 8001c76:	e16b      	b.n	8001f50 <__aeabi_dsub+0x5c8>
 8001c78:	2a00      	cmp	r2, #0
 8001c7a:	d100      	bne.n	8001c7e <__aeabi_dsub+0x2f6>
 8001c7c:	e152      	b.n	8001f24 <__aeabi_dsub+0x59c>
 8001c7e:	4663      	mov	r3, ip
 8001c80:	1ac5      	subs	r5, r0, r3
 8001c82:	9b02      	ldr	r3, [sp, #8]
 8001c84:	1ae2      	subs	r2, r4, r3
 8001c86:	42a8      	cmp	r0, r5
 8001c88:	419b      	sbcs	r3, r3
 8001c8a:	425b      	negs	r3, r3
 8001c8c:	1ad3      	subs	r3, r2, r3
 8001c8e:	021a      	lsls	r2, r3, #8
 8001c90:	d400      	bmi.n	8001c94 <__aeabi_dsub+0x30c>
 8001c92:	e1d5      	b.n	8002040 <__aeabi_dsub+0x6b8>
 8001c94:	4663      	mov	r3, ip
 8001c96:	1a1d      	subs	r5, r3, r0
 8001c98:	45ac      	cmp	ip, r5
 8001c9a:	4192      	sbcs	r2, r2
 8001c9c:	2601      	movs	r6, #1
 8001c9e:	9b02      	ldr	r3, [sp, #8]
 8001ca0:	4252      	negs	r2, r2
 8001ca2:	1b1c      	subs	r4, r3, r4
 8001ca4:	4688      	mov	r8, r1
 8001ca6:	1aa4      	subs	r4, r4, r2
 8001ca8:	400e      	ands	r6, r1
 8001caa:	e6f6      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001cac:	4297      	cmp	r7, r2
 8001cae:	d03f      	beq.n	8001d30 <__aeabi_dsub+0x3a8>
 8001cb0:	4652      	mov	r2, sl
 8001cb2:	2501      	movs	r5, #1
 8001cb4:	2a38      	cmp	r2, #56	@ 0x38
 8001cb6:	dd00      	ble.n	8001cba <__aeabi_dsub+0x332>
 8001cb8:	e74a      	b.n	8001b50 <__aeabi_dsub+0x1c8>
 8001cba:	2280      	movs	r2, #128	@ 0x80
 8001cbc:	9b02      	ldr	r3, [sp, #8]
 8001cbe:	0412      	lsls	r2, r2, #16
 8001cc0:	4313      	orrs	r3, r2
 8001cc2:	9302      	str	r3, [sp, #8]
 8001cc4:	e72d      	b.n	8001b22 <__aeabi_dsub+0x19a>
 8001cc6:	003c      	movs	r4, r7
 8001cc8:	2500      	movs	r5, #0
 8001cca:	2200      	movs	r2, #0
 8001ccc:	e705      	b.n	8001ada <__aeabi_dsub+0x152>
 8001cce:	2307      	movs	r3, #7
 8001cd0:	402b      	ands	r3, r5
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d000      	beq.n	8001cd8 <__aeabi_dsub+0x350>
 8001cd6:	e6e2      	b.n	8001a9e <__aeabi_dsub+0x116>
 8001cd8:	e06b      	b.n	8001db2 <__aeabi_dsub+0x42a>
 8001cda:	46c0      	nop			@ (mov r8, r8)
 8001cdc:	000007ff 	.word	0x000007ff
 8001ce0:	ff7fffff 	.word	0xff7fffff
 8001ce4:	fffff801 	.word	0xfffff801
 8001ce8:	000007fe 	.word	0x000007fe
 8001cec:	0028      	movs	r0, r5
 8001cee:	f000 fa97 	bl	8002220 <__clzsi2>
 8001cf2:	0003      	movs	r3, r0
 8001cf4:	3318      	adds	r3, #24
 8001cf6:	2b1f      	cmp	r3, #31
 8001cf8:	dc00      	bgt.n	8001cfc <__aeabi_dsub+0x374>
 8001cfa:	e6b4      	b.n	8001a66 <__aeabi_dsub+0xde>
 8001cfc:	002a      	movs	r2, r5
 8001cfe:	3808      	subs	r0, #8
 8001d00:	4082      	lsls	r2, r0
 8001d02:	429f      	cmp	r7, r3
 8001d04:	dd00      	ble.n	8001d08 <__aeabi_dsub+0x380>
 8001d06:	e0b9      	b.n	8001e7c <__aeabi_dsub+0x4f4>
 8001d08:	1bdb      	subs	r3, r3, r7
 8001d0a:	1c58      	adds	r0, r3, #1
 8001d0c:	281f      	cmp	r0, #31
 8001d0e:	dc00      	bgt.n	8001d12 <__aeabi_dsub+0x38a>
 8001d10:	e1a0      	b.n	8002054 <__aeabi_dsub+0x6cc>
 8001d12:	0015      	movs	r5, r2
 8001d14:	3b1f      	subs	r3, #31
 8001d16:	40dd      	lsrs	r5, r3
 8001d18:	2820      	cmp	r0, #32
 8001d1a:	d005      	beq.n	8001d28 <__aeabi_dsub+0x3a0>
 8001d1c:	2340      	movs	r3, #64	@ 0x40
 8001d1e:	1a1b      	subs	r3, r3, r0
 8001d20:	409a      	lsls	r2, r3
 8001d22:	1e53      	subs	r3, r2, #1
 8001d24:	419a      	sbcs	r2, r3
 8001d26:	4315      	orrs	r5, r2
 8001d28:	2307      	movs	r3, #7
 8001d2a:	2700      	movs	r7, #0
 8001d2c:	402b      	ands	r3, r5
 8001d2e:	e7d0      	b.n	8001cd2 <__aeabi_dsub+0x34a>
 8001d30:	08c0      	lsrs	r0, r0, #3
 8001d32:	0762      	lsls	r2, r4, #29
 8001d34:	4302      	orrs	r2, r0
 8001d36:	08e4      	lsrs	r4, r4, #3
 8001d38:	e737      	b.n	8001baa <__aeabi_dsub+0x222>
 8001d3a:	08ea      	lsrs	r2, r5, #3
 8001d3c:	0763      	lsls	r3, r4, #29
 8001d3e:	431a      	orrs	r2, r3
 8001d40:	4bd3      	ldr	r3, [pc, #844]	@ (8002090 <__aeabi_dsub+0x708>)
 8001d42:	08e4      	lsrs	r4, r4, #3
 8001d44:	429f      	cmp	r7, r3
 8001d46:	d100      	bne.n	8001d4a <__aeabi_dsub+0x3c2>
 8001d48:	e72f      	b.n	8001baa <__aeabi_dsub+0x222>
 8001d4a:	0324      	lsls	r4, r4, #12
 8001d4c:	0b25      	lsrs	r5, r4, #12
 8001d4e:	057c      	lsls	r4, r7, #21
 8001d50:	0d64      	lsrs	r4, r4, #21
 8001d52:	e6c2      	b.n	8001ada <__aeabi_dsub+0x152>
 8001d54:	46ca      	mov	sl, r9
 8001d56:	0022      	movs	r2, r4
 8001d58:	4302      	orrs	r2, r0
 8001d5a:	d158      	bne.n	8001e0e <__aeabi_dsub+0x486>
 8001d5c:	4663      	mov	r3, ip
 8001d5e:	000e      	movs	r6, r1
 8001d60:	9c02      	ldr	r4, [sp, #8]
 8001d62:	9303      	str	r3, [sp, #12]
 8001d64:	9b03      	ldr	r3, [sp, #12]
 8001d66:	4657      	mov	r7, sl
 8001d68:	08da      	lsrs	r2, r3, #3
 8001d6a:	e7e7      	b.n	8001d3c <__aeabi_dsub+0x3b4>
 8001d6c:	4cc9      	ldr	r4, [pc, #804]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001d6e:	1aff      	subs	r7, r7, r3
 8001d70:	4014      	ands	r4, r2
 8001d72:	e692      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001d74:	4dc8      	ldr	r5, [pc, #800]	@ (8002098 <__aeabi_dsub+0x710>)
 8001d76:	1c7a      	adds	r2, r7, #1
 8001d78:	422a      	tst	r2, r5
 8001d7a:	d000      	beq.n	8001d7e <__aeabi_dsub+0x3f6>
 8001d7c:	e084      	b.n	8001e88 <__aeabi_dsub+0x500>
 8001d7e:	0022      	movs	r2, r4
 8001d80:	4302      	orrs	r2, r0
 8001d82:	2f00      	cmp	r7, #0
 8001d84:	d000      	beq.n	8001d88 <__aeabi_dsub+0x400>
 8001d86:	e0ef      	b.n	8001f68 <__aeabi_dsub+0x5e0>
 8001d88:	2a00      	cmp	r2, #0
 8001d8a:	d100      	bne.n	8001d8e <__aeabi_dsub+0x406>
 8001d8c:	e0e5      	b.n	8001f5a <__aeabi_dsub+0x5d2>
 8001d8e:	4662      	mov	r2, ip
 8001d90:	9902      	ldr	r1, [sp, #8]
 8001d92:	430a      	orrs	r2, r1
 8001d94:	d100      	bne.n	8001d98 <__aeabi_dsub+0x410>
 8001d96:	e0c5      	b.n	8001f24 <__aeabi_dsub+0x59c>
 8001d98:	4663      	mov	r3, ip
 8001d9a:	18c5      	adds	r5, r0, r3
 8001d9c:	468c      	mov	ip, r1
 8001d9e:	4285      	cmp	r5, r0
 8001da0:	4180      	sbcs	r0, r0
 8001da2:	4464      	add	r4, ip
 8001da4:	4240      	negs	r0, r0
 8001da6:	1824      	adds	r4, r4, r0
 8001da8:	0223      	lsls	r3, r4, #8
 8001daa:	d502      	bpl.n	8001db2 <__aeabi_dsub+0x42a>
 8001dac:	4bb9      	ldr	r3, [pc, #740]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001dae:	3701      	adds	r7, #1
 8001db0:	401c      	ands	r4, r3
 8001db2:	46ba      	mov	sl, r7
 8001db4:	9503      	str	r5, [sp, #12]
 8001db6:	e7d5      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001db8:	4662      	mov	r2, ip
 8001dba:	1a85      	subs	r5, r0, r2
 8001dbc:	42a8      	cmp	r0, r5
 8001dbe:	4192      	sbcs	r2, r2
 8001dc0:	4252      	negs	r2, r2
 8001dc2:	4691      	mov	r9, r2
 8001dc4:	9b02      	ldr	r3, [sp, #8]
 8001dc6:	1ae3      	subs	r3, r4, r3
 8001dc8:	001a      	movs	r2, r3
 8001dca:	464b      	mov	r3, r9
 8001dcc:	1ad2      	subs	r2, r2, r3
 8001dce:	0013      	movs	r3, r2
 8001dd0:	4691      	mov	r9, r2
 8001dd2:	021a      	lsls	r2, r3, #8
 8001dd4:	d46c      	bmi.n	8001eb0 <__aeabi_dsub+0x528>
 8001dd6:	464a      	mov	r2, r9
 8001dd8:	464c      	mov	r4, r9
 8001dda:	432a      	orrs	r2, r5
 8001ddc:	d000      	beq.n	8001de0 <__aeabi_dsub+0x458>
 8001dde:	e63a      	b.n	8001a56 <__aeabi_dsub+0xce>
 8001de0:	2600      	movs	r6, #0
 8001de2:	2400      	movs	r4, #0
 8001de4:	2500      	movs	r5, #0
 8001de6:	e678      	b.n	8001ada <__aeabi_dsub+0x152>
 8001de8:	9902      	ldr	r1, [sp, #8]
 8001dea:	4653      	mov	r3, sl
 8001dec:	000d      	movs	r5, r1
 8001dee:	3a20      	subs	r2, #32
 8001df0:	40d5      	lsrs	r5, r2
 8001df2:	2b20      	cmp	r3, #32
 8001df4:	d006      	beq.n	8001e04 <__aeabi_dsub+0x47c>
 8001df6:	2240      	movs	r2, #64	@ 0x40
 8001df8:	1ad2      	subs	r2, r2, r3
 8001dfa:	000b      	movs	r3, r1
 8001dfc:	4093      	lsls	r3, r2
 8001dfe:	4662      	mov	r2, ip
 8001e00:	431a      	orrs	r2, r3
 8001e02:	4693      	mov	fp, r2
 8001e04:	465b      	mov	r3, fp
 8001e06:	1e5a      	subs	r2, r3, #1
 8001e08:	4193      	sbcs	r3, r2
 8001e0a:	431d      	orrs	r5, r3
 8001e0c:	e619      	b.n	8001a42 <__aeabi_dsub+0xba>
 8001e0e:	4653      	mov	r3, sl
 8001e10:	1e5a      	subs	r2, r3, #1
 8001e12:	2b01      	cmp	r3, #1
 8001e14:	d100      	bne.n	8001e18 <__aeabi_dsub+0x490>
 8001e16:	e0c6      	b.n	8001fa6 <__aeabi_dsub+0x61e>
 8001e18:	4e9d      	ldr	r6, [pc, #628]	@ (8002090 <__aeabi_dsub+0x708>)
 8001e1a:	45b2      	cmp	sl, r6
 8001e1c:	d100      	bne.n	8001e20 <__aeabi_dsub+0x498>
 8001e1e:	e6bd      	b.n	8001b9c <__aeabi_dsub+0x214>
 8001e20:	4688      	mov	r8, r1
 8001e22:	000e      	movs	r6, r1
 8001e24:	2501      	movs	r5, #1
 8001e26:	2a38      	cmp	r2, #56	@ 0x38
 8001e28:	dc10      	bgt.n	8001e4c <__aeabi_dsub+0x4c4>
 8001e2a:	2a1f      	cmp	r2, #31
 8001e2c:	dc7f      	bgt.n	8001f2e <__aeabi_dsub+0x5a6>
 8001e2e:	2120      	movs	r1, #32
 8001e30:	0025      	movs	r5, r4
 8001e32:	1a89      	subs	r1, r1, r2
 8001e34:	0007      	movs	r7, r0
 8001e36:	4088      	lsls	r0, r1
 8001e38:	408d      	lsls	r5, r1
 8001e3a:	40d7      	lsrs	r7, r2
 8001e3c:	40d4      	lsrs	r4, r2
 8001e3e:	1e41      	subs	r1, r0, #1
 8001e40:	4188      	sbcs	r0, r1
 8001e42:	9b02      	ldr	r3, [sp, #8]
 8001e44:	433d      	orrs	r5, r7
 8001e46:	1b1b      	subs	r3, r3, r4
 8001e48:	4305      	orrs	r5, r0
 8001e4a:	9302      	str	r3, [sp, #8]
 8001e4c:	4662      	mov	r2, ip
 8001e4e:	1b55      	subs	r5, r2, r5
 8001e50:	45ac      	cmp	ip, r5
 8001e52:	4192      	sbcs	r2, r2
 8001e54:	9b02      	ldr	r3, [sp, #8]
 8001e56:	4252      	negs	r2, r2
 8001e58:	464f      	mov	r7, r9
 8001e5a:	1a9c      	subs	r4, r3, r2
 8001e5c:	e5f6      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001e5e:	2d00      	cmp	r5, #0
 8001e60:	d000      	beq.n	8001e64 <__aeabi_dsub+0x4dc>
 8001e62:	e0b7      	b.n	8001fd4 <__aeabi_dsub+0x64c>
 8001e64:	2a00      	cmp	r2, #0
 8001e66:	d100      	bne.n	8001e6a <__aeabi_dsub+0x4e2>
 8001e68:	e0f0      	b.n	800204c <__aeabi_dsub+0x6c4>
 8001e6a:	2601      	movs	r6, #1
 8001e6c:	400e      	ands	r6, r1
 8001e6e:	4663      	mov	r3, ip
 8001e70:	9802      	ldr	r0, [sp, #8]
 8001e72:	08d9      	lsrs	r1, r3, #3
 8001e74:	0742      	lsls	r2, r0, #29
 8001e76:	430a      	orrs	r2, r1
 8001e78:	08c4      	lsrs	r4, r0, #3
 8001e7a:	e696      	b.n	8001baa <__aeabi_dsub+0x222>
 8001e7c:	4c85      	ldr	r4, [pc, #532]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001e7e:	1aff      	subs	r7, r7, r3
 8001e80:	4014      	ands	r4, r2
 8001e82:	0762      	lsls	r2, r4, #29
 8001e84:	08e4      	lsrs	r4, r4, #3
 8001e86:	e760      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001e88:	4981      	ldr	r1, [pc, #516]	@ (8002090 <__aeabi_dsub+0x708>)
 8001e8a:	428a      	cmp	r2, r1
 8001e8c:	d100      	bne.n	8001e90 <__aeabi_dsub+0x508>
 8001e8e:	e0c9      	b.n	8002024 <__aeabi_dsub+0x69c>
 8001e90:	4663      	mov	r3, ip
 8001e92:	18c1      	adds	r1, r0, r3
 8001e94:	4281      	cmp	r1, r0
 8001e96:	4180      	sbcs	r0, r0
 8001e98:	9b02      	ldr	r3, [sp, #8]
 8001e9a:	4240      	negs	r0, r0
 8001e9c:	18e3      	adds	r3, r4, r3
 8001e9e:	181b      	adds	r3, r3, r0
 8001ea0:	07dd      	lsls	r5, r3, #31
 8001ea2:	085c      	lsrs	r4, r3, #1
 8001ea4:	2307      	movs	r3, #7
 8001ea6:	0849      	lsrs	r1, r1, #1
 8001ea8:	430d      	orrs	r5, r1
 8001eaa:	0017      	movs	r7, r2
 8001eac:	402b      	ands	r3, r5
 8001eae:	e710      	b.n	8001cd2 <__aeabi_dsub+0x34a>
 8001eb0:	4663      	mov	r3, ip
 8001eb2:	1a1d      	subs	r5, r3, r0
 8001eb4:	45ac      	cmp	ip, r5
 8001eb6:	4192      	sbcs	r2, r2
 8001eb8:	2601      	movs	r6, #1
 8001eba:	9b02      	ldr	r3, [sp, #8]
 8001ebc:	4252      	negs	r2, r2
 8001ebe:	1b1c      	subs	r4, r3, r4
 8001ec0:	4688      	mov	r8, r1
 8001ec2:	1aa4      	subs	r4, r4, r2
 8001ec4:	400e      	ands	r6, r1
 8001ec6:	e5c6      	b.n	8001a56 <__aeabi_dsub+0xce>
 8001ec8:	4663      	mov	r3, ip
 8001eca:	18c5      	adds	r5, r0, r3
 8001ecc:	9b02      	ldr	r3, [sp, #8]
 8001ece:	4285      	cmp	r5, r0
 8001ed0:	4180      	sbcs	r0, r0
 8001ed2:	469c      	mov	ip, r3
 8001ed4:	4240      	negs	r0, r0
 8001ed6:	4464      	add	r4, ip
 8001ed8:	1824      	adds	r4, r4, r0
 8001eda:	2701      	movs	r7, #1
 8001edc:	0223      	lsls	r3, r4, #8
 8001ede:	d400      	bmi.n	8001ee2 <__aeabi_dsub+0x55a>
 8001ee0:	e6f5      	b.n	8001cce <__aeabi_dsub+0x346>
 8001ee2:	2702      	movs	r7, #2
 8001ee4:	e641      	b.n	8001b6a <__aeabi_dsub+0x1e2>
 8001ee6:	4663      	mov	r3, ip
 8001ee8:	1ac5      	subs	r5, r0, r3
 8001eea:	42a8      	cmp	r0, r5
 8001eec:	4180      	sbcs	r0, r0
 8001eee:	9b02      	ldr	r3, [sp, #8]
 8001ef0:	4240      	negs	r0, r0
 8001ef2:	1ae4      	subs	r4, r4, r3
 8001ef4:	2701      	movs	r7, #1
 8001ef6:	1a24      	subs	r4, r4, r0
 8001ef8:	e5a8      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001efa:	9d02      	ldr	r5, [sp, #8]
 8001efc:	4652      	mov	r2, sl
 8001efe:	002b      	movs	r3, r5
 8001f00:	3a20      	subs	r2, #32
 8001f02:	40d3      	lsrs	r3, r2
 8001f04:	0019      	movs	r1, r3
 8001f06:	4653      	mov	r3, sl
 8001f08:	2b20      	cmp	r3, #32
 8001f0a:	d006      	beq.n	8001f1a <__aeabi_dsub+0x592>
 8001f0c:	2240      	movs	r2, #64	@ 0x40
 8001f0e:	1ad2      	subs	r2, r2, r3
 8001f10:	002b      	movs	r3, r5
 8001f12:	4093      	lsls	r3, r2
 8001f14:	4662      	mov	r2, ip
 8001f16:	431a      	orrs	r2, r3
 8001f18:	4693      	mov	fp, r2
 8001f1a:	465d      	mov	r5, fp
 8001f1c:	1e6b      	subs	r3, r5, #1
 8001f1e:	419d      	sbcs	r5, r3
 8001f20:	430d      	orrs	r5, r1
 8001f22:	e615      	b.n	8001b50 <__aeabi_dsub+0x1c8>
 8001f24:	0762      	lsls	r2, r4, #29
 8001f26:	08c0      	lsrs	r0, r0, #3
 8001f28:	4302      	orrs	r2, r0
 8001f2a:	08e4      	lsrs	r4, r4, #3
 8001f2c:	e70d      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001f2e:	0011      	movs	r1, r2
 8001f30:	0027      	movs	r7, r4
 8001f32:	3920      	subs	r1, #32
 8001f34:	40cf      	lsrs	r7, r1
 8001f36:	2a20      	cmp	r2, #32
 8001f38:	d005      	beq.n	8001f46 <__aeabi_dsub+0x5be>
 8001f3a:	2140      	movs	r1, #64	@ 0x40
 8001f3c:	1a8a      	subs	r2, r1, r2
 8001f3e:	4094      	lsls	r4, r2
 8001f40:	0025      	movs	r5, r4
 8001f42:	4305      	orrs	r5, r0
 8001f44:	9503      	str	r5, [sp, #12]
 8001f46:	9d03      	ldr	r5, [sp, #12]
 8001f48:	1e6a      	subs	r2, r5, #1
 8001f4a:	4195      	sbcs	r5, r2
 8001f4c:	433d      	orrs	r5, r7
 8001f4e:	e77d      	b.n	8001e4c <__aeabi_dsub+0x4c4>
 8001f50:	2a00      	cmp	r2, #0
 8001f52:	d100      	bne.n	8001f56 <__aeabi_dsub+0x5ce>
 8001f54:	e744      	b.n	8001de0 <__aeabi_dsub+0x458>
 8001f56:	2601      	movs	r6, #1
 8001f58:	400e      	ands	r6, r1
 8001f5a:	4663      	mov	r3, ip
 8001f5c:	08d9      	lsrs	r1, r3, #3
 8001f5e:	9b02      	ldr	r3, [sp, #8]
 8001f60:	075a      	lsls	r2, r3, #29
 8001f62:	430a      	orrs	r2, r1
 8001f64:	08dc      	lsrs	r4, r3, #3
 8001f66:	e6f0      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001f68:	2a00      	cmp	r2, #0
 8001f6a:	d028      	beq.n	8001fbe <__aeabi_dsub+0x636>
 8001f6c:	4662      	mov	r2, ip
 8001f6e:	9f02      	ldr	r7, [sp, #8]
 8001f70:	08c0      	lsrs	r0, r0, #3
 8001f72:	433a      	orrs	r2, r7
 8001f74:	d100      	bne.n	8001f78 <__aeabi_dsub+0x5f0>
 8001f76:	e6dc      	b.n	8001d32 <__aeabi_dsub+0x3aa>
 8001f78:	0762      	lsls	r2, r4, #29
 8001f7a:	4310      	orrs	r0, r2
 8001f7c:	2280      	movs	r2, #128	@ 0x80
 8001f7e:	08e4      	lsrs	r4, r4, #3
 8001f80:	0312      	lsls	r2, r2, #12
 8001f82:	4214      	tst	r4, r2
 8001f84:	d009      	beq.n	8001f9a <__aeabi_dsub+0x612>
 8001f86:	08fd      	lsrs	r5, r7, #3
 8001f88:	4215      	tst	r5, r2
 8001f8a:	d106      	bne.n	8001f9a <__aeabi_dsub+0x612>
 8001f8c:	4663      	mov	r3, ip
 8001f8e:	2601      	movs	r6, #1
 8001f90:	002c      	movs	r4, r5
 8001f92:	08d8      	lsrs	r0, r3, #3
 8001f94:	077b      	lsls	r3, r7, #29
 8001f96:	4318      	orrs	r0, r3
 8001f98:	400e      	ands	r6, r1
 8001f9a:	0f42      	lsrs	r2, r0, #29
 8001f9c:	00c0      	lsls	r0, r0, #3
 8001f9e:	08c0      	lsrs	r0, r0, #3
 8001fa0:	0752      	lsls	r2, r2, #29
 8001fa2:	4302      	orrs	r2, r0
 8001fa4:	e601      	b.n	8001baa <__aeabi_dsub+0x222>
 8001fa6:	4663      	mov	r3, ip
 8001fa8:	1a1d      	subs	r5, r3, r0
 8001faa:	45ac      	cmp	ip, r5
 8001fac:	4192      	sbcs	r2, r2
 8001fae:	9b02      	ldr	r3, [sp, #8]
 8001fb0:	4252      	negs	r2, r2
 8001fb2:	1b1c      	subs	r4, r3, r4
 8001fb4:	000e      	movs	r6, r1
 8001fb6:	4688      	mov	r8, r1
 8001fb8:	2701      	movs	r7, #1
 8001fba:	1aa4      	subs	r4, r4, r2
 8001fbc:	e546      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001fbe:	4663      	mov	r3, ip
 8001fc0:	08d9      	lsrs	r1, r3, #3
 8001fc2:	9b02      	ldr	r3, [sp, #8]
 8001fc4:	075a      	lsls	r2, r3, #29
 8001fc6:	430a      	orrs	r2, r1
 8001fc8:	08dc      	lsrs	r4, r3, #3
 8001fca:	e5ee      	b.n	8001baa <__aeabi_dsub+0x222>
 8001fcc:	4663      	mov	r3, ip
 8001fce:	9c02      	ldr	r4, [sp, #8]
 8001fd0:	9303      	str	r3, [sp, #12]
 8001fd2:	e6c7      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001fd4:	08c0      	lsrs	r0, r0, #3
 8001fd6:	2a00      	cmp	r2, #0
 8001fd8:	d100      	bne.n	8001fdc <__aeabi_dsub+0x654>
 8001fda:	e6aa      	b.n	8001d32 <__aeabi_dsub+0x3aa>
 8001fdc:	0762      	lsls	r2, r4, #29
 8001fde:	4310      	orrs	r0, r2
 8001fe0:	2280      	movs	r2, #128	@ 0x80
 8001fe2:	08e4      	lsrs	r4, r4, #3
 8001fe4:	0312      	lsls	r2, r2, #12
 8001fe6:	4214      	tst	r4, r2
 8001fe8:	d0d7      	beq.n	8001f9a <__aeabi_dsub+0x612>
 8001fea:	9f02      	ldr	r7, [sp, #8]
 8001fec:	08fd      	lsrs	r5, r7, #3
 8001fee:	4215      	tst	r5, r2
 8001ff0:	d1d3      	bne.n	8001f9a <__aeabi_dsub+0x612>
 8001ff2:	4663      	mov	r3, ip
 8001ff4:	2601      	movs	r6, #1
 8001ff6:	08d8      	lsrs	r0, r3, #3
 8001ff8:	077b      	lsls	r3, r7, #29
 8001ffa:	002c      	movs	r4, r5
 8001ffc:	4318      	orrs	r0, r3
 8001ffe:	400e      	ands	r6, r1
 8002000:	e7cb      	b.n	8001f9a <__aeabi_dsub+0x612>
 8002002:	000a      	movs	r2, r1
 8002004:	0027      	movs	r7, r4
 8002006:	3a20      	subs	r2, #32
 8002008:	40d7      	lsrs	r7, r2
 800200a:	2920      	cmp	r1, #32
 800200c:	d005      	beq.n	800201a <__aeabi_dsub+0x692>
 800200e:	2240      	movs	r2, #64	@ 0x40
 8002010:	1a52      	subs	r2, r2, r1
 8002012:	4094      	lsls	r4, r2
 8002014:	0025      	movs	r5, r4
 8002016:	4305      	orrs	r5, r0
 8002018:	9503      	str	r5, [sp, #12]
 800201a:	9d03      	ldr	r5, [sp, #12]
 800201c:	1e6a      	subs	r2, r5, #1
 800201e:	4195      	sbcs	r5, r2
 8002020:	432f      	orrs	r7, r5
 8002022:	e610      	b.n	8001c46 <__aeabi_dsub+0x2be>
 8002024:	0014      	movs	r4, r2
 8002026:	2500      	movs	r5, #0
 8002028:	2200      	movs	r2, #0
 800202a:	e556      	b.n	8001ada <__aeabi_dsub+0x152>
 800202c:	9b02      	ldr	r3, [sp, #8]
 800202e:	4460      	add	r0, ip
 8002030:	4699      	mov	r9, r3
 8002032:	4560      	cmp	r0, ip
 8002034:	4192      	sbcs	r2, r2
 8002036:	444c      	add	r4, r9
 8002038:	4252      	negs	r2, r2
 800203a:	0005      	movs	r5, r0
 800203c:	18a4      	adds	r4, r4, r2
 800203e:	e74c      	b.n	8001eda <__aeabi_dsub+0x552>
 8002040:	001a      	movs	r2, r3
 8002042:	001c      	movs	r4, r3
 8002044:	432a      	orrs	r2, r5
 8002046:	d000      	beq.n	800204a <__aeabi_dsub+0x6c2>
 8002048:	e6b3      	b.n	8001db2 <__aeabi_dsub+0x42a>
 800204a:	e6c9      	b.n	8001de0 <__aeabi_dsub+0x458>
 800204c:	2480      	movs	r4, #128	@ 0x80
 800204e:	2600      	movs	r6, #0
 8002050:	0324      	lsls	r4, r4, #12
 8002052:	e5ae      	b.n	8001bb2 <__aeabi_dsub+0x22a>
 8002054:	2120      	movs	r1, #32
 8002056:	2500      	movs	r5, #0
 8002058:	1a09      	subs	r1, r1, r0
 800205a:	e517      	b.n	8001a8c <__aeabi_dsub+0x104>
 800205c:	2200      	movs	r2, #0
 800205e:	2500      	movs	r5, #0
 8002060:	4c0b      	ldr	r4, [pc, #44]	@ (8002090 <__aeabi_dsub+0x708>)
 8002062:	e53a      	b.n	8001ada <__aeabi_dsub+0x152>
 8002064:	2d00      	cmp	r5, #0
 8002066:	d100      	bne.n	800206a <__aeabi_dsub+0x6e2>
 8002068:	e5f6      	b.n	8001c58 <__aeabi_dsub+0x2d0>
 800206a:	464b      	mov	r3, r9
 800206c:	1bda      	subs	r2, r3, r7
 800206e:	4692      	mov	sl, r2
 8002070:	2f00      	cmp	r7, #0
 8002072:	d100      	bne.n	8002076 <__aeabi_dsub+0x6ee>
 8002074:	e66f      	b.n	8001d56 <__aeabi_dsub+0x3ce>
 8002076:	2a38      	cmp	r2, #56	@ 0x38
 8002078:	dc05      	bgt.n	8002086 <__aeabi_dsub+0x6fe>
 800207a:	2680      	movs	r6, #128	@ 0x80
 800207c:	0436      	lsls	r6, r6, #16
 800207e:	4334      	orrs	r4, r6
 8002080:	4688      	mov	r8, r1
 8002082:	000e      	movs	r6, r1
 8002084:	e6d1      	b.n	8001e2a <__aeabi_dsub+0x4a2>
 8002086:	4688      	mov	r8, r1
 8002088:	000e      	movs	r6, r1
 800208a:	2501      	movs	r5, #1
 800208c:	e6de      	b.n	8001e4c <__aeabi_dsub+0x4c4>
 800208e:	46c0      	nop			@ (mov r8, r8)
 8002090:	000007ff 	.word	0x000007ff
 8002094:	ff7fffff 	.word	0xff7fffff
 8002098:	000007fe 	.word	0x000007fe
 800209c:	2d00      	cmp	r5, #0
 800209e:	d100      	bne.n	80020a2 <__aeabi_dsub+0x71a>
 80020a0:	e668      	b.n	8001d74 <__aeabi_dsub+0x3ec>
 80020a2:	464b      	mov	r3, r9
 80020a4:	1bd9      	subs	r1, r3, r7
 80020a6:	2f00      	cmp	r7, #0
 80020a8:	d101      	bne.n	80020ae <__aeabi_dsub+0x726>
 80020aa:	468a      	mov	sl, r1
 80020ac:	e5a7      	b.n	8001bfe <__aeabi_dsub+0x276>
 80020ae:	2701      	movs	r7, #1
 80020b0:	2938      	cmp	r1, #56	@ 0x38
 80020b2:	dd00      	ble.n	80020b6 <__aeabi_dsub+0x72e>
 80020b4:	e5c7      	b.n	8001c46 <__aeabi_dsub+0x2be>
 80020b6:	2280      	movs	r2, #128	@ 0x80
 80020b8:	0412      	lsls	r2, r2, #16
 80020ba:	4314      	orrs	r4, r2
 80020bc:	e5af      	b.n	8001c1e <__aeabi_dsub+0x296>
 80020be:	46c0      	nop			@ (mov r8, r8)

080020c0 <__aeabi_dcmpun>:
 80020c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020c2:	46c6      	mov	lr, r8
 80020c4:	031e      	lsls	r6, r3, #12
 80020c6:	0b36      	lsrs	r6, r6, #12
 80020c8:	46b0      	mov	r8, r6
 80020ca:	4e0d      	ldr	r6, [pc, #52]	@ (8002100 <__aeabi_dcmpun+0x40>)
 80020cc:	030c      	lsls	r4, r1, #12
 80020ce:	004d      	lsls	r5, r1, #1
 80020d0:	005f      	lsls	r7, r3, #1
 80020d2:	b500      	push	{lr}
 80020d4:	0b24      	lsrs	r4, r4, #12
 80020d6:	0d6d      	lsrs	r5, r5, #21
 80020d8:	0d7f      	lsrs	r7, r7, #21
 80020da:	42b5      	cmp	r5, r6
 80020dc:	d00b      	beq.n	80020f6 <__aeabi_dcmpun+0x36>
 80020de:	4908      	ldr	r1, [pc, #32]	@ (8002100 <__aeabi_dcmpun+0x40>)
 80020e0:	2000      	movs	r0, #0
 80020e2:	428f      	cmp	r7, r1
 80020e4:	d104      	bne.n	80020f0 <__aeabi_dcmpun+0x30>
 80020e6:	4646      	mov	r6, r8
 80020e8:	4316      	orrs	r6, r2
 80020ea:	0030      	movs	r0, r6
 80020ec:	1e43      	subs	r3, r0, #1
 80020ee:	4198      	sbcs	r0, r3
 80020f0:	bc80      	pop	{r7}
 80020f2:	46b8      	mov	r8, r7
 80020f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020f6:	4304      	orrs	r4, r0
 80020f8:	2001      	movs	r0, #1
 80020fa:	2c00      	cmp	r4, #0
 80020fc:	d1f8      	bne.n	80020f0 <__aeabi_dcmpun+0x30>
 80020fe:	e7ee      	b.n	80020de <__aeabi_dcmpun+0x1e>
 8002100:	000007ff 	.word	0x000007ff

08002104 <__aeabi_d2iz>:
 8002104:	000b      	movs	r3, r1
 8002106:	0002      	movs	r2, r0
 8002108:	b570      	push	{r4, r5, r6, lr}
 800210a:	4d16      	ldr	r5, [pc, #88]	@ (8002164 <__aeabi_d2iz+0x60>)
 800210c:	030c      	lsls	r4, r1, #12
 800210e:	b082      	sub	sp, #8
 8002110:	0049      	lsls	r1, r1, #1
 8002112:	2000      	movs	r0, #0
 8002114:	9200      	str	r2, [sp, #0]
 8002116:	9301      	str	r3, [sp, #4]
 8002118:	0b24      	lsrs	r4, r4, #12
 800211a:	0d49      	lsrs	r1, r1, #21
 800211c:	0fde      	lsrs	r6, r3, #31
 800211e:	42a9      	cmp	r1, r5
 8002120:	dd04      	ble.n	800212c <__aeabi_d2iz+0x28>
 8002122:	4811      	ldr	r0, [pc, #68]	@ (8002168 <__aeabi_d2iz+0x64>)
 8002124:	4281      	cmp	r1, r0
 8002126:	dd03      	ble.n	8002130 <__aeabi_d2iz+0x2c>
 8002128:	4b10      	ldr	r3, [pc, #64]	@ (800216c <__aeabi_d2iz+0x68>)
 800212a:	18f0      	adds	r0, r6, r3
 800212c:	b002      	add	sp, #8
 800212e:	bd70      	pop	{r4, r5, r6, pc}
 8002130:	2080      	movs	r0, #128	@ 0x80
 8002132:	0340      	lsls	r0, r0, #13
 8002134:	4320      	orrs	r0, r4
 8002136:	4c0e      	ldr	r4, [pc, #56]	@ (8002170 <__aeabi_d2iz+0x6c>)
 8002138:	1a64      	subs	r4, r4, r1
 800213a:	2c1f      	cmp	r4, #31
 800213c:	dd08      	ble.n	8002150 <__aeabi_d2iz+0x4c>
 800213e:	4b0d      	ldr	r3, [pc, #52]	@ (8002174 <__aeabi_d2iz+0x70>)
 8002140:	1a5b      	subs	r3, r3, r1
 8002142:	40d8      	lsrs	r0, r3
 8002144:	0003      	movs	r3, r0
 8002146:	4258      	negs	r0, r3
 8002148:	2e00      	cmp	r6, #0
 800214a:	d1ef      	bne.n	800212c <__aeabi_d2iz+0x28>
 800214c:	0018      	movs	r0, r3
 800214e:	e7ed      	b.n	800212c <__aeabi_d2iz+0x28>
 8002150:	4b09      	ldr	r3, [pc, #36]	@ (8002178 <__aeabi_d2iz+0x74>)
 8002152:	9a00      	ldr	r2, [sp, #0]
 8002154:	469c      	mov	ip, r3
 8002156:	0003      	movs	r3, r0
 8002158:	4461      	add	r1, ip
 800215a:	408b      	lsls	r3, r1
 800215c:	40e2      	lsrs	r2, r4
 800215e:	4313      	orrs	r3, r2
 8002160:	e7f1      	b.n	8002146 <__aeabi_d2iz+0x42>
 8002162:	46c0      	nop			@ (mov r8, r8)
 8002164:	000003fe 	.word	0x000003fe
 8002168:	0000041d 	.word	0x0000041d
 800216c:	7fffffff 	.word	0x7fffffff
 8002170:	00000433 	.word	0x00000433
 8002174:	00000413 	.word	0x00000413
 8002178:	fffffbed 	.word	0xfffffbed

0800217c <__aeabi_i2d>:
 800217c:	b570      	push	{r4, r5, r6, lr}
 800217e:	2800      	cmp	r0, #0
 8002180:	d016      	beq.n	80021b0 <__aeabi_i2d+0x34>
 8002182:	17c3      	asrs	r3, r0, #31
 8002184:	18c5      	adds	r5, r0, r3
 8002186:	405d      	eors	r5, r3
 8002188:	0fc4      	lsrs	r4, r0, #31
 800218a:	0028      	movs	r0, r5
 800218c:	f000 f848 	bl	8002220 <__clzsi2>
 8002190:	4b10      	ldr	r3, [pc, #64]	@ (80021d4 <__aeabi_i2d+0x58>)
 8002192:	1a1b      	subs	r3, r3, r0
 8002194:	055b      	lsls	r3, r3, #21
 8002196:	0d5b      	lsrs	r3, r3, #21
 8002198:	280a      	cmp	r0, #10
 800219a:	dc14      	bgt.n	80021c6 <__aeabi_i2d+0x4a>
 800219c:	0002      	movs	r2, r0
 800219e:	002e      	movs	r6, r5
 80021a0:	3215      	adds	r2, #21
 80021a2:	4096      	lsls	r6, r2
 80021a4:	220b      	movs	r2, #11
 80021a6:	1a12      	subs	r2, r2, r0
 80021a8:	40d5      	lsrs	r5, r2
 80021aa:	032d      	lsls	r5, r5, #12
 80021ac:	0b2d      	lsrs	r5, r5, #12
 80021ae:	e003      	b.n	80021b8 <__aeabi_i2d+0x3c>
 80021b0:	2400      	movs	r4, #0
 80021b2:	2300      	movs	r3, #0
 80021b4:	2500      	movs	r5, #0
 80021b6:	2600      	movs	r6, #0
 80021b8:	051b      	lsls	r3, r3, #20
 80021ba:	432b      	orrs	r3, r5
 80021bc:	07e4      	lsls	r4, r4, #31
 80021be:	4323      	orrs	r3, r4
 80021c0:	0030      	movs	r0, r6
 80021c2:	0019      	movs	r1, r3
 80021c4:	bd70      	pop	{r4, r5, r6, pc}
 80021c6:	380b      	subs	r0, #11
 80021c8:	4085      	lsls	r5, r0
 80021ca:	032d      	lsls	r5, r5, #12
 80021cc:	2600      	movs	r6, #0
 80021ce:	0b2d      	lsrs	r5, r5, #12
 80021d0:	e7f2      	b.n	80021b8 <__aeabi_i2d+0x3c>
 80021d2:	46c0      	nop			@ (mov r8, r8)
 80021d4:	0000041e 	.word	0x0000041e

080021d8 <__aeabi_ui2d>:
 80021d8:	b510      	push	{r4, lr}
 80021da:	1e04      	subs	r4, r0, #0
 80021dc:	d010      	beq.n	8002200 <__aeabi_ui2d+0x28>
 80021de:	f000 f81f 	bl	8002220 <__clzsi2>
 80021e2:	4b0e      	ldr	r3, [pc, #56]	@ (800221c <__aeabi_ui2d+0x44>)
 80021e4:	1a1b      	subs	r3, r3, r0
 80021e6:	055b      	lsls	r3, r3, #21
 80021e8:	0d5b      	lsrs	r3, r3, #21
 80021ea:	280a      	cmp	r0, #10
 80021ec:	dc0f      	bgt.n	800220e <__aeabi_ui2d+0x36>
 80021ee:	220b      	movs	r2, #11
 80021f0:	0021      	movs	r1, r4
 80021f2:	1a12      	subs	r2, r2, r0
 80021f4:	40d1      	lsrs	r1, r2
 80021f6:	3015      	adds	r0, #21
 80021f8:	030a      	lsls	r2, r1, #12
 80021fa:	4084      	lsls	r4, r0
 80021fc:	0b12      	lsrs	r2, r2, #12
 80021fe:	e001      	b.n	8002204 <__aeabi_ui2d+0x2c>
 8002200:	2300      	movs	r3, #0
 8002202:	2200      	movs	r2, #0
 8002204:	051b      	lsls	r3, r3, #20
 8002206:	4313      	orrs	r3, r2
 8002208:	0020      	movs	r0, r4
 800220a:	0019      	movs	r1, r3
 800220c:	bd10      	pop	{r4, pc}
 800220e:	0022      	movs	r2, r4
 8002210:	380b      	subs	r0, #11
 8002212:	4082      	lsls	r2, r0
 8002214:	0312      	lsls	r2, r2, #12
 8002216:	2400      	movs	r4, #0
 8002218:	0b12      	lsrs	r2, r2, #12
 800221a:	e7f3      	b.n	8002204 <__aeabi_ui2d+0x2c>
 800221c:	0000041e 	.word	0x0000041e

08002220 <__clzsi2>:
 8002220:	211c      	movs	r1, #28
 8002222:	2301      	movs	r3, #1
 8002224:	041b      	lsls	r3, r3, #16
 8002226:	4298      	cmp	r0, r3
 8002228:	d301      	bcc.n	800222e <__clzsi2+0xe>
 800222a:	0c00      	lsrs	r0, r0, #16
 800222c:	3910      	subs	r1, #16
 800222e:	0a1b      	lsrs	r3, r3, #8
 8002230:	4298      	cmp	r0, r3
 8002232:	d301      	bcc.n	8002238 <__clzsi2+0x18>
 8002234:	0a00      	lsrs	r0, r0, #8
 8002236:	3908      	subs	r1, #8
 8002238:	091b      	lsrs	r3, r3, #4
 800223a:	4298      	cmp	r0, r3
 800223c:	d301      	bcc.n	8002242 <__clzsi2+0x22>
 800223e:	0900      	lsrs	r0, r0, #4
 8002240:	3904      	subs	r1, #4
 8002242:	a202      	add	r2, pc, #8	@ (adr r2, 800224c <__clzsi2+0x2c>)
 8002244:	5c10      	ldrb	r0, [r2, r0]
 8002246:	1840      	adds	r0, r0, r1
 8002248:	4770      	bx	lr
 800224a:	46c0      	nop			@ (mov r8, r8)
 800224c:	02020304 	.word	0x02020304
 8002250:	01010101 	.word	0x01010101
	...

0800225c <lcd.0>:
  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_SPI1_Init();
  /* USER CODE BEGIN 2 */
  st7567a_Init();
  void lcd(uint8_t x, uint8_t y, uint8_t font, char msg[]){
 800225c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800225e:	b087      	sub	sp, #28
 8002260:	af02      	add	r7, sp, #8
 8002262:	0004      	movs	r4, r0
 8002264:	0008      	movs	r0, r1
 8002266:	0011      	movs	r1, r2
 8002268:	60bb      	str	r3, [r7, #8]
 800226a:	250f      	movs	r5, #15
 800226c:	197b      	adds	r3, r7, r5
 800226e:	1c22      	adds	r2, r4, #0
 8002270:	701a      	strb	r2, [r3, #0]
 8002272:	240e      	movs	r4, #14
 8002274:	193b      	adds	r3, r7, r4
 8002276:	1c02      	adds	r2, r0, #0
 8002278:	701a      	strb	r2, [r3, #0]
 800227a:	260d      	movs	r6, #13
 800227c:	19bb      	adds	r3, r7, r6
 800227e:	1c0a      	adds	r2, r1, #0
 8002280:	701a      	strb	r2, [r3, #0]
 8002282:	4663      	mov	r3, ip
 8002284:	607b      	str	r3, [r7, #4]
	  st7567a_SetCursor(x, y);
 8002286:	193b      	adds	r3, r7, r4
 8002288:	781a      	ldrb	r2, [r3, #0]
 800228a:	197b      	adds	r3, r7, r5
 800228c:	781b      	ldrb	r3, [r3, #0]
 800228e:	0011      	movs	r1, r2
 8002290:	0018      	movs	r0, r3
 8002292:	f000 fa9f 	bl	80027d4 <st7567a_SetCursor>
	  if		(font==1){st7567a_WriteString(msg, FontStyle_RetroVilleNC_9, PIXEL_ON);}
 8002296:	19bb      	adds	r3, r7, r6
 8002298:	781b      	ldrb	r3, [r3, #0]
 800229a:	2b01      	cmp	r3, #1
 800229c:	d10c      	bne.n	80022b8 <lcd.0+0x5c>
 800229e:	4b11      	ldr	r3, [pc, #68]	@ (80022e4 <lcd.0+0x88>)
 80022a0:	68b8      	ldr	r0, [r7, #8]
 80022a2:	2201      	movs	r2, #1
 80022a4:	9201      	str	r2, [sp, #4]
 80022a6:	466a      	mov	r2, sp
 80022a8:	68d9      	ldr	r1, [r3, #12]
 80022aa:	6011      	str	r1, [r2, #0]
 80022ac:	6819      	ldr	r1, [r3, #0]
 80022ae:	685a      	ldr	r2, [r3, #4]
 80022b0:	689b      	ldr	r3, [r3, #8]
 80022b2:	f000 fba1 	bl	80029f8 <st7567a_WriteString>
	  else if	(font==2){st7567a_WriteString(msg, FontStyle_videotype_18, PIXEL_ON);}
  }
 80022b6:	e010      	b.n	80022da <lcd.0+0x7e>
	  else if	(font==2){st7567a_WriteString(msg, FontStyle_videotype_18, PIXEL_ON);}
 80022b8:	230d      	movs	r3, #13
 80022ba:	18fb      	adds	r3, r7, r3
 80022bc:	781b      	ldrb	r3, [r3, #0]
 80022be:	2b02      	cmp	r3, #2
 80022c0:	d10b      	bne.n	80022da <lcd.0+0x7e>
 80022c2:	4b09      	ldr	r3, [pc, #36]	@ (80022e8 <lcd.0+0x8c>)
 80022c4:	68b8      	ldr	r0, [r7, #8]
 80022c6:	2201      	movs	r2, #1
 80022c8:	9201      	str	r2, [sp, #4]
 80022ca:	466a      	mov	r2, sp
 80022cc:	68d9      	ldr	r1, [r3, #12]
 80022ce:	6011      	str	r1, [r2, #0]
 80022d0:	6819      	ldr	r1, [r3, #0]
 80022d2:	685a      	ldr	r2, [r3, #4]
 80022d4:	689b      	ldr	r3, [r3, #8]
 80022d6:	f000 fb8f 	bl	80029f8 <st7567a_WriteString>
  }
 80022da:	46c0      	nop			@ (mov r8, r8)
 80022dc:	46bd      	mov	sp, r7
 80022de:	b005      	add	sp, #20
 80022e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022e2:	46c0      	nop			@ (mov r8, r8)
 80022e4:	20000010 	.word	0x20000010
 80022e8:	20000000 	.word	0x20000000

080022ec <main>:
{
 80022ec:	b580      	push	{r7, lr}
 80022ee:	b082      	sub	sp, #8
 80022f0:	af00      	add	r7, sp, #0
int main(void)
 80022f2:	2310      	movs	r3, #16
 80022f4:	18fb      	adds	r3, r7, r3
 80022f6:	603b      	str	r3, [r7, #0]
  HAL_Init();
 80022f8:	f000 fd2c 	bl	8002d54 <HAL_Init>
  SystemClock_Config();
 80022fc:	f000 f838 	bl	8002370 <SystemClock_Config>
  MX_GPIO_Init();
 8002300:	f000 f8b4 	bl	800246c <MX_GPIO_Init>
  MX_SPI1_Init();
 8002304:	f000 f874 	bl	80023f0 <MX_SPI1_Init>
  st7567a_Init();
 8002308:	f000 f972 	bl	80025f0 <st7567a_Init>
  uint8_t x = 21;
 800230c:	1dfb      	adds	r3, r7, #7
 800230e:	2215      	movs	r2, #21
 8002310:	701a      	strb	r2, [r3, #0]
  int8_t increment = 1;
 8002312:	1dbb      	adds	r3, r7, #6
 8002314:	2201      	movs	r2, #1
 8002316:	701a      	strb	r2, [r3, #0]

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  st7567a_Fill(0);
 8002318:	2000      	movs	r0, #0
 800231a:	f000 f997 	bl	800264c <st7567a_Fill>
	  lcd(x, 0, 2, "35 years");
 800231e:	4a13      	ldr	r2, [pc, #76]	@ (800236c <main+0x80>)
 8002320:	1dfb      	adds	r3, r7, #7
 8002322:	7818      	ldrb	r0, [r3, #0]
 8002324:	003b      	movs	r3, r7
 8002326:	469c      	mov	ip, r3
 8002328:	0013      	movs	r3, r2
 800232a:	2202      	movs	r2, #2
 800232c:	2100      	movs	r1, #0
 800232e:	f7ff ff95 	bl	800225c <lcd.0>





	  x += increment;
 8002332:	1dbb      	adds	r3, r7, #6
 8002334:	7819      	ldrb	r1, [r3, #0]
 8002336:	1dfb      	adds	r3, r7, #7
 8002338:	1dfa      	adds	r2, r7, #7
 800233a:	7812      	ldrb	r2, [r2, #0]
 800233c:	188a      	adds	r2, r1, r2
 800233e:	701a      	strb	r2, [r3, #0]
	  if (x == 42) {increment = -1;} else if (x == 0) {increment = 1;}
 8002340:	1dfb      	adds	r3, r7, #7
 8002342:	781b      	ldrb	r3, [r3, #0]
 8002344:	2b2a      	cmp	r3, #42	@ 0x2a
 8002346:	d103      	bne.n	8002350 <main+0x64>
 8002348:	1dbb      	adds	r3, r7, #6
 800234a:	22ff      	movs	r2, #255	@ 0xff
 800234c:	701a      	strb	r2, [r3, #0]
 800234e:	e006      	b.n	800235e <main+0x72>
 8002350:	1dfb      	adds	r3, r7, #7
 8002352:	781b      	ldrb	r3, [r3, #0]
 8002354:	2b00      	cmp	r3, #0
 8002356:	d102      	bne.n	800235e <main+0x72>
 8002358:	1dbb      	adds	r3, r7, #6
 800235a:	2201      	movs	r2, #1
 800235c:	701a      	strb	r2, [r3, #0]
	  st7567a_Display();
 800235e:	f000 f9a5 	bl	80026ac <st7567a_Display>
	  HAL_Delay(200);
 8002362:	20c8      	movs	r0, #200	@ 0xc8
 8002364:	f000 fd5a 	bl	8002e1c <HAL_Delay>
	  st7567a_Fill(0);
 8002368:	e7d6      	b.n	8002318 <main+0x2c>
 800236a:	46c0      	nop			@ (mov r8, r8)
 800236c:	08006d10 	.word	0x08006d10

08002370 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002370:	b590      	push	{r4, r7, lr}
 8002372:	b091      	sub	sp, #68	@ 0x44
 8002374:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002376:	2410      	movs	r4, #16
 8002378:	193b      	adds	r3, r7, r4
 800237a:	0018      	movs	r0, r3
 800237c:	2330      	movs	r3, #48	@ 0x30
 800237e:	001a      	movs	r2, r3
 8002380:	2100      	movs	r1, #0
 8002382:	f002 fcef 	bl	8004d64 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002386:	003b      	movs	r3, r7
 8002388:	0018      	movs	r0, r3
 800238a:	2310      	movs	r3, #16
 800238c:	001a      	movs	r2, r3
 800238e:	2100      	movs	r1, #0
 8002390:	f002 fce8 	bl	8004d64 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002394:	0021      	movs	r1, r4
 8002396:	187b      	adds	r3, r7, r1
 8002398:	2202      	movs	r2, #2
 800239a:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800239c:	187b      	adds	r3, r7, r1
 800239e:	2201      	movs	r2, #1
 80023a0:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80023a2:	187b      	adds	r3, r7, r1
 80023a4:	2210      	movs	r2, #16
 80023a6:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80023a8:	187b      	adds	r3, r7, r1
 80023aa:	2200      	movs	r2, #0
 80023ac:	621a      	str	r2, [r3, #32]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023ae:	187b      	adds	r3, r7, r1
 80023b0:	0018      	movs	r0, r3
 80023b2:	f000 ff99 	bl	80032e8 <HAL_RCC_OscConfig>
 80023b6:	1e03      	subs	r3, r0, #0
 80023b8:	d001      	beq.n	80023be <SystemClock_Config+0x4e>
  {
    Error_Handler();
 80023ba:	f000 f8a7 	bl	800250c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023be:	003b      	movs	r3, r7
 80023c0:	2207      	movs	r2, #7
 80023c2:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80023c4:	003b      	movs	r3, r7
 80023c6:	2200      	movs	r2, #0
 80023c8:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023ca:	003b      	movs	r3, r7
 80023cc:	2200      	movs	r2, #0
 80023ce:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80023d0:	003b      	movs	r3, r7
 80023d2:	2200      	movs	r2, #0
 80023d4:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80023d6:	003b      	movs	r3, r7
 80023d8:	2100      	movs	r1, #0
 80023da:	0018      	movs	r0, r3
 80023dc:	f001 fa9e 	bl	800391c <HAL_RCC_ClockConfig>
 80023e0:	1e03      	subs	r3, r0, #0
 80023e2:	d001      	beq.n	80023e8 <SystemClock_Config+0x78>
  {
    Error_Handler();
 80023e4:	f000 f892 	bl	800250c <Error_Handler>
  }
}
 80023e8:	46c0      	nop			@ (mov r8, r8)
 80023ea:	46bd      	mov	sp, r7
 80023ec:	b011      	add	sp, #68	@ 0x44
 80023ee:	bd90      	pop	{r4, r7, pc}

080023f0 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80023f0:	b580      	push	{r7, lr}
 80023f2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80023f4:	4b1b      	ldr	r3, [pc, #108]	@ (8002464 <MX_SPI1_Init+0x74>)
 80023f6:	4a1c      	ldr	r2, [pc, #112]	@ (8002468 <MX_SPI1_Init+0x78>)
 80023f8:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80023fa:	4b1a      	ldr	r3, [pc, #104]	@ (8002464 <MX_SPI1_Init+0x74>)
 80023fc:	2282      	movs	r2, #130	@ 0x82
 80023fe:	0052      	lsls	r2, r2, #1
 8002400:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002402:	4b18      	ldr	r3, [pc, #96]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002404:	2200      	movs	r2, #0
 8002406:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002408:	4b16      	ldr	r3, [pc, #88]	@ (8002464 <MX_SPI1_Init+0x74>)
 800240a:	22e0      	movs	r2, #224	@ 0xe0
 800240c:	00d2      	lsls	r2, r2, #3
 800240e:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002410:	4b14      	ldr	r3, [pc, #80]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002412:	2200      	movs	r2, #0
 8002414:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002416:	4b13      	ldr	r3, [pc, #76]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002418:	2200      	movs	r2, #0
 800241a:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800241c:	4b11      	ldr	r3, [pc, #68]	@ (8002464 <MX_SPI1_Init+0x74>)
 800241e:	2280      	movs	r2, #128	@ 0x80
 8002420:	0092      	lsls	r2, r2, #2
 8002422:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8002424:	4b0f      	ldr	r3, [pc, #60]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002426:	2210      	movs	r2, #16
 8002428:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800242a:	4b0e      	ldr	r3, [pc, #56]	@ (8002464 <MX_SPI1_Init+0x74>)
 800242c:	2200      	movs	r2, #0
 800242e:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002430:	4b0c      	ldr	r3, [pc, #48]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002432:	2200      	movs	r2, #0
 8002434:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002436:	4b0b      	ldr	r3, [pc, #44]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002438:	2200      	movs	r2, #0
 800243a:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 7;
 800243c:	4b09      	ldr	r3, [pc, #36]	@ (8002464 <MX_SPI1_Init+0x74>)
 800243e:	2207      	movs	r2, #7
 8002440:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8002442:	4b08      	ldr	r3, [pc, #32]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002444:	2200      	movs	r2, #0
 8002446:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8002448:	4b06      	ldr	r3, [pc, #24]	@ (8002464 <MX_SPI1_Init+0x74>)
 800244a:	2208      	movs	r2, #8
 800244c:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800244e:	4b05      	ldr	r3, [pc, #20]	@ (8002464 <MX_SPI1_Init+0x74>)
 8002450:	0018      	movs	r0, r3
 8002452:	f001 fb87 	bl	8003b64 <HAL_SPI_Init>
 8002456:	1e03      	subs	r3, r0, #0
 8002458:	d001      	beq.n	800245e <MX_SPI1_Init+0x6e>
  {
    Error_Handler();
 800245a:	f000 f857 	bl	800250c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800245e:	46c0      	nop			@ (mov r8, r8)
 8002460:	46bd      	mov	sp, r7
 8002462:	bd80      	pop	{r7, pc}
 8002464:	20000210 	.word	0x20000210
 8002468:	40013000 	.word	0x40013000

0800246c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800246c:	b590      	push	{r4, r7, lr}
 800246e:	b089      	sub	sp, #36	@ 0x24
 8002470:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002472:	240c      	movs	r4, #12
 8002474:	193b      	adds	r3, r7, r4
 8002476:	0018      	movs	r0, r3
 8002478:	2314      	movs	r3, #20
 800247a:	001a      	movs	r2, r3
 800247c:	2100      	movs	r1, #0
 800247e:	f002 fc71 	bl	8004d64 <memset>
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002482:	4b21      	ldr	r3, [pc, #132]	@ (8002508 <MX_GPIO_Init+0x9c>)
 8002484:	695a      	ldr	r2, [r3, #20]
 8002486:	4b20      	ldr	r3, [pc, #128]	@ (8002508 <MX_GPIO_Init+0x9c>)
 8002488:	2180      	movs	r1, #128	@ 0x80
 800248a:	03c9      	lsls	r1, r1, #15
 800248c:	430a      	orrs	r2, r1
 800248e:	615a      	str	r2, [r3, #20]
 8002490:	4b1d      	ldr	r3, [pc, #116]	@ (8002508 <MX_GPIO_Init+0x9c>)
 8002492:	695a      	ldr	r2, [r3, #20]
 8002494:	2380      	movs	r3, #128	@ 0x80
 8002496:	03db      	lsls	r3, r3, #15
 8002498:	4013      	ands	r3, r2
 800249a:	60bb      	str	r3, [r7, #8]
 800249c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800249e:	4b1a      	ldr	r3, [pc, #104]	@ (8002508 <MX_GPIO_Init+0x9c>)
 80024a0:	695a      	ldr	r2, [r3, #20]
 80024a2:	4b19      	ldr	r3, [pc, #100]	@ (8002508 <MX_GPIO_Init+0x9c>)
 80024a4:	2180      	movs	r1, #128	@ 0x80
 80024a6:	0289      	lsls	r1, r1, #10
 80024a8:	430a      	orrs	r2, r1
 80024aa:	615a      	str	r2, [r3, #20]
 80024ac:	4b16      	ldr	r3, [pc, #88]	@ (8002508 <MX_GPIO_Init+0x9c>)
 80024ae:	695a      	ldr	r2, [r3, #20]
 80024b0:	2380      	movs	r3, #128	@ 0x80
 80024b2:	029b      	lsls	r3, r3, #10
 80024b4:	4013      	ands	r3, r2
 80024b6:	607b      	str	r3, [r7, #4]
 80024b8:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_CS_Pin|LCD_RST_Pin, GPIO_PIN_SET);
 80024ba:	2390      	movs	r3, #144	@ 0x90
 80024bc:	05db      	lsls	r3, r3, #23
 80024be:	2201      	movs	r2, #1
 80024c0:	2118      	movs	r1, #24
 80024c2:	0018      	movs	r0, r3
 80024c4:	f000 fef2 	bl	80032ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_DC_GPIO_Port, LCD_DC_Pin, GPIO_PIN_RESET);
 80024c8:	2390      	movs	r3, #144	@ 0x90
 80024ca:	05db      	lsls	r3, r3, #23
 80024cc:	2200      	movs	r2, #0
 80024ce:	2140      	movs	r1, #64	@ 0x40
 80024d0:	0018      	movs	r0, r3
 80024d2:	f000 feeb 	bl	80032ac <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_CS_Pin LCD_RST_Pin LCD_DC_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_RST_Pin|LCD_DC_Pin;
 80024d6:	0021      	movs	r1, r4
 80024d8:	187b      	adds	r3, r7, r1
 80024da:	2258      	movs	r2, #88	@ 0x58
 80024dc:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80024de:	187b      	adds	r3, r7, r1
 80024e0:	2201      	movs	r2, #1
 80024e2:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024e4:	187b      	adds	r3, r7, r1
 80024e6:	2200      	movs	r2, #0
 80024e8:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024ea:	187b      	adds	r3, r7, r1
 80024ec:	2200      	movs	r2, #0
 80024ee:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024f0:	187a      	adds	r2, r7, r1
 80024f2:	2390      	movs	r3, #144	@ 0x90
 80024f4:	05db      	lsls	r3, r3, #23
 80024f6:	0011      	movs	r1, r2
 80024f8:	0018      	movs	r0, r3
 80024fa:	f000 fd67 	bl	8002fcc <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80024fe:	46c0      	nop			@ (mov r8, r8)
 8002500:	46bd      	mov	sp, r7
 8002502:	b009      	add	sp, #36	@ 0x24
 8002504:	bd90      	pop	{r4, r7, pc}
 8002506:	46c0      	nop			@ (mov r8, r8)
 8002508:	40021000 	.word	0x40021000

0800250c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800250c:	b580      	push	{r7, lr}
 800250e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002510:	b672      	cpsid	i
}
 8002512:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002514:	46c0      	nop			@ (mov r8, r8)
 8002516:	e7fd      	b.n	8002514 <Error_Handler+0x8>

08002518 <st7567a_Reset>:

static uint8_t ST7567A_buffer[ST7567A_BUFFER_SIZE];
static ST7567A_pos_t ST7567A;

// ----------------------------------------------------------------------------
void st7567a_Reset(void) {
 8002518:	b580      	push	{r7, lr}
 800251a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(ST7567A_RST_GPIO_Port, ST7567A_RST_Pin, GPIO_PIN_RESET);			// reset low
 800251c:	2390      	movs	r3, #144	@ 0x90
 800251e:	05db      	lsls	r3, r3, #23
 8002520:	2200      	movs	r2, #0
 8002522:	2110      	movs	r1, #16
 8002524:	0018      	movs	r0, r3
 8002526:	f000 fec1 	bl	80032ac <HAL_GPIO_WritePin>
	HAL_Delay(5);
 800252a:	2005      	movs	r0, #5
 800252c:	f000 fc76 	bl	8002e1c <HAL_Delay>
	HAL_GPIO_WritePin(ST7567A_RST_GPIO_Port, ST7567A_RST_Pin, GPIO_PIN_SET);				// reset high
 8002530:	2390      	movs	r3, #144	@ 0x90
 8002532:	05db      	lsls	r3, r3, #23
 8002534:	2201      	movs	r2, #1
 8002536:	2110      	movs	r1, #16
 8002538:	0018      	movs	r0, r3
 800253a:	f000 feb7 	bl	80032ac <HAL_GPIO_WritePin>
	HAL_Delay(5);
 800253e:	2005      	movs	r0, #5
 8002540:	f000 fc6c 	bl	8002e1c <HAL_Delay>
}
 8002544:	46c0      	nop			@ (mov r8, r8)
 8002546:	46bd      	mov	sp, r7
 8002548:	bd80      	pop	{r7, pc}
	...

0800254c <st7567a_WriteCommand>:

void st7567a_WriteCommand(uint8_t byte) {
 800254c:	b580      	push	{r7, lr}
 800254e:	b082      	sub	sp, #8
 8002550:	af00      	add	r7, sp, #0
 8002552:	0002      	movs	r2, r0
 8002554:	1dfb      	adds	r3, r7, #7
 8002556:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(ST7567A_CS_GPIO_Port, ST7567A_CS_Pin, GPIO_PIN_RESET);				// chip select
 8002558:	2390      	movs	r3, #144	@ 0x90
 800255a:	05db      	lsls	r3, r3, #23
 800255c:	2200      	movs	r2, #0
 800255e:	2108      	movs	r1, #8
 8002560:	0018      	movs	r0, r3
 8002562:	f000 fea3 	bl	80032ac <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(ST7567A_DC_GPIO_Port, ST7567A_DC_Pin, GPIO_PIN_RESET);				// byte is command
 8002566:	2390      	movs	r3, #144	@ 0x90
 8002568:	05db      	lsls	r3, r3, #23
 800256a:	2200      	movs	r2, #0
 800256c:	2140      	movs	r1, #64	@ 0x40
 800256e:	0018      	movs	r0, r3
 8002570:	f000 fe9c 	bl	80032ac <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&ST7567A_SPI_PORT, &byte, 1, ST7567A_TIMEOUT);
 8002574:	1df9      	adds	r1, r7, #7
 8002576:	4808      	ldr	r0, [pc, #32]	@ (8002598 <st7567a_WriteCommand+0x4c>)
 8002578:	2364      	movs	r3, #100	@ 0x64
 800257a:	2201      	movs	r2, #1
 800257c:	f001 fbaa 	bl	8003cd4 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(ST7567A_CS_GPIO_Port, ST7567A_CS_Pin, GPIO_PIN_SET);					// chip unselect
 8002580:	2390      	movs	r3, #144	@ 0x90
 8002582:	05db      	lsls	r3, r3, #23
 8002584:	2201      	movs	r2, #1
 8002586:	2108      	movs	r1, #8
 8002588:	0018      	movs	r0, r3
 800258a:	f000 fe8f 	bl	80032ac <HAL_GPIO_WritePin>
}
 800258e:	46c0      	nop			@ (mov r8, r8)
 8002590:	46bd      	mov	sp, r7
 8002592:	b002      	add	sp, #8
 8002594:	bd80      	pop	{r7, pc}
 8002596:	46c0      	nop			@ (mov r8, r8)
 8002598:	20000210 	.word	0x20000210

0800259c <st7567a_WriteData>:

void st7567a_WriteData(uint8_t* buffer, uint8_t size) {
 800259c:	b580      	push	{r7, lr}
 800259e:	b082      	sub	sp, #8
 80025a0:	af00      	add	r7, sp, #0
 80025a2:	6078      	str	r0, [r7, #4]
 80025a4:	000a      	movs	r2, r1
 80025a6:	1cfb      	adds	r3, r7, #3
 80025a8:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(ST7567A_CS_GPIO_Port, ST7567A_CS_Pin, GPIO_PIN_RESET);				// chip select
 80025aa:	2390      	movs	r3, #144	@ 0x90
 80025ac:	05db      	lsls	r3, r3, #23
 80025ae:	2200      	movs	r2, #0
 80025b0:	2108      	movs	r1, #8
 80025b2:	0018      	movs	r0, r3
 80025b4:	f000 fe7a 	bl	80032ac <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(ST7567A_DC_GPIO_Port, ST7567A_DC_Pin, GPIO_PIN_SET);					// byte is display data
 80025b8:	2390      	movs	r3, #144	@ 0x90
 80025ba:	05db      	lsls	r3, r3, #23
 80025bc:	2201      	movs	r2, #1
 80025be:	2140      	movs	r1, #64	@ 0x40
 80025c0:	0018      	movs	r0, r3
 80025c2:	f000 fe73 	bl	80032ac <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&ST7567A_SPI_PORT, buffer, size, ST7567A_TIMEOUT);
 80025c6:	1cfb      	adds	r3, r7, #3
 80025c8:	781b      	ldrb	r3, [r3, #0]
 80025ca:	b29a      	uxth	r2, r3
 80025cc:	6879      	ldr	r1, [r7, #4]
 80025ce:	4807      	ldr	r0, [pc, #28]	@ (80025ec <st7567a_WriteData+0x50>)
 80025d0:	2364      	movs	r3, #100	@ 0x64
 80025d2:	f001 fb7f 	bl	8003cd4 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(ST7567A_CS_GPIO_Port, ST7567A_CS_Pin, GPIO_PIN_SET);					// chip unselect
 80025d6:	2390      	movs	r3, #144	@ 0x90
 80025d8:	05db      	lsls	r3, r3, #23
 80025da:	2201      	movs	r2, #1
 80025dc:	2108      	movs	r1, #8
 80025de:	0018      	movs	r0, r3
 80025e0:	f000 fe64 	bl	80032ac <HAL_GPIO_WritePin>
}
 80025e4:	46c0      	nop			@ (mov r8, r8)
 80025e6:	46bd      	mov	sp, r7
 80025e8:	b002      	add	sp, #8
 80025ea:	bd80      	pop	{r7, pc}
 80025ec:	20000210 	.word	0x20000210

080025f0 <st7567a_Init>:

// ----------------------------------------------------------------------------
void st7567a_Init(void) {
 80025f0:	b580      	push	{r7, lr}
 80025f2:	af00      	add	r7, sp, #0
	st7567a_Reset();
 80025f4:	f7ff ff90 	bl	8002518 <st7567a_Reset>

	st7567a_WriteCommand(ST7567A_BIAS9);
 80025f8:	20a2      	movs	r0, #162	@ 0xa2
 80025fa:	f7ff ffa7 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_SEG_NORMAL);
 80025fe:	20a0      	movs	r0, #160	@ 0xa0
 8002600:	f7ff ffa4 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_COM_REVERSE);
 8002604:	20c8      	movs	r0, #200	@ 0xc8
 8002606:	f7ff ffa1 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_SET_RR | 0x4);		// regulation ratio 5.0
 800260a:	2024      	movs	r0, #36	@ 0x24
 800260c:	f7ff ff9e 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_SET_EV_CMD);
 8002610:	2081      	movs	r0, #129	@ 0x81
 8002612:	f7ff ff9b 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(38);											// set EV=38
 8002616:	2026      	movs	r0, #38	@ 0x26
 8002618:	f7ff ff98 	bl	800254c <st7567a_WriteCommand>

	st7567a_WriteCommand(ST7567A_POWER_CONTROL | ST7567A_PWR_BOOSTER_ON);
 800261c:	202c      	movs	r0, #44	@ 0x2c
 800261e:	f7ff ff95 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_POWER_CONTROL | ST7567A_PWR_BOOSTER_ON | ST7567A_PWR_REGULATOR_ON);
 8002622:	202e      	movs	r0, #46	@ 0x2e
 8002624:	f7ff ff92 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_POWER_CONTROL | ST7567A_PWR_BOOSTER_ON | ST7567A_PWR_REGULATOR_ON | ST7567A_PWR_FOLLOWER_ON);
 8002628:	202f      	movs	r0, #47	@ 0x2f
 800262a:	f7ff ff8f 	bl	800254c <st7567a_WriteCommand>

	st7567a_Fill(PIXEL_OFF);
 800262e:	2000      	movs	r0, #0
 8002630:	f000 f80c 	bl	800264c <st7567a_Fill>
	st7567a_Display();
 8002634:	f000 f83a 	bl	80026ac <st7567a_Display>
	st7567a_WriteCommand(ST7567A_DISPLAY_DRAM);
 8002638:	20a4      	movs	r0, #164	@ 0xa4
 800263a:	f7ff ff87 	bl	800254c <st7567a_WriteCommand>
	st7567a_WriteCommand(ST7567A_DISPLAY_ON);
 800263e:	20af      	movs	r0, #175	@ 0xaf
 8002640:	f7ff ff84 	bl	800254c <st7567a_WriteCommand>
}
 8002644:	46c0      	nop			@ (mov r8, r8)
 8002646:	46bd      	mov	sp, r7
 8002648:	bd80      	pop	{r7, pc}
	...

0800264c <st7567a_Fill>:

void st7567a_Fill(ST7567A_PixelState_t state) {
 800264c:	b580      	push	{r7, lr}
 800264e:	b084      	sub	sp, #16
 8002650:	af00      	add	r7, sp, #0
 8002652:	0002      	movs	r2, r0
 8002654:	1dfb      	adds	r3, r7, #7
 8002656:	701a      	strb	r2, [r3, #0]
	uint8_t val = (state == PIXEL_ON) ? 0xFF : 0x00;
 8002658:	1dfb      	adds	r3, r7, #7
 800265a:	781b      	ldrb	r3, [r3, #0]
 800265c:	2b01      	cmp	r3, #1
 800265e:	d101      	bne.n	8002664 <st7567a_Fill+0x18>
 8002660:	22ff      	movs	r2, #255	@ 0xff
 8002662:	e000      	b.n	8002666 <st7567a_Fill+0x1a>
 8002664:	2200      	movs	r2, #0
 8002666:	230d      	movs	r3, #13
 8002668:	18fb      	adds	r3, r7, r3
 800266a:	701a      	strb	r2, [r3, #0]

	for(uint16_t i = 0; i < ST7567A_BUFFER_SIZE; ++i) {
 800266c:	230e      	movs	r3, #14
 800266e:	18fb      	adds	r3, r7, r3
 8002670:	2200      	movs	r2, #0
 8002672:	801a      	strh	r2, [r3, #0]
 8002674:	e00c      	b.n	8002690 <st7567a_Fill+0x44>
		ST7567A_buffer[i] = val;
 8002676:	200e      	movs	r0, #14
 8002678:	183b      	adds	r3, r7, r0
 800267a:	881b      	ldrh	r3, [r3, #0]
 800267c:	4a0a      	ldr	r2, [pc, #40]	@ (80026a8 <st7567a_Fill+0x5c>)
 800267e:	210d      	movs	r1, #13
 8002680:	1879      	adds	r1, r7, r1
 8002682:	7809      	ldrb	r1, [r1, #0]
 8002684:	54d1      	strb	r1, [r2, r3]
	for(uint16_t i = 0; i < ST7567A_BUFFER_SIZE; ++i) {
 8002686:	183b      	adds	r3, r7, r0
 8002688:	183a      	adds	r2, r7, r0
 800268a:	8812      	ldrh	r2, [r2, #0]
 800268c:	3201      	adds	r2, #1
 800268e:	801a      	strh	r2, [r3, #0]
 8002690:	230e      	movs	r3, #14
 8002692:	18fb      	adds	r3, r7, r3
 8002694:	881a      	ldrh	r2, [r3, #0]
 8002696:	2380      	movs	r3, #128	@ 0x80
 8002698:	00db      	lsls	r3, r3, #3
 800269a:	429a      	cmp	r2, r3
 800269c:	d3eb      	bcc.n	8002676 <st7567a_Fill+0x2a>
	}
}
 800269e:	46c0      	nop			@ (mov r8, r8)
 80026a0:	46c0      	nop			@ (mov r8, r8)
 80026a2:	46bd      	mov	sp, r7
 80026a4:	b004      	add	sp, #16
 80026a6:	bd80      	pop	{r7, pc}
 80026a8:	20000274 	.word	0x20000274

080026ac <st7567a_Display>:

void st7567a_Display(void) {
 80026ac:	b580      	push	{r7, lr}
 80026ae:	b082      	sub	sp, #8
 80026b0:	af00      	add	r7, sp, #0
	st7567a_WriteCommand(ST7567A_SET_START_LINE);
 80026b2:	2040      	movs	r0, #64	@ 0x40
 80026b4:	f7ff ff4a 	bl	800254c <st7567a_WriteCommand>

	for(uint8_t i = 0; i < ST7567A_HEIGHT/8; i++) {
 80026b8:	1dfb      	adds	r3, r7, #7
 80026ba:	2200      	movs	r2, #0
 80026bc:	701a      	strb	r2, [r3, #0]
 80026be:	e01a      	b.n	80026f6 <st7567a_Display+0x4a>
		st7567a_WriteCommand(ST7567A_PAGE_ADDR + i); 				// set DDRAM page
 80026c0:	1dfb      	adds	r3, r7, #7
 80026c2:	781b      	ldrb	r3, [r3, #0]
 80026c4:	3b50      	subs	r3, #80	@ 0x50
 80026c6:	b2db      	uxtb	r3, r3
 80026c8:	0018      	movs	r0, r3
 80026ca:	f7ff ff3f 	bl	800254c <st7567a_WriteCommand>
		st7567a_WriteCommand(ST7567A_COL_ADDR_H);						// set MSB column address
 80026ce:	2010      	movs	r0, #16
 80026d0:	f7ff ff3c 	bl	800254c <st7567a_WriteCommand>
		st7567a_WriteCommand(ST7567A_COL_ADDR_L);						// set LSB column address
 80026d4:	2000      	movs	r0, #0
 80026d6:	f7ff ff39 	bl	800254c <st7567a_WriteCommand>
		st7567a_WriteData(&ST7567A_buffer[ST7567A_WIDTH * i], ST7567A_WIDTH);
 80026da:	1dfb      	adds	r3, r7, #7
 80026dc:	781b      	ldrb	r3, [r3, #0]
 80026de:	01da      	lsls	r2, r3, #7
 80026e0:	4b0a      	ldr	r3, [pc, #40]	@ (800270c <st7567a_Display+0x60>)
 80026e2:	18d3      	adds	r3, r2, r3
 80026e4:	2180      	movs	r1, #128	@ 0x80
 80026e6:	0018      	movs	r0, r3
 80026e8:	f7ff ff58 	bl	800259c <st7567a_WriteData>
	for(uint8_t i = 0; i < ST7567A_HEIGHT/8; i++) {
 80026ec:	1dfb      	adds	r3, r7, #7
 80026ee:	781a      	ldrb	r2, [r3, #0]
 80026f0:	1dfb      	adds	r3, r7, #7
 80026f2:	3201      	adds	r2, #1
 80026f4:	701a      	strb	r2, [r3, #0]
 80026f6:	1dfb      	adds	r3, r7, #7
 80026f8:	781b      	ldrb	r3, [r3, #0]
 80026fa:	2b07      	cmp	r3, #7
 80026fc:	d9e0      	bls.n	80026c0 <st7567a_Display+0x14>
	}
	st7567a_WriteCommand(ST7567A_DISPLAY_ON);
 80026fe:	20af      	movs	r0, #175	@ 0xaf
 8002700:	f7ff ff24 	bl	800254c <st7567a_WriteCommand>
}
 8002704:	46c0      	nop			@ (mov r8, r8)
 8002706:	46bd      	mov	sp, r7
 8002708:	b002      	add	sp, #8
 800270a:	bd80      	pop	{r7, pc}
 800270c:	20000274 	.word	0x20000274

08002710 <st7567a_DrawPixel>:
		st7567a_WriteCommand(ST7567A_DISPLAY_DRAM);
		st7567a_WriteCommand(ST7567A_DISPLAY_ON);
	}
}

void st7567a_DrawPixel(uint8_t x, uint8_t y, ST7567A_PixelState_t state) {
 8002710:	b590      	push	{r4, r7, lr}
 8002712:	b083      	sub	sp, #12
 8002714:	af00      	add	r7, sp, #0
 8002716:	0004      	movs	r4, r0
 8002718:	0008      	movs	r0, r1
 800271a:	0011      	movs	r1, r2
 800271c:	1dfb      	adds	r3, r7, #7
 800271e:	1c22      	adds	r2, r4, #0
 8002720:	701a      	strb	r2, [r3, #0]
 8002722:	1dbb      	adds	r3, r7, #6
 8002724:	1c02      	adds	r2, r0, #0
 8002726:	701a      	strb	r2, [r3, #0]
 8002728:	1d7b      	adds	r3, r7, #5
 800272a:	1c0a      	adds	r2, r1, #0
 800272c:	701a      	strb	r2, [r3, #0]
	if(x >= ST7567A_WIDTH || y >= ST7567A_HEIGHT) {
 800272e:	1dfb      	adds	r3, r7, #7
 8002730:	781b      	ldrb	r3, [r3, #0]
 8002732:	b25b      	sxtb	r3, r3
 8002734:	2b00      	cmp	r3, #0
 8002736:	db47      	blt.n	80027c8 <st7567a_DrawPixel+0xb8>
 8002738:	1dbb      	adds	r3, r7, #6
 800273a:	781b      	ldrb	r3, [r3, #0]
 800273c:	2b3f      	cmp	r3, #63	@ 0x3f
 800273e:	d843      	bhi.n	80027c8 <st7567a_DrawPixel+0xb8>
		return;
	}

	// Draw in the right color
	if(state == PIXEL_ON) {
 8002740:	1d7b      	adds	r3, r7, #5
 8002742:	781b      	ldrb	r3, [r3, #0]
 8002744:	2b01      	cmp	r3, #1
 8002746:	d11e      	bne.n	8002786 <st7567a_DrawPixel+0x76>
		ST7567A_buffer[x + (y / 8) * ST7567A_WIDTH] |= 1 << (y % 8);
 8002748:	1dfb      	adds	r3, r7, #7
 800274a:	781a      	ldrb	r2, [r3, #0]
 800274c:	1dbb      	adds	r3, r7, #6
 800274e:	781b      	ldrb	r3, [r3, #0]
 8002750:	08db      	lsrs	r3, r3, #3
 8002752:	b2d8      	uxtb	r0, r3
 8002754:	0003      	movs	r3, r0
 8002756:	01db      	lsls	r3, r3, #7
 8002758:	18d3      	adds	r3, r2, r3
 800275a:	4a1d      	ldr	r2, [pc, #116]	@ (80027d0 <st7567a_DrawPixel+0xc0>)
 800275c:	5cd3      	ldrb	r3, [r2, r3]
 800275e:	b25a      	sxtb	r2, r3
 8002760:	1dbb      	adds	r3, r7, #6
 8002762:	781b      	ldrb	r3, [r3, #0]
 8002764:	2107      	movs	r1, #7
 8002766:	400b      	ands	r3, r1
 8002768:	2101      	movs	r1, #1
 800276a:	4099      	lsls	r1, r3
 800276c:	000b      	movs	r3, r1
 800276e:	b25b      	sxtb	r3, r3
 8002770:	4313      	orrs	r3, r2
 8002772:	b259      	sxtb	r1, r3
 8002774:	1dfb      	adds	r3, r7, #7
 8002776:	781a      	ldrb	r2, [r3, #0]
 8002778:	0003      	movs	r3, r0
 800277a:	01db      	lsls	r3, r3, #7
 800277c:	18d3      	adds	r3, r2, r3
 800277e:	b2c9      	uxtb	r1, r1
 8002780:	4a13      	ldr	r2, [pc, #76]	@ (80027d0 <st7567a_DrawPixel+0xc0>)
 8002782:	54d1      	strb	r1, [r2, r3]
 8002784:	e021      	b.n	80027ca <st7567a_DrawPixel+0xba>
	} else {
		ST7567A_buffer[x + (y / 8) * ST7567A_WIDTH] &= ~(1 << (y % 8));
 8002786:	1dfb      	adds	r3, r7, #7
 8002788:	781a      	ldrb	r2, [r3, #0]
 800278a:	1dbb      	adds	r3, r7, #6
 800278c:	781b      	ldrb	r3, [r3, #0]
 800278e:	08db      	lsrs	r3, r3, #3
 8002790:	b2d8      	uxtb	r0, r3
 8002792:	0003      	movs	r3, r0
 8002794:	01db      	lsls	r3, r3, #7
 8002796:	18d3      	adds	r3, r2, r3
 8002798:	4a0d      	ldr	r2, [pc, #52]	@ (80027d0 <st7567a_DrawPixel+0xc0>)
 800279a:	5cd3      	ldrb	r3, [r2, r3]
 800279c:	b25b      	sxtb	r3, r3
 800279e:	1dba      	adds	r2, r7, #6
 80027a0:	7812      	ldrb	r2, [r2, #0]
 80027a2:	2107      	movs	r1, #7
 80027a4:	400a      	ands	r2, r1
 80027a6:	2101      	movs	r1, #1
 80027a8:	4091      	lsls	r1, r2
 80027aa:	000a      	movs	r2, r1
 80027ac:	b252      	sxtb	r2, r2
 80027ae:	43d2      	mvns	r2, r2
 80027b0:	b252      	sxtb	r2, r2
 80027b2:	4013      	ands	r3, r2
 80027b4:	b259      	sxtb	r1, r3
 80027b6:	1dfb      	adds	r3, r7, #7
 80027b8:	781a      	ldrb	r2, [r3, #0]
 80027ba:	0003      	movs	r3, r0
 80027bc:	01db      	lsls	r3, r3, #7
 80027be:	18d3      	adds	r3, r2, r3
 80027c0:	b2c9      	uxtb	r1, r1
 80027c2:	4a03      	ldr	r2, [pc, #12]	@ (80027d0 <st7567a_DrawPixel+0xc0>)
 80027c4:	54d1      	strb	r1, [r2, r3]
 80027c6:	e000      	b.n	80027ca <st7567a_DrawPixel+0xba>
		return;
 80027c8:	46c0      	nop			@ (mov r8, r8)
	}
}
 80027ca:	46bd      	mov	sp, r7
 80027cc:	b003      	add	sp, #12
 80027ce:	bd90      	pop	{r4, r7, pc}
 80027d0:	20000274 	.word	0x20000274

080027d4 <st7567a_SetCursor>:
			ST7567A_buffer[x + (y / 8) * ST7567A_WIDTH] &= ~(val);
		}
	}
}

void st7567a_SetCursor(uint8_t x, uint8_t y) {
 80027d4:	b580      	push	{r7, lr}
 80027d6:	b082      	sub	sp, #8
 80027d8:	af00      	add	r7, sp, #0
 80027da:	0002      	movs	r2, r0
 80027dc:	1dfb      	adds	r3, r7, #7
 80027de:	701a      	strb	r2, [r3, #0]
 80027e0:	1dbb      	adds	r3, r7, #6
 80027e2:	1c0a      	adds	r2, r1, #0
 80027e4:	701a      	strb	r2, [r3, #0]
	ST7567A.curr_x = x;
 80027e6:	4b06      	ldr	r3, [pc, #24]	@ (8002800 <st7567a_SetCursor+0x2c>)
 80027e8:	1dfa      	adds	r2, r7, #7
 80027ea:	7812      	ldrb	r2, [r2, #0]
 80027ec:	701a      	strb	r2, [r3, #0]
	ST7567A.curr_y = y;
 80027ee:	4b04      	ldr	r3, [pc, #16]	@ (8002800 <st7567a_SetCursor+0x2c>)
 80027f0:	1dba      	adds	r2, r7, #6
 80027f2:	7812      	ldrb	r2, [r2, #0]
 80027f4:	705a      	strb	r2, [r3, #1]
}
 80027f6:	46c0      	nop			@ (mov r8, r8)
 80027f8:	46bd      	mov	sp, r7
 80027fa:	b002      	add	sp, #8
 80027fc:	bd80      	pop	{r7, pc}
 80027fe:	46c0      	nop			@ (mov r8, r8)
 8002800:	20000674 	.word	0x20000674

08002804 <st7567a_WriteChar>:

void st7567a_WriteChar(char ch, fontStyle_t font, ST7567A_PixelState_t state) {
 8002804:	b084      	sub	sp, #16
 8002806:	b5b0      	push	{r4, r5, r7, lr}
 8002808:	b088      	sub	sp, #32
 800280a:	af00      	add	r7, sp, #0
 800280c:	0004      	movs	r4, r0
 800280e:	2004      	movs	r0, #4
 8002810:	2530      	movs	r5, #48	@ 0x30
 8002812:	1940      	adds	r0, r0, r5
 8002814:	19c0      	adds	r0, r0, r7
 8002816:	6001      	str	r1, [r0, #0]
 8002818:	6042      	str	r2, [r0, #4]
 800281a:	6083      	str	r3, [r0, #8]
 800281c:	1dfb      	adds	r3, r7, #7
 800281e:	1c22      	adds	r2, r4, #0
 8002820:	701a      	strb	r2, [r3, #0]
	// check if char is available in the font
	if(ch < font.FirstAsciiCode) {
 8002822:	2304      	movs	r3, #4
 8002824:	195b      	adds	r3, r3, r5
 8002826:	19db      	adds	r3, r3, r7
 8002828:	785b      	ldrb	r3, [r3, #1]
 800282a:	1dfa      	adds	r2, r7, #7
 800282c:	7812      	ldrb	r2, [r2, #0]
 800282e:	429a      	cmp	r2, r3
 8002830:	d203      	bcs.n	800283a <st7567a_WriteChar+0x36>
		ch = 0;
 8002832:	1dfb      	adds	r3, r7, #7
 8002834:	2200      	movs	r2, #0
 8002836:	701a      	strb	r2, [r3, #0]
 8002838:	e009      	b.n	800284e <st7567a_WriteChar+0x4a>
	}
	else {
		ch -= font.FirstAsciiCode;
 800283a:	2304      	movs	r3, #4
 800283c:	2230      	movs	r2, #48	@ 0x30
 800283e:	189b      	adds	r3, r3, r2
 8002840:	19db      	adds	r3, r3, r7
 8002842:	785a      	ldrb	r2, [r3, #1]
 8002844:	1dfb      	adds	r3, r7, #7
 8002846:	1df9      	adds	r1, r7, #7
 8002848:	7809      	ldrb	r1, [r1, #0]
 800284a:	1a8a      	subs	r2, r1, r2
 800284c:	701a      	strb	r2, [r3, #0]
	}

	// check remaining space on the current line
	if (ST7567A_WIDTH < (ST7567A.curr_x + font.GlyphWidth[(int)ch]) ||
 800284e:	4b69      	ldr	r3, [pc, #420]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 8002850:	781b      	ldrb	r3, [r3, #0]
 8002852:	0019      	movs	r1, r3
 8002854:	2304      	movs	r3, #4
 8002856:	2030      	movs	r0, #48	@ 0x30
 8002858:	181b      	adds	r3, r3, r0
 800285a:	19db      	adds	r3, r3, r7
 800285c:	689a      	ldr	r2, [r3, #8]
 800285e:	1dfb      	adds	r3, r7, #7
 8002860:	781b      	ldrb	r3, [r3, #0]
 8002862:	18d3      	adds	r3, r2, r3
 8002864:	781b      	ldrb	r3, [r3, #0]
 8002866:	18cb      	adds	r3, r1, r3
 8002868:	2b80      	cmp	r3, #128	@ 0x80
 800286a:	dd00      	ble.n	800286e <st7567a_WriteChar+0x6a>
 800286c:	e0ba      	b.n	80029e4 <st7567a_WriteChar+0x1e0>
		ST7567A_HEIGHT < (ST7567A.curr_y + font.GlyphWidth[(int)ch])) {
 800286e:	4b61      	ldr	r3, [pc, #388]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 8002870:	785b      	ldrb	r3, [r3, #1]
 8002872:	0019      	movs	r1, r3
 8002874:	2304      	movs	r3, #4
 8002876:	181b      	adds	r3, r3, r0
 8002878:	19db      	adds	r3, r3, r7
 800287a:	689a      	ldr	r2, [r3, #8]
 800287c:	1dfb      	adds	r3, r7, #7
 800287e:	781b      	ldrb	r3, [r3, #0]
 8002880:	18d3      	adds	r3, r2, r3
 8002882:	781b      	ldrb	r3, [r3, #0]
 8002884:	18cb      	adds	r3, r1, r3
	if (ST7567A_WIDTH < (ST7567A.curr_x + font.GlyphWidth[(int)ch]) ||
 8002886:	2b40      	cmp	r3, #64	@ 0x40
 8002888:	dd00      	ble.n	800288c <st7567a_WriteChar+0x88>
 800288a:	e0ab      	b.n	80029e4 <st7567a_WriteChar+0x1e0>
		return;
	}

	uint32_t chr;

	for(uint32_t j = 0; j < font.GlyphHeight; ++j) {
 800288c:	2300      	movs	r3, #0
 800288e:	61fb      	str	r3, [r7, #28]
 8002890:	e08f      	b.n	80029b2 <st7567a_WriteChar+0x1ae>
		uint8_t width = font.GlyphWidth[(int)ch];
 8002892:	2304      	movs	r3, #4
 8002894:	2230      	movs	r2, #48	@ 0x30
 8002896:	189b      	adds	r3, r3, r2
 8002898:	19db      	adds	r3, r3, r7
 800289a:	689a      	ldr	r2, [r3, #8]
 800289c:	1dfb      	adds	r3, r7, #7
 800289e:	781b      	ldrb	r3, [r3, #0]
 80028a0:	18d2      	adds	r2, r2, r3
 80028a2:	231b      	movs	r3, #27
 80028a4:	18fb      	adds	r3, r7, r3
 80028a6:	7812      	ldrb	r2, [r2, #0]
 80028a8:	701a      	strb	r2, [r3, #0]

		for(uint32_t w = 0; w < font.GlyphBytesWidth; ++w) {
 80028aa:	2300      	movs	r3, #0
 80028ac:	617b      	str	r3, [r7, #20]
 80028ae:	e074      	b.n	800299a <st7567a_WriteChar+0x196>
			chr = font.GlyphBitmaps[(ch * font.GlyphHeight + j) * font.GlyphBytesWidth + w];
 80028b0:	2304      	movs	r3, #4
 80028b2:	2030      	movs	r0, #48	@ 0x30
 80028b4:	181b      	adds	r3, r3, r0
 80028b6:	19db      	adds	r3, r3, r7
 80028b8:	68da      	ldr	r2, [r3, #12]
 80028ba:	1dfb      	adds	r3, r7, #7
 80028bc:	781b      	ldrb	r3, [r3, #0]
 80028be:	2104      	movs	r1, #4
 80028c0:	1809      	adds	r1, r1, r0
 80028c2:	19c9      	adds	r1, r1, r7
 80028c4:	78c9      	ldrb	r1, [r1, #3]
 80028c6:	434b      	muls	r3, r1
 80028c8:	0019      	movs	r1, r3
 80028ca:	69fb      	ldr	r3, [r7, #28]
 80028cc:	18cb      	adds	r3, r1, r3
 80028ce:	2104      	movs	r1, #4
 80028d0:	1809      	adds	r1, r1, r0
 80028d2:	19c9      	adds	r1, r1, r7
 80028d4:	7889      	ldrb	r1, [r1, #2]
 80028d6:	4359      	muls	r1, r3
 80028d8:	697b      	ldr	r3, [r7, #20]
 80028da:	18cb      	adds	r3, r1, r3
 80028dc:	18d3      	adds	r3, r2, r3
 80028de:	781b      	ldrb	r3, [r3, #0]
 80028e0:	60bb      	str	r3, [r7, #8]

			uint8_t w_range = width;
 80028e2:	2113      	movs	r1, #19
 80028e4:	187b      	adds	r3, r7, r1
 80028e6:	201b      	movs	r0, #27
 80028e8:	183a      	adds	r2, r7, r0
 80028ea:	7812      	ldrb	r2, [r2, #0]
 80028ec:	701a      	strb	r2, [r3, #0]
			if(w_range >= 8) {
 80028ee:	187b      	adds	r3, r7, r1
 80028f0:	781b      	ldrb	r3, [r3, #0]
 80028f2:	2b07      	cmp	r3, #7
 80028f4:	d907      	bls.n	8002906 <st7567a_WriteChar+0x102>
				w_range = 8;
 80028f6:	187b      	adds	r3, r7, r1
 80028f8:	2208      	movs	r2, #8
 80028fa:	701a      	strb	r2, [r3, #0]
				width -= 8;
 80028fc:	183b      	adds	r3, r7, r0
 80028fe:	183a      	adds	r2, r7, r0
 8002900:	7812      	ldrb	r2, [r2, #0]
 8002902:	3a08      	subs	r2, #8
 8002904:	701a      	strb	r2, [r3, #0]
			}

			for(uint32_t i = 0; i < w_range; ++i) {
 8002906:	2300      	movs	r3, #0
 8002908:	60fb      	str	r3, [r7, #12]
 800290a:	e03d      	b.n	8002988 <st7567a_WriteChar+0x184>
				if((chr << i) & 0x80)  {
 800290c:	68ba      	ldr	r2, [r7, #8]
 800290e:	68fb      	ldr	r3, [r7, #12]
 8002910:	409a      	lsls	r2, r3
 8002912:	0013      	movs	r3, r2
 8002914:	2280      	movs	r2, #128	@ 0x80
 8002916:	4013      	ands	r3, r2
 8002918:	d018      	beq.n	800294c <st7567a_WriteChar+0x148>
					st7567a_DrawPixel(ST7567A.curr_x + i + w*8, ST7567A.curr_y + j, state);
 800291a:	4b36      	ldr	r3, [pc, #216]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 800291c:	781a      	ldrb	r2, [r3, #0]
 800291e:	68fb      	ldr	r3, [r7, #12]
 8002920:	b2db      	uxtb	r3, r3
 8002922:	18d3      	adds	r3, r2, r3
 8002924:	b2da      	uxtb	r2, r3
 8002926:	697b      	ldr	r3, [r7, #20]
 8002928:	b2db      	uxtb	r3, r3
 800292a:	00db      	lsls	r3, r3, #3
 800292c:	b2db      	uxtb	r3, r3
 800292e:	18d3      	adds	r3, r2, r3
 8002930:	b2d8      	uxtb	r0, r3
 8002932:	4b30      	ldr	r3, [pc, #192]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 8002934:	785a      	ldrb	r2, [r3, #1]
 8002936:	69fb      	ldr	r3, [r7, #28]
 8002938:	b2db      	uxtb	r3, r3
 800293a:	18d3      	adds	r3, r2, r3
 800293c:	b2d9      	uxtb	r1, r3
 800293e:	2344      	movs	r3, #68	@ 0x44
 8002940:	18fb      	adds	r3, r7, r3
 8002942:	781b      	ldrb	r3, [r3, #0]
 8002944:	001a      	movs	r2, r3
 8002946:	f7ff fee3 	bl	8002710 <st7567a_DrawPixel>
 800294a:	e01a      	b.n	8002982 <st7567a_WriteChar+0x17e>
				} else {
					st7567a_DrawPixel(ST7567A.curr_x + i + w*8, ST7567A.curr_y + j, !state);
 800294c:	4b29      	ldr	r3, [pc, #164]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 800294e:	781a      	ldrb	r2, [r3, #0]
 8002950:	68fb      	ldr	r3, [r7, #12]
 8002952:	b2db      	uxtb	r3, r3
 8002954:	18d3      	adds	r3, r2, r3
 8002956:	b2da      	uxtb	r2, r3
 8002958:	697b      	ldr	r3, [r7, #20]
 800295a:	b2db      	uxtb	r3, r3
 800295c:	00db      	lsls	r3, r3, #3
 800295e:	b2db      	uxtb	r3, r3
 8002960:	18d3      	adds	r3, r2, r3
 8002962:	b2d8      	uxtb	r0, r3
 8002964:	4b23      	ldr	r3, [pc, #140]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 8002966:	785a      	ldrb	r2, [r3, #1]
 8002968:	69fb      	ldr	r3, [r7, #28]
 800296a:	b2db      	uxtb	r3, r3
 800296c:	18d3      	adds	r3, r2, r3
 800296e:	b2d9      	uxtb	r1, r3
 8002970:	2344      	movs	r3, #68	@ 0x44
 8002972:	18fb      	adds	r3, r7, r3
 8002974:	781b      	ldrb	r3, [r3, #0]
 8002976:	425a      	negs	r2, r3
 8002978:	4153      	adcs	r3, r2
 800297a:	b2db      	uxtb	r3, r3
 800297c:	001a      	movs	r2, r3
 800297e:	f7ff fec7 	bl	8002710 <st7567a_DrawPixel>
			for(uint32_t i = 0; i < w_range; ++i) {
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	3301      	adds	r3, #1
 8002986:	60fb      	str	r3, [r7, #12]
 8002988:	2313      	movs	r3, #19
 800298a:	18fb      	adds	r3, r7, r3
 800298c:	781b      	ldrb	r3, [r3, #0]
 800298e:	68fa      	ldr	r2, [r7, #12]
 8002990:	429a      	cmp	r2, r3
 8002992:	d3bb      	bcc.n	800290c <st7567a_WriteChar+0x108>
		for(uint32_t w = 0; w < font.GlyphBytesWidth; ++w) {
 8002994:	697b      	ldr	r3, [r7, #20]
 8002996:	3301      	adds	r3, #1
 8002998:	617b      	str	r3, [r7, #20]
 800299a:	2304      	movs	r3, #4
 800299c:	2230      	movs	r2, #48	@ 0x30
 800299e:	189b      	adds	r3, r3, r2
 80029a0:	19db      	adds	r3, r3, r7
 80029a2:	789b      	ldrb	r3, [r3, #2]
 80029a4:	001a      	movs	r2, r3
 80029a6:	697b      	ldr	r3, [r7, #20]
 80029a8:	4293      	cmp	r3, r2
 80029aa:	d381      	bcc.n	80028b0 <st7567a_WriteChar+0xac>
	for(uint32_t j = 0; j < font.GlyphHeight; ++j) {
 80029ac:	69fb      	ldr	r3, [r7, #28]
 80029ae:	3301      	adds	r3, #1
 80029b0:	61fb      	str	r3, [r7, #28]
 80029b2:	2304      	movs	r3, #4
 80029b4:	2130      	movs	r1, #48	@ 0x30
 80029b6:	185b      	adds	r3, r3, r1
 80029b8:	19db      	adds	r3, r3, r7
 80029ba:	78db      	ldrb	r3, [r3, #3]
 80029bc:	001a      	movs	r2, r3
 80029be:	69fb      	ldr	r3, [r7, #28]
 80029c0:	4293      	cmp	r3, r2
 80029c2:	d200      	bcs.n	80029c6 <st7567a_WriteChar+0x1c2>
 80029c4:	e765      	b.n	8002892 <st7567a_WriteChar+0x8e>
				}
			}
		}
	}

	ST7567A.curr_x += font.GlyphWidth[(int)ch];
 80029c6:	4b0b      	ldr	r3, [pc, #44]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 80029c8:	781a      	ldrb	r2, [r3, #0]
 80029ca:	2304      	movs	r3, #4
 80029cc:	185b      	adds	r3, r3, r1
 80029ce:	19db      	adds	r3, r3, r7
 80029d0:	6899      	ldr	r1, [r3, #8]
 80029d2:	1dfb      	adds	r3, r7, #7
 80029d4:	781b      	ldrb	r3, [r3, #0]
 80029d6:	18cb      	adds	r3, r1, r3
 80029d8:	781b      	ldrb	r3, [r3, #0]
 80029da:	18d3      	adds	r3, r2, r3
 80029dc:	b2da      	uxtb	r2, r3
 80029de:	4b05      	ldr	r3, [pc, #20]	@ (80029f4 <st7567a_WriteChar+0x1f0>)
 80029e0:	701a      	strb	r2, [r3, #0]
 80029e2:	e000      	b.n	80029e6 <st7567a_WriteChar+0x1e2>
		return;
 80029e4:	46c0      	nop			@ (mov r8, r8)

//	return ch + font.FirstAsciiCode;
}
 80029e6:	46bd      	mov	sp, r7
 80029e8:	b008      	add	sp, #32
 80029ea:	bcb0      	pop	{r4, r5, r7}
 80029ec:	bc08      	pop	{r3}
 80029ee:	b004      	add	sp, #16
 80029f0:	4718      	bx	r3
 80029f2:	46c0      	nop			@ (mov r8, r8)
 80029f4:	20000674 	.word	0x20000674

080029f8 <st7567a_WriteString>:

void st7567a_WriteString(const char *str, fontStyle_t font, ST7567A_PixelState_t state) {
 80029f8:	b084      	sub	sp, #16
 80029fa:	b590      	push	{r4, r7, lr}
 80029fc:	b085      	sub	sp, #20
 80029fe:	af02      	add	r7, sp, #8
 8002a00:	6078      	str	r0, [r7, #4]
 8002a02:	2004      	movs	r0, #4
 8002a04:	2410      	movs	r4, #16
 8002a06:	1900      	adds	r0, r0, r4
 8002a08:	2408      	movs	r4, #8
 8002a0a:	46a4      	mov	ip, r4
 8002a0c:	44bc      	add	ip, r7
 8002a0e:	4460      	add	r0, ip
 8002a10:	6001      	str	r1, [r0, #0]
 8002a12:	6042      	str	r2, [r0, #4]
 8002a14:	6083      	str	r3, [r0, #8]
	while(*str) {
 8002a16:	e018      	b.n	8002a4a <st7567a_WriteString+0x52>
		st7567a_WriteChar(*str++, font, state);
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	1c5a      	adds	r2, r3, #1
 8002a1c:	607a      	str	r2, [r7, #4]
 8002a1e:	7818      	ldrb	r0, [r3, #0]
 8002a20:	2304      	movs	r3, #4
 8002a22:	2210      	movs	r2, #16
 8002a24:	189b      	adds	r3, r3, r2
 8002a26:	2208      	movs	r2, #8
 8002a28:	4694      	mov	ip, r2
 8002a2a:	44bc      	add	ip, r7
 8002a2c:	4463      	add	r3, ip
 8002a2e:	2224      	movs	r2, #36	@ 0x24
 8002a30:	2108      	movs	r1, #8
 8002a32:	1852      	adds	r2, r2, r1
 8002a34:	19d2      	adds	r2, r2, r7
 8002a36:	7812      	ldrb	r2, [r2, #0]
 8002a38:	9201      	str	r2, [sp, #4]
 8002a3a:	466a      	mov	r2, sp
 8002a3c:	68d9      	ldr	r1, [r3, #12]
 8002a3e:	6011      	str	r1, [r2, #0]
 8002a40:	6819      	ldr	r1, [r3, #0]
 8002a42:	685a      	ldr	r2, [r3, #4]
 8002a44:	689b      	ldr	r3, [r3, #8]
 8002a46:	f7ff fedd 	bl	8002804 <st7567a_WriteChar>
	while(*str) {
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	781b      	ldrb	r3, [r3, #0]
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d1e2      	bne.n	8002a18 <st7567a_WriteString+0x20>
	}
}
 8002a52:	46c0      	nop			@ (mov r8, r8)
 8002a54:	46c0      	nop			@ (mov r8, r8)
 8002a56:	46bd      	mov	sp, r7
 8002a58:	b003      	add	sp, #12
 8002a5a:	bc90      	pop	{r4, r7}
 8002a5c:	bc08      	pop	{r3}
 8002a5e:	b004      	add	sp, #16
 8002a60:	4718      	bx	r3
	...

08002a64 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002a64:	b580      	push	{r7, lr}
 8002a66:	b082      	sub	sp, #8
 8002a68:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002a6a:	4b0f      	ldr	r3, [pc, #60]	@ (8002aa8 <HAL_MspInit+0x44>)
 8002a6c:	699a      	ldr	r2, [r3, #24]
 8002a6e:	4b0e      	ldr	r3, [pc, #56]	@ (8002aa8 <HAL_MspInit+0x44>)
 8002a70:	2101      	movs	r1, #1
 8002a72:	430a      	orrs	r2, r1
 8002a74:	619a      	str	r2, [r3, #24]
 8002a76:	4b0c      	ldr	r3, [pc, #48]	@ (8002aa8 <HAL_MspInit+0x44>)
 8002a78:	699b      	ldr	r3, [r3, #24]
 8002a7a:	2201      	movs	r2, #1
 8002a7c:	4013      	ands	r3, r2
 8002a7e:	607b      	str	r3, [r7, #4]
 8002a80:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002a82:	4b09      	ldr	r3, [pc, #36]	@ (8002aa8 <HAL_MspInit+0x44>)
 8002a84:	69da      	ldr	r2, [r3, #28]
 8002a86:	4b08      	ldr	r3, [pc, #32]	@ (8002aa8 <HAL_MspInit+0x44>)
 8002a88:	2180      	movs	r1, #128	@ 0x80
 8002a8a:	0549      	lsls	r1, r1, #21
 8002a8c:	430a      	orrs	r2, r1
 8002a8e:	61da      	str	r2, [r3, #28]
 8002a90:	4b05      	ldr	r3, [pc, #20]	@ (8002aa8 <HAL_MspInit+0x44>)
 8002a92:	69da      	ldr	r2, [r3, #28]
 8002a94:	2380      	movs	r3, #128	@ 0x80
 8002a96:	055b      	lsls	r3, r3, #21
 8002a98:	4013      	ands	r3, r2
 8002a9a:	603b      	str	r3, [r7, #0]
 8002a9c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002a9e:	46c0      	nop			@ (mov r8, r8)
 8002aa0:	46bd      	mov	sp, r7
 8002aa2:	b002      	add	sp, #8
 8002aa4:	bd80      	pop	{r7, pc}
 8002aa6:	46c0      	nop			@ (mov r8, r8)
 8002aa8:	40021000 	.word	0x40021000

08002aac <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002aac:	b590      	push	{r4, r7, lr}
 8002aae:	b08b      	sub	sp, #44	@ 0x2c
 8002ab0:	af00      	add	r7, sp, #0
 8002ab2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002ab4:	2414      	movs	r4, #20
 8002ab6:	193b      	adds	r3, r7, r4
 8002ab8:	0018      	movs	r0, r3
 8002aba:	2314      	movs	r3, #20
 8002abc:	001a      	movs	r2, r3
 8002abe:	2100      	movs	r1, #0
 8002ac0:	f002 f950 	bl	8004d64 <memset>
  if(hspi->Instance==SPI1)
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	4a1c      	ldr	r2, [pc, #112]	@ (8002b3c <HAL_SPI_MspInit+0x90>)
 8002aca:	4293      	cmp	r3, r2
 8002acc:	d132      	bne.n	8002b34 <HAL_SPI_MspInit+0x88>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002ace:	4b1c      	ldr	r3, [pc, #112]	@ (8002b40 <HAL_SPI_MspInit+0x94>)
 8002ad0:	699a      	ldr	r2, [r3, #24]
 8002ad2:	4b1b      	ldr	r3, [pc, #108]	@ (8002b40 <HAL_SPI_MspInit+0x94>)
 8002ad4:	2180      	movs	r1, #128	@ 0x80
 8002ad6:	0149      	lsls	r1, r1, #5
 8002ad8:	430a      	orrs	r2, r1
 8002ada:	619a      	str	r2, [r3, #24]
 8002adc:	4b18      	ldr	r3, [pc, #96]	@ (8002b40 <HAL_SPI_MspInit+0x94>)
 8002ade:	699a      	ldr	r2, [r3, #24]
 8002ae0:	2380      	movs	r3, #128	@ 0x80
 8002ae2:	015b      	lsls	r3, r3, #5
 8002ae4:	4013      	ands	r3, r2
 8002ae6:	613b      	str	r3, [r7, #16]
 8002ae8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002aea:	4b15      	ldr	r3, [pc, #84]	@ (8002b40 <HAL_SPI_MspInit+0x94>)
 8002aec:	695a      	ldr	r2, [r3, #20]
 8002aee:	4b14      	ldr	r3, [pc, #80]	@ (8002b40 <HAL_SPI_MspInit+0x94>)
 8002af0:	2180      	movs	r1, #128	@ 0x80
 8002af2:	0289      	lsls	r1, r1, #10
 8002af4:	430a      	orrs	r2, r1
 8002af6:	615a      	str	r2, [r3, #20]
 8002af8:	4b11      	ldr	r3, [pc, #68]	@ (8002b40 <HAL_SPI_MspInit+0x94>)
 8002afa:	695a      	ldr	r2, [r3, #20]
 8002afc:	2380      	movs	r3, #128	@ 0x80
 8002afe:	029b      	lsls	r3, r3, #10
 8002b00:	4013      	ands	r3, r2
 8002b02:	60fb      	str	r3, [r7, #12]
 8002b04:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8002b06:	0021      	movs	r1, r4
 8002b08:	187b      	adds	r3, r7, r1
 8002b0a:	22a0      	movs	r2, #160	@ 0xa0
 8002b0c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b0e:	187b      	adds	r3, r7, r1
 8002b10:	2202      	movs	r2, #2
 8002b12:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b14:	187b      	adds	r3, r7, r1
 8002b16:	2200      	movs	r2, #0
 8002b18:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b1a:	187b      	adds	r3, r7, r1
 8002b1c:	2203      	movs	r2, #3
 8002b1e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 8002b20:	187b      	adds	r3, r7, r1
 8002b22:	2200      	movs	r2, #0
 8002b24:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b26:	187a      	adds	r2, r7, r1
 8002b28:	2390      	movs	r3, #144	@ 0x90
 8002b2a:	05db      	lsls	r3, r3, #23
 8002b2c:	0011      	movs	r1, r2
 8002b2e:	0018      	movs	r0, r3
 8002b30:	f000 fa4c 	bl	8002fcc <HAL_GPIO_Init>

  /* USER CODE END SPI1_MspInit 1 */

  }

}
 8002b34:	46c0      	nop			@ (mov r8, r8)
 8002b36:	46bd      	mov	sp, r7
 8002b38:	b00b      	add	sp, #44	@ 0x2c
 8002b3a:	bd90      	pop	{r4, r7, pc}
 8002b3c:	40013000 	.word	0x40013000
 8002b40:	40021000 	.word	0x40021000

08002b44 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002b44:	b580      	push	{r7, lr}
 8002b46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002b48:	46c0      	nop			@ (mov r8, r8)
 8002b4a:	e7fd      	b.n	8002b48 <NMI_Handler+0x4>

08002b4c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002b4c:	b580      	push	{r7, lr}
 8002b4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002b50:	46c0      	nop			@ (mov r8, r8)
 8002b52:	e7fd      	b.n	8002b50 <HardFault_Handler+0x4>

08002b54 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002b54:	b580      	push	{r7, lr}
 8002b56:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002b58:	46c0      	nop			@ (mov r8, r8)
 8002b5a:	46bd      	mov	sp, r7
 8002b5c:	bd80      	pop	{r7, pc}

08002b5e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002b5e:	b580      	push	{r7, lr}
 8002b60:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002b62:	46c0      	nop			@ (mov r8, r8)
 8002b64:	46bd      	mov	sp, r7
 8002b66:	bd80      	pop	{r7, pc}

08002b68 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002b68:	b580      	push	{r7, lr}
 8002b6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002b6c:	f000 f93a 	bl	8002de4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002b70:	46c0      	nop			@ (mov r8, r8)
 8002b72:	46bd      	mov	sp, r7
 8002b74:	bd80      	pop	{r7, pc}

08002b76 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002b76:	b580      	push	{r7, lr}
 8002b78:	af00      	add	r7, sp, #0
  return 1;
 8002b7a:	2301      	movs	r3, #1
}
 8002b7c:	0018      	movs	r0, r3
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	bd80      	pop	{r7, pc}

08002b82 <_kill>:

int _kill(int pid, int sig)
{
 8002b82:	b580      	push	{r7, lr}
 8002b84:	b082      	sub	sp, #8
 8002b86:	af00      	add	r7, sp, #0
 8002b88:	6078      	str	r0, [r7, #4]
 8002b8a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002b8c:	f002 f944 	bl	8004e18 <__errno>
 8002b90:	0003      	movs	r3, r0
 8002b92:	2216      	movs	r2, #22
 8002b94:	601a      	str	r2, [r3, #0]
  return -1;
 8002b96:	2301      	movs	r3, #1
 8002b98:	425b      	negs	r3, r3
}
 8002b9a:	0018      	movs	r0, r3
 8002b9c:	46bd      	mov	sp, r7
 8002b9e:	b002      	add	sp, #8
 8002ba0:	bd80      	pop	{r7, pc}

08002ba2 <_exit>:

void _exit (int status)
{
 8002ba2:	b580      	push	{r7, lr}
 8002ba4:	b082      	sub	sp, #8
 8002ba6:	af00      	add	r7, sp, #0
 8002ba8:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002baa:	2301      	movs	r3, #1
 8002bac:	425a      	negs	r2, r3
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	0011      	movs	r1, r2
 8002bb2:	0018      	movs	r0, r3
 8002bb4:	f7ff ffe5 	bl	8002b82 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002bb8:	46c0      	nop			@ (mov r8, r8)
 8002bba:	e7fd      	b.n	8002bb8 <_exit+0x16>

08002bbc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002bbc:	b580      	push	{r7, lr}
 8002bbe:	b086      	sub	sp, #24
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	60f8      	str	r0, [r7, #12]
 8002bc4:	60b9      	str	r1, [r7, #8]
 8002bc6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002bc8:	2300      	movs	r3, #0
 8002bca:	617b      	str	r3, [r7, #20]
 8002bcc:	e00a      	b.n	8002be4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002bce:	e000      	b.n	8002bd2 <_read+0x16>
 8002bd0:	bf00      	nop
 8002bd2:	0001      	movs	r1, r0
 8002bd4:	68bb      	ldr	r3, [r7, #8]
 8002bd6:	1c5a      	adds	r2, r3, #1
 8002bd8:	60ba      	str	r2, [r7, #8]
 8002bda:	b2ca      	uxtb	r2, r1
 8002bdc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002bde:	697b      	ldr	r3, [r7, #20]
 8002be0:	3301      	adds	r3, #1
 8002be2:	617b      	str	r3, [r7, #20]
 8002be4:	697a      	ldr	r2, [r7, #20]
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	429a      	cmp	r2, r3
 8002bea:	dbf0      	blt.n	8002bce <_read+0x12>
  }

  return len;
 8002bec:	687b      	ldr	r3, [r7, #4]
}
 8002bee:	0018      	movs	r0, r3
 8002bf0:	46bd      	mov	sp, r7
 8002bf2:	b006      	add	sp, #24
 8002bf4:	bd80      	pop	{r7, pc}

08002bf6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002bf6:	b580      	push	{r7, lr}
 8002bf8:	b086      	sub	sp, #24
 8002bfa:	af00      	add	r7, sp, #0
 8002bfc:	60f8      	str	r0, [r7, #12]
 8002bfe:	60b9      	str	r1, [r7, #8]
 8002c00:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c02:	2300      	movs	r3, #0
 8002c04:	617b      	str	r3, [r7, #20]
 8002c06:	e009      	b.n	8002c1c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002c08:	68bb      	ldr	r3, [r7, #8]
 8002c0a:	1c5a      	adds	r2, r3, #1
 8002c0c:	60ba      	str	r2, [r7, #8]
 8002c0e:	781b      	ldrb	r3, [r3, #0]
 8002c10:	0018      	movs	r0, r3
 8002c12:	e000      	b.n	8002c16 <_write+0x20>
 8002c14:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c16:	697b      	ldr	r3, [r7, #20]
 8002c18:	3301      	adds	r3, #1
 8002c1a:	617b      	str	r3, [r7, #20]
 8002c1c:	697a      	ldr	r2, [r7, #20]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	429a      	cmp	r2, r3
 8002c22:	dbf1      	blt.n	8002c08 <_write+0x12>
  }
  return len;
 8002c24:	687b      	ldr	r3, [r7, #4]
}
 8002c26:	0018      	movs	r0, r3
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	b006      	add	sp, #24
 8002c2c:	bd80      	pop	{r7, pc}

08002c2e <_close>:

int _close(int file)
{
 8002c2e:	b580      	push	{r7, lr}
 8002c30:	b082      	sub	sp, #8
 8002c32:	af00      	add	r7, sp, #0
 8002c34:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002c36:	2301      	movs	r3, #1
 8002c38:	425b      	negs	r3, r3
}
 8002c3a:	0018      	movs	r0, r3
 8002c3c:	46bd      	mov	sp, r7
 8002c3e:	b002      	add	sp, #8
 8002c40:	bd80      	pop	{r7, pc}

08002c42 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002c42:	b580      	push	{r7, lr}
 8002c44:	b082      	sub	sp, #8
 8002c46:	af00      	add	r7, sp, #0
 8002c48:	6078      	str	r0, [r7, #4]
 8002c4a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002c4c:	683b      	ldr	r3, [r7, #0]
 8002c4e:	2280      	movs	r2, #128	@ 0x80
 8002c50:	0192      	lsls	r2, r2, #6
 8002c52:	605a      	str	r2, [r3, #4]
  return 0;
 8002c54:	2300      	movs	r3, #0
}
 8002c56:	0018      	movs	r0, r3
 8002c58:	46bd      	mov	sp, r7
 8002c5a:	b002      	add	sp, #8
 8002c5c:	bd80      	pop	{r7, pc}

08002c5e <_isatty>:

int _isatty(int file)
{
 8002c5e:	b580      	push	{r7, lr}
 8002c60:	b082      	sub	sp, #8
 8002c62:	af00      	add	r7, sp, #0
 8002c64:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002c66:	2301      	movs	r3, #1
}
 8002c68:	0018      	movs	r0, r3
 8002c6a:	46bd      	mov	sp, r7
 8002c6c:	b002      	add	sp, #8
 8002c6e:	bd80      	pop	{r7, pc}

08002c70 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002c70:	b580      	push	{r7, lr}
 8002c72:	b084      	sub	sp, #16
 8002c74:	af00      	add	r7, sp, #0
 8002c76:	60f8      	str	r0, [r7, #12]
 8002c78:	60b9      	str	r1, [r7, #8]
 8002c7a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002c7c:	2300      	movs	r3, #0
}
 8002c7e:	0018      	movs	r0, r3
 8002c80:	46bd      	mov	sp, r7
 8002c82:	b004      	add	sp, #16
 8002c84:	bd80      	pop	{r7, pc}
	...

08002c88 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	b086      	sub	sp, #24
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002c90:	4a14      	ldr	r2, [pc, #80]	@ (8002ce4 <_sbrk+0x5c>)
 8002c92:	4b15      	ldr	r3, [pc, #84]	@ (8002ce8 <_sbrk+0x60>)
 8002c94:	1ad3      	subs	r3, r2, r3
 8002c96:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002c98:	697b      	ldr	r3, [r7, #20]
 8002c9a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002c9c:	4b13      	ldr	r3, [pc, #76]	@ (8002cec <_sbrk+0x64>)
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d102      	bne.n	8002caa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002ca4:	4b11      	ldr	r3, [pc, #68]	@ (8002cec <_sbrk+0x64>)
 8002ca6:	4a12      	ldr	r2, [pc, #72]	@ (8002cf0 <_sbrk+0x68>)
 8002ca8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002caa:	4b10      	ldr	r3, [pc, #64]	@ (8002cec <_sbrk+0x64>)
 8002cac:	681a      	ldr	r2, [r3, #0]
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	18d3      	adds	r3, r2, r3
 8002cb2:	693a      	ldr	r2, [r7, #16]
 8002cb4:	429a      	cmp	r2, r3
 8002cb6:	d207      	bcs.n	8002cc8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002cb8:	f002 f8ae 	bl	8004e18 <__errno>
 8002cbc:	0003      	movs	r3, r0
 8002cbe:	220c      	movs	r2, #12
 8002cc0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002cc2:	2301      	movs	r3, #1
 8002cc4:	425b      	negs	r3, r3
 8002cc6:	e009      	b.n	8002cdc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002cc8:	4b08      	ldr	r3, [pc, #32]	@ (8002cec <_sbrk+0x64>)
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002cce:	4b07      	ldr	r3, [pc, #28]	@ (8002cec <_sbrk+0x64>)
 8002cd0:	681a      	ldr	r2, [r3, #0]
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	18d2      	adds	r2, r2, r3
 8002cd6:	4b05      	ldr	r3, [pc, #20]	@ (8002cec <_sbrk+0x64>)
 8002cd8:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002cda:	68fb      	ldr	r3, [r7, #12]
}
 8002cdc:	0018      	movs	r0, r3
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	b006      	add	sp, #24
 8002ce2:	bd80      	pop	{r7, pc}
 8002ce4:	20002000 	.word	0x20002000
 8002ce8:	00000400 	.word	0x00000400
 8002cec:	20000678 	.word	0x20000678
 8002cf0:	200007d0 	.word	0x200007d0

08002cf4 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002cf8:	46c0      	nop			@ (mov r8, r8)
 8002cfa:	46bd      	mov	sp, r7
 8002cfc:	bd80      	pop	{r7, pc}
	...

08002d00 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002d00:	480d      	ldr	r0, [pc, #52]	@ (8002d38 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002d02:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 8002d04:	f7ff fff6 	bl	8002cf4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002d08:	480c      	ldr	r0, [pc, #48]	@ (8002d3c <LoopForever+0x6>)
  ldr r1, =_edata
 8002d0a:	490d      	ldr	r1, [pc, #52]	@ (8002d40 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002d0c:	4a0d      	ldr	r2, [pc, #52]	@ (8002d44 <LoopForever+0xe>)
  movs r3, #0
 8002d0e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002d10:	e002      	b.n	8002d18 <LoopCopyDataInit>

08002d12 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002d12:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002d14:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002d16:	3304      	adds	r3, #4

08002d18 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002d18:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002d1a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002d1c:	d3f9      	bcc.n	8002d12 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002d1e:	4a0a      	ldr	r2, [pc, #40]	@ (8002d48 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002d20:	4c0a      	ldr	r4, [pc, #40]	@ (8002d4c <LoopForever+0x16>)
  movs r3, #0
 8002d22:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002d24:	e001      	b.n	8002d2a <LoopFillZerobss>

08002d26 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002d26:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002d28:	3204      	adds	r2, #4

08002d2a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002d2a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002d2c:	d3fb      	bcc.n	8002d26 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002d2e:	f002 f879 	bl	8004e24 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002d32:	f7ff fadb 	bl	80022ec <main>

08002d36 <LoopForever>:

LoopForever:
    b LoopForever
 8002d36:	e7fe      	b.n	8002d36 <LoopForever>
  ldr   r0, =_estack
 8002d38:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8002d3c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002d40:	200001f4 	.word	0x200001f4
  ldr r2, =_sidata
 8002d44:	080085d0 	.word	0x080085d0
  ldr r2, =_sbss
 8002d48:	200001f4 	.word	0x200001f4
  ldr r4, =_ebss
 8002d4c:	200007cc 	.word	0x200007cc

08002d50 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002d50:	e7fe      	b.n	8002d50 <ADC1_IRQHandler>
	...

08002d54 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002d54:	b580      	push	{r7, lr}
 8002d56:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002d58:	4b07      	ldr	r3, [pc, #28]	@ (8002d78 <HAL_Init+0x24>)
 8002d5a:	681a      	ldr	r2, [r3, #0]
 8002d5c:	4b06      	ldr	r3, [pc, #24]	@ (8002d78 <HAL_Init+0x24>)
 8002d5e:	2110      	movs	r1, #16
 8002d60:	430a      	orrs	r2, r1
 8002d62:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8002d64:	2003      	movs	r0, #3
 8002d66:	f000 f809 	bl	8002d7c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002d6a:	f7ff fe7b 	bl	8002a64 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002d6e:	2300      	movs	r3, #0
}
 8002d70:	0018      	movs	r0, r3
 8002d72:	46bd      	mov	sp, r7
 8002d74:	bd80      	pop	{r7, pc}
 8002d76:	46c0      	nop			@ (mov r8, r8)
 8002d78:	40022000 	.word	0x40022000

08002d7c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002d7c:	b590      	push	{r4, r7, lr}
 8002d7e:	b083      	sub	sp, #12
 8002d80:	af00      	add	r7, sp, #0
 8002d82:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002d84:	4b14      	ldr	r3, [pc, #80]	@ (8002dd8 <HAL_InitTick+0x5c>)
 8002d86:	681c      	ldr	r4, [r3, #0]
 8002d88:	4b14      	ldr	r3, [pc, #80]	@ (8002ddc <HAL_InitTick+0x60>)
 8002d8a:	781b      	ldrb	r3, [r3, #0]
 8002d8c:	0019      	movs	r1, r3
 8002d8e:	23fa      	movs	r3, #250	@ 0xfa
 8002d90:	0098      	lsls	r0, r3, #2
 8002d92:	f7fd f9d5 	bl	8000140 <__udivsi3>
 8002d96:	0003      	movs	r3, r0
 8002d98:	0019      	movs	r1, r3
 8002d9a:	0020      	movs	r0, r4
 8002d9c:	f7fd f9d0 	bl	8000140 <__udivsi3>
 8002da0:	0003      	movs	r3, r0
 8002da2:	0018      	movs	r0, r3
 8002da4:	f000 f905 	bl	8002fb2 <HAL_SYSTICK_Config>
 8002da8:	1e03      	subs	r3, r0, #0
 8002daa:	d001      	beq.n	8002db0 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8002dac:	2301      	movs	r3, #1
 8002dae:	e00f      	b.n	8002dd0 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	2b03      	cmp	r3, #3
 8002db4:	d80b      	bhi.n	8002dce <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002db6:	6879      	ldr	r1, [r7, #4]
 8002db8:	2301      	movs	r3, #1
 8002dba:	425b      	negs	r3, r3
 8002dbc:	2200      	movs	r2, #0
 8002dbe:	0018      	movs	r0, r3
 8002dc0:	f000 f8e2 	bl	8002f88 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002dc4:	4b06      	ldr	r3, [pc, #24]	@ (8002de0 <HAL_InitTick+0x64>)
 8002dc6:	687a      	ldr	r2, [r7, #4]
 8002dc8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8002dca:	2300      	movs	r3, #0
 8002dcc:	e000      	b.n	8002dd0 <HAL_InitTick+0x54>
    return HAL_ERROR;
 8002dce:	2301      	movs	r3, #1
}
 8002dd0:	0018      	movs	r0, r3
 8002dd2:	46bd      	mov	sp, r7
 8002dd4:	b003      	add	sp, #12
 8002dd6:	bd90      	pop	{r4, r7, pc}
 8002dd8:	20000020 	.word	0x20000020
 8002ddc:	20000028 	.word	0x20000028
 8002de0:	20000024 	.word	0x20000024

08002de4 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002de4:	b580      	push	{r7, lr}
 8002de6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002de8:	4b05      	ldr	r3, [pc, #20]	@ (8002e00 <HAL_IncTick+0x1c>)
 8002dea:	781b      	ldrb	r3, [r3, #0]
 8002dec:	001a      	movs	r2, r3
 8002dee:	4b05      	ldr	r3, [pc, #20]	@ (8002e04 <HAL_IncTick+0x20>)
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	18d2      	adds	r2, r2, r3
 8002df4:	4b03      	ldr	r3, [pc, #12]	@ (8002e04 <HAL_IncTick+0x20>)
 8002df6:	601a      	str	r2, [r3, #0]
}
 8002df8:	46c0      	nop			@ (mov r8, r8)
 8002dfa:	46bd      	mov	sp, r7
 8002dfc:	bd80      	pop	{r7, pc}
 8002dfe:	46c0      	nop			@ (mov r8, r8)
 8002e00:	20000028 	.word	0x20000028
 8002e04:	2000067c 	.word	0x2000067c

08002e08 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002e08:	b580      	push	{r7, lr}
 8002e0a:	af00      	add	r7, sp, #0
  return uwTick;
 8002e0c:	4b02      	ldr	r3, [pc, #8]	@ (8002e18 <HAL_GetTick+0x10>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
}
 8002e10:	0018      	movs	r0, r3
 8002e12:	46bd      	mov	sp, r7
 8002e14:	bd80      	pop	{r7, pc}
 8002e16:	46c0      	nop			@ (mov r8, r8)
 8002e18:	2000067c 	.word	0x2000067c

08002e1c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002e1c:	b580      	push	{r7, lr}
 8002e1e:	b084      	sub	sp, #16
 8002e20:	af00      	add	r7, sp, #0
 8002e22:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002e24:	f7ff fff0 	bl	8002e08 <HAL_GetTick>
 8002e28:	0003      	movs	r3, r0
 8002e2a:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002e30:	68fb      	ldr	r3, [r7, #12]
 8002e32:	3301      	adds	r3, #1
 8002e34:	d005      	beq.n	8002e42 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002e36:	4b0a      	ldr	r3, [pc, #40]	@ (8002e60 <HAL_Delay+0x44>)
 8002e38:	781b      	ldrb	r3, [r3, #0]
 8002e3a:	001a      	movs	r2, r3
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	189b      	adds	r3, r3, r2
 8002e40:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002e42:	46c0      	nop			@ (mov r8, r8)
 8002e44:	f7ff ffe0 	bl	8002e08 <HAL_GetTick>
 8002e48:	0002      	movs	r2, r0
 8002e4a:	68bb      	ldr	r3, [r7, #8]
 8002e4c:	1ad3      	subs	r3, r2, r3
 8002e4e:	68fa      	ldr	r2, [r7, #12]
 8002e50:	429a      	cmp	r2, r3
 8002e52:	d8f7      	bhi.n	8002e44 <HAL_Delay+0x28>
  {
  }
}
 8002e54:	46c0      	nop			@ (mov r8, r8)
 8002e56:	46c0      	nop			@ (mov r8, r8)
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	b004      	add	sp, #16
 8002e5c:	bd80      	pop	{r7, pc}
 8002e5e:	46c0      	nop			@ (mov r8, r8)
 8002e60:	20000028 	.word	0x20000028

08002e64 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002e64:	b590      	push	{r4, r7, lr}
 8002e66:	b083      	sub	sp, #12
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	0002      	movs	r2, r0
 8002e6c:	6039      	str	r1, [r7, #0]
 8002e6e:	1dfb      	adds	r3, r7, #7
 8002e70:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002e72:	1dfb      	adds	r3, r7, #7
 8002e74:	781b      	ldrb	r3, [r3, #0]
 8002e76:	2b7f      	cmp	r3, #127	@ 0x7f
 8002e78:	d828      	bhi.n	8002ecc <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002e7a:	4a2f      	ldr	r2, [pc, #188]	@ (8002f38 <__NVIC_SetPriority+0xd4>)
 8002e7c:	1dfb      	adds	r3, r7, #7
 8002e7e:	781b      	ldrb	r3, [r3, #0]
 8002e80:	b25b      	sxtb	r3, r3
 8002e82:	089b      	lsrs	r3, r3, #2
 8002e84:	33c0      	adds	r3, #192	@ 0xc0
 8002e86:	009b      	lsls	r3, r3, #2
 8002e88:	589b      	ldr	r3, [r3, r2]
 8002e8a:	1dfa      	adds	r2, r7, #7
 8002e8c:	7812      	ldrb	r2, [r2, #0]
 8002e8e:	0011      	movs	r1, r2
 8002e90:	2203      	movs	r2, #3
 8002e92:	400a      	ands	r2, r1
 8002e94:	00d2      	lsls	r2, r2, #3
 8002e96:	21ff      	movs	r1, #255	@ 0xff
 8002e98:	4091      	lsls	r1, r2
 8002e9a:	000a      	movs	r2, r1
 8002e9c:	43d2      	mvns	r2, r2
 8002e9e:	401a      	ands	r2, r3
 8002ea0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002ea2:	683b      	ldr	r3, [r7, #0]
 8002ea4:	019b      	lsls	r3, r3, #6
 8002ea6:	22ff      	movs	r2, #255	@ 0xff
 8002ea8:	401a      	ands	r2, r3
 8002eaa:	1dfb      	adds	r3, r7, #7
 8002eac:	781b      	ldrb	r3, [r3, #0]
 8002eae:	0018      	movs	r0, r3
 8002eb0:	2303      	movs	r3, #3
 8002eb2:	4003      	ands	r3, r0
 8002eb4:	00db      	lsls	r3, r3, #3
 8002eb6:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002eb8:	481f      	ldr	r0, [pc, #124]	@ (8002f38 <__NVIC_SetPriority+0xd4>)
 8002eba:	1dfb      	adds	r3, r7, #7
 8002ebc:	781b      	ldrb	r3, [r3, #0]
 8002ebe:	b25b      	sxtb	r3, r3
 8002ec0:	089b      	lsrs	r3, r3, #2
 8002ec2:	430a      	orrs	r2, r1
 8002ec4:	33c0      	adds	r3, #192	@ 0xc0
 8002ec6:	009b      	lsls	r3, r3, #2
 8002ec8:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8002eca:	e031      	b.n	8002f30 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ecc:	4a1b      	ldr	r2, [pc, #108]	@ (8002f3c <__NVIC_SetPriority+0xd8>)
 8002ece:	1dfb      	adds	r3, r7, #7
 8002ed0:	781b      	ldrb	r3, [r3, #0]
 8002ed2:	0019      	movs	r1, r3
 8002ed4:	230f      	movs	r3, #15
 8002ed6:	400b      	ands	r3, r1
 8002ed8:	3b08      	subs	r3, #8
 8002eda:	089b      	lsrs	r3, r3, #2
 8002edc:	3306      	adds	r3, #6
 8002ede:	009b      	lsls	r3, r3, #2
 8002ee0:	18d3      	adds	r3, r2, r3
 8002ee2:	3304      	adds	r3, #4
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	1dfa      	adds	r2, r7, #7
 8002ee8:	7812      	ldrb	r2, [r2, #0]
 8002eea:	0011      	movs	r1, r2
 8002eec:	2203      	movs	r2, #3
 8002eee:	400a      	ands	r2, r1
 8002ef0:	00d2      	lsls	r2, r2, #3
 8002ef2:	21ff      	movs	r1, #255	@ 0xff
 8002ef4:	4091      	lsls	r1, r2
 8002ef6:	000a      	movs	r2, r1
 8002ef8:	43d2      	mvns	r2, r2
 8002efa:	401a      	ands	r2, r3
 8002efc:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002efe:	683b      	ldr	r3, [r7, #0]
 8002f00:	019b      	lsls	r3, r3, #6
 8002f02:	22ff      	movs	r2, #255	@ 0xff
 8002f04:	401a      	ands	r2, r3
 8002f06:	1dfb      	adds	r3, r7, #7
 8002f08:	781b      	ldrb	r3, [r3, #0]
 8002f0a:	0018      	movs	r0, r3
 8002f0c:	2303      	movs	r3, #3
 8002f0e:	4003      	ands	r3, r0
 8002f10:	00db      	lsls	r3, r3, #3
 8002f12:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f14:	4809      	ldr	r0, [pc, #36]	@ (8002f3c <__NVIC_SetPriority+0xd8>)
 8002f16:	1dfb      	adds	r3, r7, #7
 8002f18:	781b      	ldrb	r3, [r3, #0]
 8002f1a:	001c      	movs	r4, r3
 8002f1c:	230f      	movs	r3, #15
 8002f1e:	4023      	ands	r3, r4
 8002f20:	3b08      	subs	r3, #8
 8002f22:	089b      	lsrs	r3, r3, #2
 8002f24:	430a      	orrs	r2, r1
 8002f26:	3306      	adds	r3, #6
 8002f28:	009b      	lsls	r3, r3, #2
 8002f2a:	18c3      	adds	r3, r0, r3
 8002f2c:	3304      	adds	r3, #4
 8002f2e:	601a      	str	r2, [r3, #0]
}
 8002f30:	46c0      	nop			@ (mov r8, r8)
 8002f32:	46bd      	mov	sp, r7
 8002f34:	b003      	add	sp, #12
 8002f36:	bd90      	pop	{r4, r7, pc}
 8002f38:	e000e100 	.word	0xe000e100
 8002f3c:	e000ed00 	.word	0xe000ed00

08002f40 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002f40:	b580      	push	{r7, lr}
 8002f42:	b082      	sub	sp, #8
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	1e5a      	subs	r2, r3, #1
 8002f4c:	2380      	movs	r3, #128	@ 0x80
 8002f4e:	045b      	lsls	r3, r3, #17
 8002f50:	429a      	cmp	r2, r3
 8002f52:	d301      	bcc.n	8002f58 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002f54:	2301      	movs	r3, #1
 8002f56:	e010      	b.n	8002f7a <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002f58:	4b0a      	ldr	r3, [pc, #40]	@ (8002f84 <SysTick_Config+0x44>)
 8002f5a:	687a      	ldr	r2, [r7, #4]
 8002f5c:	3a01      	subs	r2, #1
 8002f5e:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002f60:	2301      	movs	r3, #1
 8002f62:	425b      	negs	r3, r3
 8002f64:	2103      	movs	r1, #3
 8002f66:	0018      	movs	r0, r3
 8002f68:	f7ff ff7c 	bl	8002e64 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002f6c:	4b05      	ldr	r3, [pc, #20]	@ (8002f84 <SysTick_Config+0x44>)
 8002f6e:	2200      	movs	r2, #0
 8002f70:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002f72:	4b04      	ldr	r3, [pc, #16]	@ (8002f84 <SysTick_Config+0x44>)
 8002f74:	2207      	movs	r2, #7
 8002f76:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002f78:	2300      	movs	r3, #0
}
 8002f7a:	0018      	movs	r0, r3
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	b002      	add	sp, #8
 8002f80:	bd80      	pop	{r7, pc}
 8002f82:	46c0      	nop			@ (mov r8, r8)
 8002f84:	e000e010 	.word	0xe000e010

08002f88 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002f88:	b580      	push	{r7, lr}
 8002f8a:	b084      	sub	sp, #16
 8002f8c:	af00      	add	r7, sp, #0
 8002f8e:	60b9      	str	r1, [r7, #8]
 8002f90:	607a      	str	r2, [r7, #4]
 8002f92:	210f      	movs	r1, #15
 8002f94:	187b      	adds	r3, r7, r1
 8002f96:	1c02      	adds	r2, r0, #0
 8002f98:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8002f9a:	68ba      	ldr	r2, [r7, #8]
 8002f9c:	187b      	adds	r3, r7, r1
 8002f9e:	781b      	ldrb	r3, [r3, #0]
 8002fa0:	b25b      	sxtb	r3, r3
 8002fa2:	0011      	movs	r1, r2
 8002fa4:	0018      	movs	r0, r3
 8002fa6:	f7ff ff5d 	bl	8002e64 <__NVIC_SetPriority>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8002faa:	46c0      	nop			@ (mov r8, r8)
 8002fac:	46bd      	mov	sp, r7
 8002fae:	b004      	add	sp, #16
 8002fb0:	bd80      	pop	{r7, pc}

08002fb2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002fb2:	b580      	push	{r7, lr}
 8002fb4:	b082      	sub	sp, #8
 8002fb6:	af00      	add	r7, sp, #0
 8002fb8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	0018      	movs	r0, r3
 8002fbe:	f7ff ffbf 	bl	8002f40 <SysTick_Config>
 8002fc2:	0003      	movs	r3, r0
}
 8002fc4:	0018      	movs	r0, r3
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	b002      	add	sp, #8
 8002fca:	bd80      	pop	{r7, pc}

08002fcc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002fcc:	b580      	push	{r7, lr}
 8002fce:	b086      	sub	sp, #24
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	6078      	str	r0, [r7, #4]
 8002fd4:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8002fd6:	2300      	movs	r3, #0
 8002fd8:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8002fda:	e14f      	b.n	800327c <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002fdc:	683b      	ldr	r3, [r7, #0]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	2101      	movs	r1, #1
 8002fe2:	697a      	ldr	r2, [r7, #20]
 8002fe4:	4091      	lsls	r1, r2
 8002fe6:	000a      	movs	r2, r1
 8002fe8:	4013      	ands	r3, r2
 8002fea:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8002fec:	68fb      	ldr	r3, [r7, #12]
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d100      	bne.n	8002ff4 <HAL_GPIO_Init+0x28>
 8002ff2:	e140      	b.n	8003276 <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002ff4:	683b      	ldr	r3, [r7, #0]
 8002ff6:	685b      	ldr	r3, [r3, #4]
 8002ff8:	2203      	movs	r2, #3
 8002ffa:	4013      	ands	r3, r2
 8002ffc:	2b01      	cmp	r3, #1
 8002ffe:	d005      	beq.n	800300c <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003000:	683b      	ldr	r3, [r7, #0]
 8003002:	685b      	ldr	r3, [r3, #4]
 8003004:	2203      	movs	r2, #3
 8003006:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8003008:	2b02      	cmp	r3, #2
 800300a:	d130      	bne.n	800306e <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	689b      	ldr	r3, [r3, #8]
 8003010:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003012:	697b      	ldr	r3, [r7, #20]
 8003014:	005b      	lsls	r3, r3, #1
 8003016:	2203      	movs	r2, #3
 8003018:	409a      	lsls	r2, r3
 800301a:	0013      	movs	r3, r2
 800301c:	43da      	mvns	r2, r3
 800301e:	693b      	ldr	r3, [r7, #16]
 8003020:	4013      	ands	r3, r2
 8003022:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003024:	683b      	ldr	r3, [r7, #0]
 8003026:	68da      	ldr	r2, [r3, #12]
 8003028:	697b      	ldr	r3, [r7, #20]
 800302a:	005b      	lsls	r3, r3, #1
 800302c:	409a      	lsls	r2, r3
 800302e:	0013      	movs	r3, r2
 8003030:	693a      	ldr	r2, [r7, #16]
 8003032:	4313      	orrs	r3, r2
 8003034:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	693a      	ldr	r2, [r7, #16]
 800303a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	685b      	ldr	r3, [r3, #4]
 8003040:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003042:	2201      	movs	r2, #1
 8003044:	697b      	ldr	r3, [r7, #20]
 8003046:	409a      	lsls	r2, r3
 8003048:	0013      	movs	r3, r2
 800304a:	43da      	mvns	r2, r3
 800304c:	693b      	ldr	r3, [r7, #16]
 800304e:	4013      	ands	r3, r2
 8003050:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003052:	683b      	ldr	r3, [r7, #0]
 8003054:	685b      	ldr	r3, [r3, #4]
 8003056:	091b      	lsrs	r3, r3, #4
 8003058:	2201      	movs	r2, #1
 800305a:	401a      	ands	r2, r3
 800305c:	697b      	ldr	r3, [r7, #20]
 800305e:	409a      	lsls	r2, r3
 8003060:	0013      	movs	r3, r2
 8003062:	693a      	ldr	r2, [r7, #16]
 8003064:	4313      	orrs	r3, r2
 8003066:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	693a      	ldr	r2, [r7, #16]
 800306c:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800306e:	683b      	ldr	r3, [r7, #0]
 8003070:	685b      	ldr	r3, [r3, #4]
 8003072:	2203      	movs	r2, #3
 8003074:	4013      	ands	r3, r2
 8003076:	2b03      	cmp	r3, #3
 8003078:	d017      	beq.n	80030aa <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	68db      	ldr	r3, [r3, #12]
 800307e:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003080:	697b      	ldr	r3, [r7, #20]
 8003082:	005b      	lsls	r3, r3, #1
 8003084:	2203      	movs	r2, #3
 8003086:	409a      	lsls	r2, r3
 8003088:	0013      	movs	r3, r2
 800308a:	43da      	mvns	r2, r3
 800308c:	693b      	ldr	r3, [r7, #16]
 800308e:	4013      	ands	r3, r2
 8003090:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8003092:	683b      	ldr	r3, [r7, #0]
 8003094:	689a      	ldr	r2, [r3, #8]
 8003096:	697b      	ldr	r3, [r7, #20]
 8003098:	005b      	lsls	r3, r3, #1
 800309a:	409a      	lsls	r2, r3
 800309c:	0013      	movs	r3, r2
 800309e:	693a      	ldr	r2, [r7, #16]
 80030a0:	4313      	orrs	r3, r2
 80030a2:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	693a      	ldr	r2, [r7, #16]
 80030a8:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80030aa:	683b      	ldr	r3, [r7, #0]
 80030ac:	685b      	ldr	r3, [r3, #4]
 80030ae:	2203      	movs	r2, #3
 80030b0:	4013      	ands	r3, r2
 80030b2:	2b02      	cmp	r3, #2
 80030b4:	d123      	bne.n	80030fe <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 80030b6:	697b      	ldr	r3, [r7, #20]
 80030b8:	08da      	lsrs	r2, r3, #3
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	3208      	adds	r2, #8
 80030be:	0092      	lsls	r2, r2, #2
 80030c0:	58d3      	ldr	r3, [r2, r3]
 80030c2:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80030c4:	697b      	ldr	r3, [r7, #20]
 80030c6:	2207      	movs	r2, #7
 80030c8:	4013      	ands	r3, r2
 80030ca:	009b      	lsls	r3, r3, #2
 80030cc:	220f      	movs	r2, #15
 80030ce:	409a      	lsls	r2, r3
 80030d0:	0013      	movs	r3, r2
 80030d2:	43da      	mvns	r2, r3
 80030d4:	693b      	ldr	r3, [r7, #16]
 80030d6:	4013      	ands	r3, r2
 80030d8:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80030da:	683b      	ldr	r3, [r7, #0]
 80030dc:	691a      	ldr	r2, [r3, #16]
 80030de:	697b      	ldr	r3, [r7, #20]
 80030e0:	2107      	movs	r1, #7
 80030e2:	400b      	ands	r3, r1
 80030e4:	009b      	lsls	r3, r3, #2
 80030e6:	409a      	lsls	r2, r3
 80030e8:	0013      	movs	r3, r2
 80030ea:	693a      	ldr	r2, [r7, #16]
 80030ec:	4313      	orrs	r3, r2
 80030ee:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 80030f0:	697b      	ldr	r3, [r7, #20]
 80030f2:	08da      	lsrs	r2, r3, #3
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	3208      	adds	r2, #8
 80030f8:	0092      	lsls	r2, r2, #2
 80030fa:	6939      	ldr	r1, [r7, #16]
 80030fc:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8003104:	697b      	ldr	r3, [r7, #20]
 8003106:	005b      	lsls	r3, r3, #1
 8003108:	2203      	movs	r2, #3
 800310a:	409a      	lsls	r2, r3
 800310c:	0013      	movs	r3, r2
 800310e:	43da      	mvns	r2, r3
 8003110:	693b      	ldr	r3, [r7, #16]
 8003112:	4013      	ands	r3, r2
 8003114:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003116:	683b      	ldr	r3, [r7, #0]
 8003118:	685b      	ldr	r3, [r3, #4]
 800311a:	2203      	movs	r2, #3
 800311c:	401a      	ands	r2, r3
 800311e:	697b      	ldr	r3, [r7, #20]
 8003120:	005b      	lsls	r3, r3, #1
 8003122:	409a      	lsls	r2, r3
 8003124:	0013      	movs	r3, r2
 8003126:	693a      	ldr	r2, [r7, #16]
 8003128:	4313      	orrs	r3, r2
 800312a:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	693a      	ldr	r2, [r7, #16]
 8003130:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8003132:	683b      	ldr	r3, [r7, #0]
 8003134:	685a      	ldr	r2, [r3, #4]
 8003136:	23c0      	movs	r3, #192	@ 0xc0
 8003138:	029b      	lsls	r3, r3, #10
 800313a:	4013      	ands	r3, r2
 800313c:	d100      	bne.n	8003140 <HAL_GPIO_Init+0x174>
 800313e:	e09a      	b.n	8003276 <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003140:	4b54      	ldr	r3, [pc, #336]	@ (8003294 <HAL_GPIO_Init+0x2c8>)
 8003142:	699a      	ldr	r2, [r3, #24]
 8003144:	4b53      	ldr	r3, [pc, #332]	@ (8003294 <HAL_GPIO_Init+0x2c8>)
 8003146:	2101      	movs	r1, #1
 8003148:	430a      	orrs	r2, r1
 800314a:	619a      	str	r2, [r3, #24]
 800314c:	4b51      	ldr	r3, [pc, #324]	@ (8003294 <HAL_GPIO_Init+0x2c8>)
 800314e:	699b      	ldr	r3, [r3, #24]
 8003150:	2201      	movs	r2, #1
 8003152:	4013      	ands	r3, r2
 8003154:	60bb      	str	r3, [r7, #8]
 8003156:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8003158:	4a4f      	ldr	r2, [pc, #316]	@ (8003298 <HAL_GPIO_Init+0x2cc>)
 800315a:	697b      	ldr	r3, [r7, #20]
 800315c:	089b      	lsrs	r3, r3, #2
 800315e:	3302      	adds	r3, #2
 8003160:	009b      	lsls	r3, r3, #2
 8003162:	589b      	ldr	r3, [r3, r2]
 8003164:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003166:	697b      	ldr	r3, [r7, #20]
 8003168:	2203      	movs	r2, #3
 800316a:	4013      	ands	r3, r2
 800316c:	009b      	lsls	r3, r3, #2
 800316e:	220f      	movs	r2, #15
 8003170:	409a      	lsls	r2, r3
 8003172:	0013      	movs	r3, r2
 8003174:	43da      	mvns	r2, r3
 8003176:	693b      	ldr	r3, [r7, #16]
 8003178:	4013      	ands	r3, r2
 800317a:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 800317c:	687a      	ldr	r2, [r7, #4]
 800317e:	2390      	movs	r3, #144	@ 0x90
 8003180:	05db      	lsls	r3, r3, #23
 8003182:	429a      	cmp	r2, r3
 8003184:	d013      	beq.n	80031ae <HAL_GPIO_Init+0x1e2>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	4a44      	ldr	r2, [pc, #272]	@ (800329c <HAL_GPIO_Init+0x2d0>)
 800318a:	4293      	cmp	r3, r2
 800318c:	d00d      	beq.n	80031aa <HAL_GPIO_Init+0x1de>
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	4a43      	ldr	r2, [pc, #268]	@ (80032a0 <HAL_GPIO_Init+0x2d4>)
 8003192:	4293      	cmp	r3, r2
 8003194:	d007      	beq.n	80031a6 <HAL_GPIO_Init+0x1da>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	4a42      	ldr	r2, [pc, #264]	@ (80032a4 <HAL_GPIO_Init+0x2d8>)
 800319a:	4293      	cmp	r3, r2
 800319c:	d101      	bne.n	80031a2 <HAL_GPIO_Init+0x1d6>
 800319e:	2303      	movs	r3, #3
 80031a0:	e006      	b.n	80031b0 <HAL_GPIO_Init+0x1e4>
 80031a2:	2305      	movs	r3, #5
 80031a4:	e004      	b.n	80031b0 <HAL_GPIO_Init+0x1e4>
 80031a6:	2302      	movs	r3, #2
 80031a8:	e002      	b.n	80031b0 <HAL_GPIO_Init+0x1e4>
 80031aa:	2301      	movs	r3, #1
 80031ac:	e000      	b.n	80031b0 <HAL_GPIO_Init+0x1e4>
 80031ae:	2300      	movs	r3, #0
 80031b0:	697a      	ldr	r2, [r7, #20]
 80031b2:	2103      	movs	r1, #3
 80031b4:	400a      	ands	r2, r1
 80031b6:	0092      	lsls	r2, r2, #2
 80031b8:	4093      	lsls	r3, r2
 80031ba:	693a      	ldr	r2, [r7, #16]
 80031bc:	4313      	orrs	r3, r2
 80031be:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 80031c0:	4935      	ldr	r1, [pc, #212]	@ (8003298 <HAL_GPIO_Init+0x2cc>)
 80031c2:	697b      	ldr	r3, [r7, #20]
 80031c4:	089b      	lsrs	r3, r3, #2
 80031c6:	3302      	adds	r3, #2
 80031c8:	009b      	lsls	r3, r3, #2
 80031ca:	693a      	ldr	r2, [r7, #16]
 80031cc:	505a      	str	r2, [r3, r1]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80031ce:	4b36      	ldr	r3, [pc, #216]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 80031d0:	689b      	ldr	r3, [r3, #8]
 80031d2:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80031d4:	68fb      	ldr	r3, [r7, #12]
 80031d6:	43da      	mvns	r2, r3
 80031d8:	693b      	ldr	r3, [r7, #16]
 80031da:	4013      	ands	r3, r2
 80031dc:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80031de:	683b      	ldr	r3, [r7, #0]
 80031e0:	685a      	ldr	r2, [r3, #4]
 80031e2:	2380      	movs	r3, #128	@ 0x80
 80031e4:	035b      	lsls	r3, r3, #13
 80031e6:	4013      	ands	r3, r2
 80031e8:	d003      	beq.n	80031f2 <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 80031ea:	693a      	ldr	r2, [r7, #16]
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	4313      	orrs	r3, r2
 80031f0:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80031f2:	4b2d      	ldr	r3, [pc, #180]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 80031f4:	693a      	ldr	r2, [r7, #16]
 80031f6:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80031f8:	4b2b      	ldr	r3, [pc, #172]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 80031fa:	68db      	ldr	r3, [r3, #12]
 80031fc:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	43da      	mvns	r2, r3
 8003202:	693b      	ldr	r3, [r7, #16]
 8003204:	4013      	ands	r3, r2
 8003206:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8003208:	683b      	ldr	r3, [r7, #0]
 800320a:	685a      	ldr	r2, [r3, #4]
 800320c:	2380      	movs	r3, #128	@ 0x80
 800320e:	039b      	lsls	r3, r3, #14
 8003210:	4013      	ands	r3, r2
 8003212:	d003      	beq.n	800321c <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 8003214:	693a      	ldr	r2, [r7, #16]
 8003216:	68fb      	ldr	r3, [r7, #12]
 8003218:	4313      	orrs	r3, r2
 800321a:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 800321c:	4b22      	ldr	r3, [pc, #136]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 800321e:	693a      	ldr	r2, [r7, #16]
 8003220:	60da      	str	r2, [r3, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR;
 8003222:	4b21      	ldr	r3, [pc, #132]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 8003224:	685b      	ldr	r3, [r3, #4]
 8003226:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	43da      	mvns	r2, r3
 800322c:	693b      	ldr	r3, [r7, #16]
 800322e:	4013      	ands	r3, r2
 8003230:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8003232:	683b      	ldr	r3, [r7, #0]
 8003234:	685a      	ldr	r2, [r3, #4]
 8003236:	2380      	movs	r3, #128	@ 0x80
 8003238:	029b      	lsls	r3, r3, #10
 800323a:	4013      	ands	r3, r2
 800323c:	d003      	beq.n	8003246 <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 800323e:	693a      	ldr	r2, [r7, #16]
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	4313      	orrs	r3, r2
 8003244:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8003246:	4b18      	ldr	r3, [pc, #96]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 8003248:	693a      	ldr	r2, [r7, #16]
 800324a:	605a      	str	r2, [r3, #4]

        temp = EXTI->IMR;
 800324c:	4b16      	ldr	r3, [pc, #88]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003252:	68fb      	ldr	r3, [r7, #12]
 8003254:	43da      	mvns	r2, r3
 8003256:	693b      	ldr	r3, [r7, #16]
 8003258:	4013      	ands	r3, r2
 800325a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800325c:	683b      	ldr	r3, [r7, #0]
 800325e:	685a      	ldr	r2, [r3, #4]
 8003260:	2380      	movs	r3, #128	@ 0x80
 8003262:	025b      	lsls	r3, r3, #9
 8003264:	4013      	ands	r3, r2
 8003266:	d003      	beq.n	8003270 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8003268:	693a      	ldr	r2, [r7, #16]
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	4313      	orrs	r3, r2
 800326e:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8003270:	4b0d      	ldr	r3, [pc, #52]	@ (80032a8 <HAL_GPIO_Init+0x2dc>)
 8003272:	693a      	ldr	r2, [r7, #16]
 8003274:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8003276:	697b      	ldr	r3, [r7, #20]
 8003278:	3301      	adds	r3, #1
 800327a:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800327c:	683b      	ldr	r3, [r7, #0]
 800327e:	681a      	ldr	r2, [r3, #0]
 8003280:	697b      	ldr	r3, [r7, #20]
 8003282:	40da      	lsrs	r2, r3
 8003284:	1e13      	subs	r3, r2, #0
 8003286:	d000      	beq.n	800328a <HAL_GPIO_Init+0x2be>
 8003288:	e6a8      	b.n	8002fdc <HAL_GPIO_Init+0x10>
  } 
}
 800328a:	46c0      	nop			@ (mov r8, r8)
 800328c:	46c0      	nop			@ (mov r8, r8)
 800328e:	46bd      	mov	sp, r7
 8003290:	b006      	add	sp, #24
 8003292:	bd80      	pop	{r7, pc}
 8003294:	40021000 	.word	0x40021000
 8003298:	40010000 	.word	0x40010000
 800329c:	48000400 	.word	0x48000400
 80032a0:	48000800 	.word	0x48000800
 80032a4:	48000c00 	.word	0x48000c00
 80032a8:	40010400 	.word	0x40010400

080032ac <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80032ac:	b580      	push	{r7, lr}
 80032ae:	b082      	sub	sp, #8
 80032b0:	af00      	add	r7, sp, #0
 80032b2:	6078      	str	r0, [r7, #4]
 80032b4:	0008      	movs	r0, r1
 80032b6:	0011      	movs	r1, r2
 80032b8:	1cbb      	adds	r3, r7, #2
 80032ba:	1c02      	adds	r2, r0, #0
 80032bc:	801a      	strh	r2, [r3, #0]
 80032be:	1c7b      	adds	r3, r7, #1
 80032c0:	1c0a      	adds	r2, r1, #0
 80032c2:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80032c4:	1c7b      	adds	r3, r7, #1
 80032c6:	781b      	ldrb	r3, [r3, #0]
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	d004      	beq.n	80032d6 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80032cc:	1cbb      	adds	r3, r7, #2
 80032ce:	881a      	ldrh	r2, [r3, #0]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 80032d4:	e003      	b.n	80032de <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 80032d6:	1cbb      	adds	r3, r7, #2
 80032d8:	881a      	ldrh	r2, [r3, #0]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	629a      	str	r2, [r3, #40]	@ 0x28
}
 80032de:	46c0      	nop			@ (mov r8, r8)
 80032e0:	46bd      	mov	sp, r7
 80032e2:	b002      	add	sp, #8
 80032e4:	bd80      	pop	{r7, pc}
	...

080032e8 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80032e8:	b580      	push	{r7, lr}
 80032ea:	b088      	sub	sp, #32
 80032ec:	af00      	add	r7, sp, #0
 80032ee:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d101      	bne.n	80032fa <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80032f6:	2301      	movs	r3, #1
 80032f8:	e301      	b.n	80038fe <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	2201      	movs	r2, #1
 8003300:	4013      	ands	r3, r2
 8003302:	d100      	bne.n	8003306 <HAL_RCC_OscConfig+0x1e>
 8003304:	e08d      	b.n	8003422 <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8003306:	4bc3      	ldr	r3, [pc, #780]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003308:	685b      	ldr	r3, [r3, #4]
 800330a:	220c      	movs	r2, #12
 800330c:	4013      	ands	r3, r2
 800330e:	2b04      	cmp	r3, #4
 8003310:	d00e      	beq.n	8003330 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8003312:	4bc0      	ldr	r3, [pc, #768]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003314:	685b      	ldr	r3, [r3, #4]
 8003316:	220c      	movs	r2, #12
 8003318:	4013      	ands	r3, r2
 800331a:	2b08      	cmp	r3, #8
 800331c:	d116      	bne.n	800334c <HAL_RCC_OscConfig+0x64>
 800331e:	4bbd      	ldr	r3, [pc, #756]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003320:	685a      	ldr	r2, [r3, #4]
 8003322:	2380      	movs	r3, #128	@ 0x80
 8003324:	025b      	lsls	r3, r3, #9
 8003326:	401a      	ands	r2, r3
 8003328:	2380      	movs	r3, #128	@ 0x80
 800332a:	025b      	lsls	r3, r3, #9
 800332c:	429a      	cmp	r2, r3
 800332e:	d10d      	bne.n	800334c <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003330:	4bb8      	ldr	r3, [pc, #736]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003332:	681a      	ldr	r2, [r3, #0]
 8003334:	2380      	movs	r3, #128	@ 0x80
 8003336:	029b      	lsls	r3, r3, #10
 8003338:	4013      	ands	r3, r2
 800333a:	d100      	bne.n	800333e <HAL_RCC_OscConfig+0x56>
 800333c:	e070      	b.n	8003420 <HAL_RCC_OscConfig+0x138>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	685b      	ldr	r3, [r3, #4]
 8003342:	2b00      	cmp	r3, #0
 8003344:	d000      	beq.n	8003348 <HAL_RCC_OscConfig+0x60>
 8003346:	e06b      	b.n	8003420 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8003348:	2301      	movs	r3, #1
 800334a:	e2d8      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	685b      	ldr	r3, [r3, #4]
 8003350:	2b01      	cmp	r3, #1
 8003352:	d107      	bne.n	8003364 <HAL_RCC_OscConfig+0x7c>
 8003354:	4baf      	ldr	r3, [pc, #700]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003356:	681a      	ldr	r2, [r3, #0]
 8003358:	4bae      	ldr	r3, [pc, #696]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800335a:	2180      	movs	r1, #128	@ 0x80
 800335c:	0249      	lsls	r1, r1, #9
 800335e:	430a      	orrs	r2, r1
 8003360:	601a      	str	r2, [r3, #0]
 8003362:	e02f      	b.n	80033c4 <HAL_RCC_OscConfig+0xdc>
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	685b      	ldr	r3, [r3, #4]
 8003368:	2b00      	cmp	r3, #0
 800336a:	d10c      	bne.n	8003386 <HAL_RCC_OscConfig+0x9e>
 800336c:	4ba9      	ldr	r3, [pc, #676]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800336e:	681a      	ldr	r2, [r3, #0]
 8003370:	4ba8      	ldr	r3, [pc, #672]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003372:	49a9      	ldr	r1, [pc, #676]	@ (8003618 <HAL_RCC_OscConfig+0x330>)
 8003374:	400a      	ands	r2, r1
 8003376:	601a      	str	r2, [r3, #0]
 8003378:	4ba6      	ldr	r3, [pc, #664]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800337a:	681a      	ldr	r2, [r3, #0]
 800337c:	4ba5      	ldr	r3, [pc, #660]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800337e:	49a7      	ldr	r1, [pc, #668]	@ (800361c <HAL_RCC_OscConfig+0x334>)
 8003380:	400a      	ands	r2, r1
 8003382:	601a      	str	r2, [r3, #0]
 8003384:	e01e      	b.n	80033c4 <HAL_RCC_OscConfig+0xdc>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	685b      	ldr	r3, [r3, #4]
 800338a:	2b05      	cmp	r3, #5
 800338c:	d10e      	bne.n	80033ac <HAL_RCC_OscConfig+0xc4>
 800338e:	4ba1      	ldr	r3, [pc, #644]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003390:	681a      	ldr	r2, [r3, #0]
 8003392:	4ba0      	ldr	r3, [pc, #640]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003394:	2180      	movs	r1, #128	@ 0x80
 8003396:	02c9      	lsls	r1, r1, #11
 8003398:	430a      	orrs	r2, r1
 800339a:	601a      	str	r2, [r3, #0]
 800339c:	4b9d      	ldr	r3, [pc, #628]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800339e:	681a      	ldr	r2, [r3, #0]
 80033a0:	4b9c      	ldr	r3, [pc, #624]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80033a2:	2180      	movs	r1, #128	@ 0x80
 80033a4:	0249      	lsls	r1, r1, #9
 80033a6:	430a      	orrs	r2, r1
 80033a8:	601a      	str	r2, [r3, #0]
 80033aa:	e00b      	b.n	80033c4 <HAL_RCC_OscConfig+0xdc>
 80033ac:	4b99      	ldr	r3, [pc, #612]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80033ae:	681a      	ldr	r2, [r3, #0]
 80033b0:	4b98      	ldr	r3, [pc, #608]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80033b2:	4999      	ldr	r1, [pc, #612]	@ (8003618 <HAL_RCC_OscConfig+0x330>)
 80033b4:	400a      	ands	r2, r1
 80033b6:	601a      	str	r2, [r3, #0]
 80033b8:	4b96      	ldr	r3, [pc, #600]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80033ba:	681a      	ldr	r2, [r3, #0]
 80033bc:	4b95      	ldr	r3, [pc, #596]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80033be:	4997      	ldr	r1, [pc, #604]	@ (800361c <HAL_RCC_OscConfig+0x334>)
 80033c0:	400a      	ands	r2, r1
 80033c2:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	685b      	ldr	r3, [r3, #4]
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	d014      	beq.n	80033f6 <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80033cc:	f7ff fd1c 	bl	8002e08 <HAL_GetTick>
 80033d0:	0003      	movs	r3, r0
 80033d2:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80033d4:	e008      	b.n	80033e8 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80033d6:	f7ff fd17 	bl	8002e08 <HAL_GetTick>
 80033da:	0002      	movs	r2, r0
 80033dc:	69bb      	ldr	r3, [r7, #24]
 80033de:	1ad3      	subs	r3, r2, r3
 80033e0:	2b64      	cmp	r3, #100	@ 0x64
 80033e2:	d901      	bls.n	80033e8 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 80033e4:	2303      	movs	r3, #3
 80033e6:	e28a      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80033e8:	4b8a      	ldr	r3, [pc, #552]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80033ea:	681a      	ldr	r2, [r3, #0]
 80033ec:	2380      	movs	r3, #128	@ 0x80
 80033ee:	029b      	lsls	r3, r3, #10
 80033f0:	4013      	ands	r3, r2
 80033f2:	d0f0      	beq.n	80033d6 <HAL_RCC_OscConfig+0xee>
 80033f4:	e015      	b.n	8003422 <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80033f6:	f7ff fd07 	bl	8002e08 <HAL_GetTick>
 80033fa:	0003      	movs	r3, r0
 80033fc:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80033fe:	e008      	b.n	8003412 <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003400:	f7ff fd02 	bl	8002e08 <HAL_GetTick>
 8003404:	0002      	movs	r2, r0
 8003406:	69bb      	ldr	r3, [r7, #24]
 8003408:	1ad3      	subs	r3, r2, r3
 800340a:	2b64      	cmp	r3, #100	@ 0x64
 800340c:	d901      	bls.n	8003412 <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 800340e:	2303      	movs	r3, #3
 8003410:	e275      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003412:	4b80      	ldr	r3, [pc, #512]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003414:	681a      	ldr	r2, [r3, #0]
 8003416:	2380      	movs	r3, #128	@ 0x80
 8003418:	029b      	lsls	r3, r3, #10
 800341a:	4013      	ands	r3, r2
 800341c:	d1f0      	bne.n	8003400 <HAL_RCC_OscConfig+0x118>
 800341e:	e000      	b.n	8003422 <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003420:	46c0      	nop			@ (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	2202      	movs	r2, #2
 8003428:	4013      	ands	r3, r2
 800342a:	d100      	bne.n	800342e <HAL_RCC_OscConfig+0x146>
 800342c:	e069      	b.n	8003502 <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 800342e:	4b79      	ldr	r3, [pc, #484]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003430:	685b      	ldr	r3, [r3, #4]
 8003432:	220c      	movs	r2, #12
 8003434:	4013      	ands	r3, r2
 8003436:	d00b      	beq.n	8003450 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8003438:	4b76      	ldr	r3, [pc, #472]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800343a:	685b      	ldr	r3, [r3, #4]
 800343c:	220c      	movs	r2, #12
 800343e:	4013      	ands	r3, r2
 8003440:	2b08      	cmp	r3, #8
 8003442:	d11c      	bne.n	800347e <HAL_RCC_OscConfig+0x196>
 8003444:	4b73      	ldr	r3, [pc, #460]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003446:	685a      	ldr	r2, [r3, #4]
 8003448:	2380      	movs	r3, #128	@ 0x80
 800344a:	025b      	lsls	r3, r3, #9
 800344c:	4013      	ands	r3, r2
 800344e:	d116      	bne.n	800347e <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003450:	4b70      	ldr	r3, [pc, #448]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	2202      	movs	r2, #2
 8003456:	4013      	ands	r3, r2
 8003458:	d005      	beq.n	8003466 <HAL_RCC_OscConfig+0x17e>
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	68db      	ldr	r3, [r3, #12]
 800345e:	2b01      	cmp	r3, #1
 8003460:	d001      	beq.n	8003466 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 8003462:	2301      	movs	r3, #1
 8003464:	e24b      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003466:	4b6b      	ldr	r3, [pc, #428]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	22f8      	movs	r2, #248	@ 0xf8
 800346c:	4393      	bics	r3, r2
 800346e:	0019      	movs	r1, r3
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	691b      	ldr	r3, [r3, #16]
 8003474:	00da      	lsls	r2, r3, #3
 8003476:	4b67      	ldr	r3, [pc, #412]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003478:	430a      	orrs	r2, r1
 800347a:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800347c:	e041      	b.n	8003502 <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	68db      	ldr	r3, [r3, #12]
 8003482:	2b00      	cmp	r3, #0
 8003484:	d024      	beq.n	80034d0 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8003486:	4b63      	ldr	r3, [pc, #396]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003488:	681a      	ldr	r2, [r3, #0]
 800348a:	4b62      	ldr	r3, [pc, #392]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800348c:	2101      	movs	r1, #1
 800348e:	430a      	orrs	r2, r1
 8003490:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003492:	f7ff fcb9 	bl	8002e08 <HAL_GetTick>
 8003496:	0003      	movs	r3, r0
 8003498:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800349a:	e008      	b.n	80034ae <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800349c:	f7ff fcb4 	bl	8002e08 <HAL_GetTick>
 80034a0:	0002      	movs	r2, r0
 80034a2:	69bb      	ldr	r3, [r7, #24]
 80034a4:	1ad3      	subs	r3, r2, r3
 80034a6:	2b02      	cmp	r3, #2
 80034a8:	d901      	bls.n	80034ae <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 80034aa:	2303      	movs	r3, #3
 80034ac:	e227      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80034ae:	4b59      	ldr	r3, [pc, #356]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	2202      	movs	r2, #2
 80034b4:	4013      	ands	r3, r2
 80034b6:	d0f1      	beq.n	800349c <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80034b8:	4b56      	ldr	r3, [pc, #344]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	22f8      	movs	r2, #248	@ 0xf8
 80034be:	4393      	bics	r3, r2
 80034c0:	0019      	movs	r1, r3
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	691b      	ldr	r3, [r3, #16]
 80034c6:	00da      	lsls	r2, r3, #3
 80034c8:	4b52      	ldr	r3, [pc, #328]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80034ca:	430a      	orrs	r2, r1
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	e018      	b.n	8003502 <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80034d0:	4b50      	ldr	r3, [pc, #320]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80034d2:	681a      	ldr	r2, [r3, #0]
 80034d4:	4b4f      	ldr	r3, [pc, #316]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80034d6:	2101      	movs	r1, #1
 80034d8:	438a      	bics	r2, r1
 80034da:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80034dc:	f7ff fc94 	bl	8002e08 <HAL_GetTick>
 80034e0:	0003      	movs	r3, r0
 80034e2:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80034e4:	e008      	b.n	80034f8 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80034e6:	f7ff fc8f 	bl	8002e08 <HAL_GetTick>
 80034ea:	0002      	movs	r2, r0
 80034ec:	69bb      	ldr	r3, [r7, #24]
 80034ee:	1ad3      	subs	r3, r2, r3
 80034f0:	2b02      	cmp	r3, #2
 80034f2:	d901      	bls.n	80034f8 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 80034f4:	2303      	movs	r3, #3
 80034f6:	e202      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80034f8:	4b46      	ldr	r3, [pc, #280]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	2202      	movs	r2, #2
 80034fe:	4013      	ands	r3, r2
 8003500:	d1f1      	bne.n	80034e6 <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	2208      	movs	r2, #8
 8003508:	4013      	ands	r3, r2
 800350a:	d036      	beq.n	800357a <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	69db      	ldr	r3, [r3, #28]
 8003510:	2b00      	cmp	r3, #0
 8003512:	d019      	beq.n	8003548 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003514:	4b3f      	ldr	r3, [pc, #252]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003516:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003518:	4b3e      	ldr	r3, [pc, #248]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800351a:	2101      	movs	r1, #1
 800351c:	430a      	orrs	r2, r1
 800351e:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003520:	f7ff fc72 	bl	8002e08 <HAL_GetTick>
 8003524:	0003      	movs	r3, r0
 8003526:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003528:	e008      	b.n	800353c <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800352a:	f7ff fc6d 	bl	8002e08 <HAL_GetTick>
 800352e:	0002      	movs	r2, r0
 8003530:	69bb      	ldr	r3, [r7, #24]
 8003532:	1ad3      	subs	r3, r2, r3
 8003534:	2b02      	cmp	r3, #2
 8003536:	d901      	bls.n	800353c <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8003538:	2303      	movs	r3, #3
 800353a:	e1e0      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800353c:	4b35      	ldr	r3, [pc, #212]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800353e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003540:	2202      	movs	r2, #2
 8003542:	4013      	ands	r3, r2
 8003544:	d0f1      	beq.n	800352a <HAL_RCC_OscConfig+0x242>
 8003546:	e018      	b.n	800357a <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003548:	4b32      	ldr	r3, [pc, #200]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800354a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800354c:	4b31      	ldr	r3, [pc, #196]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800354e:	2101      	movs	r1, #1
 8003550:	438a      	bics	r2, r1
 8003552:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003554:	f7ff fc58 	bl	8002e08 <HAL_GetTick>
 8003558:	0003      	movs	r3, r0
 800355a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800355c:	e008      	b.n	8003570 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800355e:	f7ff fc53 	bl	8002e08 <HAL_GetTick>
 8003562:	0002      	movs	r2, r0
 8003564:	69bb      	ldr	r3, [r7, #24]
 8003566:	1ad3      	subs	r3, r2, r3
 8003568:	2b02      	cmp	r3, #2
 800356a:	d901      	bls.n	8003570 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 800356c:	2303      	movs	r3, #3
 800356e:	e1c6      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003570:	4b28      	ldr	r3, [pc, #160]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003572:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003574:	2202      	movs	r2, #2
 8003576:	4013      	ands	r3, r2
 8003578:	d1f1      	bne.n	800355e <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	2204      	movs	r2, #4
 8003580:	4013      	ands	r3, r2
 8003582:	d100      	bne.n	8003586 <HAL_RCC_OscConfig+0x29e>
 8003584:	e0b4      	b.n	80036f0 <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003586:	201f      	movs	r0, #31
 8003588:	183b      	adds	r3, r7, r0
 800358a:	2200      	movs	r2, #0
 800358c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800358e:	4b21      	ldr	r3, [pc, #132]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003590:	69da      	ldr	r2, [r3, #28]
 8003592:	2380      	movs	r3, #128	@ 0x80
 8003594:	055b      	lsls	r3, r3, #21
 8003596:	4013      	ands	r3, r2
 8003598:	d110      	bne.n	80035bc <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800359a:	4b1e      	ldr	r3, [pc, #120]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800359c:	69da      	ldr	r2, [r3, #28]
 800359e:	4b1d      	ldr	r3, [pc, #116]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80035a0:	2180      	movs	r1, #128	@ 0x80
 80035a2:	0549      	lsls	r1, r1, #21
 80035a4:	430a      	orrs	r2, r1
 80035a6:	61da      	str	r2, [r3, #28]
 80035a8:	4b1a      	ldr	r3, [pc, #104]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 80035aa:	69da      	ldr	r2, [r3, #28]
 80035ac:	2380      	movs	r3, #128	@ 0x80
 80035ae:	055b      	lsls	r3, r3, #21
 80035b0:	4013      	ands	r3, r2
 80035b2:	60fb      	str	r3, [r7, #12]
 80035b4:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 80035b6:	183b      	adds	r3, r7, r0
 80035b8:	2201      	movs	r2, #1
 80035ba:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80035bc:	4b18      	ldr	r3, [pc, #96]	@ (8003620 <HAL_RCC_OscConfig+0x338>)
 80035be:	681a      	ldr	r2, [r3, #0]
 80035c0:	2380      	movs	r3, #128	@ 0x80
 80035c2:	005b      	lsls	r3, r3, #1
 80035c4:	4013      	ands	r3, r2
 80035c6:	d11a      	bne.n	80035fe <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80035c8:	4b15      	ldr	r3, [pc, #84]	@ (8003620 <HAL_RCC_OscConfig+0x338>)
 80035ca:	681a      	ldr	r2, [r3, #0]
 80035cc:	4b14      	ldr	r3, [pc, #80]	@ (8003620 <HAL_RCC_OscConfig+0x338>)
 80035ce:	2180      	movs	r1, #128	@ 0x80
 80035d0:	0049      	lsls	r1, r1, #1
 80035d2:	430a      	orrs	r2, r1
 80035d4:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80035d6:	f7ff fc17 	bl	8002e08 <HAL_GetTick>
 80035da:	0003      	movs	r3, r0
 80035dc:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80035de:	e008      	b.n	80035f2 <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80035e0:	f7ff fc12 	bl	8002e08 <HAL_GetTick>
 80035e4:	0002      	movs	r2, r0
 80035e6:	69bb      	ldr	r3, [r7, #24]
 80035e8:	1ad3      	subs	r3, r2, r3
 80035ea:	2b64      	cmp	r3, #100	@ 0x64
 80035ec:	d901      	bls.n	80035f2 <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 80035ee:	2303      	movs	r3, #3
 80035f0:	e185      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80035f2:	4b0b      	ldr	r3, [pc, #44]	@ (8003620 <HAL_RCC_OscConfig+0x338>)
 80035f4:	681a      	ldr	r2, [r3, #0]
 80035f6:	2380      	movs	r3, #128	@ 0x80
 80035f8:	005b      	lsls	r3, r3, #1
 80035fa:	4013      	ands	r3, r2
 80035fc:	d0f0      	beq.n	80035e0 <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	689b      	ldr	r3, [r3, #8]
 8003602:	2b01      	cmp	r3, #1
 8003604:	d10e      	bne.n	8003624 <HAL_RCC_OscConfig+0x33c>
 8003606:	4b03      	ldr	r3, [pc, #12]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 8003608:	6a1a      	ldr	r2, [r3, #32]
 800360a:	4b02      	ldr	r3, [pc, #8]	@ (8003614 <HAL_RCC_OscConfig+0x32c>)
 800360c:	2101      	movs	r1, #1
 800360e:	430a      	orrs	r2, r1
 8003610:	621a      	str	r2, [r3, #32]
 8003612:	e035      	b.n	8003680 <HAL_RCC_OscConfig+0x398>
 8003614:	40021000 	.word	0x40021000
 8003618:	fffeffff 	.word	0xfffeffff
 800361c:	fffbffff 	.word	0xfffbffff
 8003620:	40007000 	.word	0x40007000
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	689b      	ldr	r3, [r3, #8]
 8003628:	2b00      	cmp	r3, #0
 800362a:	d10c      	bne.n	8003646 <HAL_RCC_OscConfig+0x35e>
 800362c:	4bb6      	ldr	r3, [pc, #728]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800362e:	6a1a      	ldr	r2, [r3, #32]
 8003630:	4bb5      	ldr	r3, [pc, #724]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003632:	2101      	movs	r1, #1
 8003634:	438a      	bics	r2, r1
 8003636:	621a      	str	r2, [r3, #32]
 8003638:	4bb3      	ldr	r3, [pc, #716]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800363a:	6a1a      	ldr	r2, [r3, #32]
 800363c:	4bb2      	ldr	r3, [pc, #712]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800363e:	2104      	movs	r1, #4
 8003640:	438a      	bics	r2, r1
 8003642:	621a      	str	r2, [r3, #32]
 8003644:	e01c      	b.n	8003680 <HAL_RCC_OscConfig+0x398>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	689b      	ldr	r3, [r3, #8]
 800364a:	2b05      	cmp	r3, #5
 800364c:	d10c      	bne.n	8003668 <HAL_RCC_OscConfig+0x380>
 800364e:	4bae      	ldr	r3, [pc, #696]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003650:	6a1a      	ldr	r2, [r3, #32]
 8003652:	4bad      	ldr	r3, [pc, #692]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003654:	2104      	movs	r1, #4
 8003656:	430a      	orrs	r2, r1
 8003658:	621a      	str	r2, [r3, #32]
 800365a:	4bab      	ldr	r3, [pc, #684]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800365c:	6a1a      	ldr	r2, [r3, #32]
 800365e:	4baa      	ldr	r3, [pc, #680]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003660:	2101      	movs	r1, #1
 8003662:	430a      	orrs	r2, r1
 8003664:	621a      	str	r2, [r3, #32]
 8003666:	e00b      	b.n	8003680 <HAL_RCC_OscConfig+0x398>
 8003668:	4ba7      	ldr	r3, [pc, #668]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800366a:	6a1a      	ldr	r2, [r3, #32]
 800366c:	4ba6      	ldr	r3, [pc, #664]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800366e:	2101      	movs	r1, #1
 8003670:	438a      	bics	r2, r1
 8003672:	621a      	str	r2, [r3, #32]
 8003674:	4ba4      	ldr	r3, [pc, #656]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003676:	6a1a      	ldr	r2, [r3, #32]
 8003678:	4ba3      	ldr	r3, [pc, #652]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800367a:	2104      	movs	r1, #4
 800367c:	438a      	bics	r2, r1
 800367e:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	689b      	ldr	r3, [r3, #8]
 8003684:	2b00      	cmp	r3, #0
 8003686:	d014      	beq.n	80036b2 <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003688:	f7ff fbbe 	bl	8002e08 <HAL_GetTick>
 800368c:	0003      	movs	r3, r0
 800368e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003690:	e009      	b.n	80036a6 <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003692:	f7ff fbb9 	bl	8002e08 <HAL_GetTick>
 8003696:	0002      	movs	r2, r0
 8003698:	69bb      	ldr	r3, [r7, #24]
 800369a:	1ad3      	subs	r3, r2, r3
 800369c:	4a9b      	ldr	r2, [pc, #620]	@ (800390c <HAL_RCC_OscConfig+0x624>)
 800369e:	4293      	cmp	r3, r2
 80036a0:	d901      	bls.n	80036a6 <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 80036a2:	2303      	movs	r3, #3
 80036a4:	e12b      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80036a6:	4b98      	ldr	r3, [pc, #608]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80036a8:	6a1b      	ldr	r3, [r3, #32]
 80036aa:	2202      	movs	r2, #2
 80036ac:	4013      	ands	r3, r2
 80036ae:	d0f0      	beq.n	8003692 <HAL_RCC_OscConfig+0x3aa>
 80036b0:	e013      	b.n	80036da <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80036b2:	f7ff fba9 	bl	8002e08 <HAL_GetTick>
 80036b6:	0003      	movs	r3, r0
 80036b8:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80036ba:	e009      	b.n	80036d0 <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80036bc:	f7ff fba4 	bl	8002e08 <HAL_GetTick>
 80036c0:	0002      	movs	r2, r0
 80036c2:	69bb      	ldr	r3, [r7, #24]
 80036c4:	1ad3      	subs	r3, r2, r3
 80036c6:	4a91      	ldr	r2, [pc, #580]	@ (800390c <HAL_RCC_OscConfig+0x624>)
 80036c8:	4293      	cmp	r3, r2
 80036ca:	d901      	bls.n	80036d0 <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 80036cc:	2303      	movs	r3, #3
 80036ce:	e116      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80036d0:	4b8d      	ldr	r3, [pc, #564]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80036d2:	6a1b      	ldr	r3, [r3, #32]
 80036d4:	2202      	movs	r2, #2
 80036d6:	4013      	ands	r3, r2
 80036d8:	d1f0      	bne.n	80036bc <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80036da:	231f      	movs	r3, #31
 80036dc:	18fb      	adds	r3, r7, r3
 80036de:	781b      	ldrb	r3, [r3, #0]
 80036e0:	2b01      	cmp	r3, #1
 80036e2:	d105      	bne.n	80036f0 <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80036e4:	4b88      	ldr	r3, [pc, #544]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80036e6:	69da      	ldr	r2, [r3, #28]
 80036e8:	4b87      	ldr	r3, [pc, #540]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80036ea:	4989      	ldr	r1, [pc, #548]	@ (8003910 <HAL_RCC_OscConfig+0x628>)
 80036ec:	400a      	ands	r2, r1
 80036ee:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	2210      	movs	r2, #16
 80036f6:	4013      	ands	r3, r2
 80036f8:	d063      	beq.n	80037c2 <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	695b      	ldr	r3, [r3, #20]
 80036fe:	2b01      	cmp	r3, #1
 8003700:	d12a      	bne.n	8003758 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003702:	4b81      	ldr	r3, [pc, #516]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003704:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003706:	4b80      	ldr	r3, [pc, #512]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003708:	2104      	movs	r1, #4
 800370a:	430a      	orrs	r2, r1
 800370c:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 800370e:	4b7e      	ldr	r3, [pc, #504]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003710:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003712:	4b7d      	ldr	r3, [pc, #500]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003714:	2101      	movs	r1, #1
 8003716:	430a      	orrs	r2, r1
 8003718:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800371a:	f7ff fb75 	bl	8002e08 <HAL_GetTick>
 800371e:	0003      	movs	r3, r0
 8003720:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003722:	e008      	b.n	8003736 <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003724:	f7ff fb70 	bl	8002e08 <HAL_GetTick>
 8003728:	0002      	movs	r2, r0
 800372a:	69bb      	ldr	r3, [r7, #24]
 800372c:	1ad3      	subs	r3, r2, r3
 800372e:	2b02      	cmp	r3, #2
 8003730:	d901      	bls.n	8003736 <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8003732:	2303      	movs	r3, #3
 8003734:	e0e3      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003736:	4b74      	ldr	r3, [pc, #464]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003738:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800373a:	2202      	movs	r2, #2
 800373c:	4013      	ands	r3, r2
 800373e:	d0f1      	beq.n	8003724 <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003740:	4b71      	ldr	r3, [pc, #452]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003742:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003744:	22f8      	movs	r2, #248	@ 0xf8
 8003746:	4393      	bics	r3, r2
 8003748:	0019      	movs	r1, r3
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	699b      	ldr	r3, [r3, #24]
 800374e:	00da      	lsls	r2, r3, #3
 8003750:	4b6d      	ldr	r3, [pc, #436]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003752:	430a      	orrs	r2, r1
 8003754:	635a      	str	r2, [r3, #52]	@ 0x34
 8003756:	e034      	b.n	80037c2 <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	695b      	ldr	r3, [r3, #20]
 800375c:	3305      	adds	r3, #5
 800375e:	d111      	bne.n	8003784 <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8003760:	4b69      	ldr	r3, [pc, #420]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003762:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003764:	4b68      	ldr	r3, [pc, #416]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003766:	2104      	movs	r1, #4
 8003768:	438a      	bics	r2, r1
 800376a:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 800376c:	4b66      	ldr	r3, [pc, #408]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800376e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003770:	22f8      	movs	r2, #248	@ 0xf8
 8003772:	4393      	bics	r3, r2
 8003774:	0019      	movs	r1, r3
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	699b      	ldr	r3, [r3, #24]
 800377a:	00da      	lsls	r2, r3, #3
 800377c:	4b62      	ldr	r3, [pc, #392]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800377e:	430a      	orrs	r2, r1
 8003780:	635a      	str	r2, [r3, #52]	@ 0x34
 8003782:	e01e      	b.n	80037c2 <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003784:	4b60      	ldr	r3, [pc, #384]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003786:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003788:	4b5f      	ldr	r3, [pc, #380]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800378a:	2104      	movs	r1, #4
 800378c:	430a      	orrs	r2, r1
 800378e:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8003790:	4b5d      	ldr	r3, [pc, #372]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003792:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003794:	4b5c      	ldr	r3, [pc, #368]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003796:	2101      	movs	r1, #1
 8003798:	438a      	bics	r2, r1
 800379a:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800379c:	f7ff fb34 	bl	8002e08 <HAL_GetTick>
 80037a0:	0003      	movs	r3, r0
 80037a2:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80037a4:	e008      	b.n	80037b8 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80037a6:	f7ff fb2f 	bl	8002e08 <HAL_GetTick>
 80037aa:	0002      	movs	r2, r0
 80037ac:	69bb      	ldr	r3, [r7, #24]
 80037ae:	1ad3      	subs	r3, r2, r3
 80037b0:	2b02      	cmp	r3, #2
 80037b2:	d901      	bls.n	80037b8 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 80037b4:	2303      	movs	r3, #3
 80037b6:	e0a2      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80037b8:	4b53      	ldr	r3, [pc, #332]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80037ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80037bc:	2202      	movs	r2, #2
 80037be:	4013      	ands	r3, r2
 80037c0:	d1f1      	bne.n	80037a6 <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	6a1b      	ldr	r3, [r3, #32]
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d100      	bne.n	80037cc <HAL_RCC_OscConfig+0x4e4>
 80037ca:	e097      	b.n	80038fc <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80037cc:	4b4e      	ldr	r3, [pc, #312]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80037ce:	685b      	ldr	r3, [r3, #4]
 80037d0:	220c      	movs	r2, #12
 80037d2:	4013      	ands	r3, r2
 80037d4:	2b08      	cmp	r3, #8
 80037d6:	d100      	bne.n	80037da <HAL_RCC_OscConfig+0x4f2>
 80037d8:	e06b      	b.n	80038b2 <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	6a1b      	ldr	r3, [r3, #32]
 80037de:	2b02      	cmp	r3, #2
 80037e0:	d14c      	bne.n	800387c <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80037e2:	4b49      	ldr	r3, [pc, #292]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80037e4:	681a      	ldr	r2, [r3, #0]
 80037e6:	4b48      	ldr	r3, [pc, #288]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80037e8:	494a      	ldr	r1, [pc, #296]	@ (8003914 <HAL_RCC_OscConfig+0x62c>)
 80037ea:	400a      	ands	r2, r1
 80037ec:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80037ee:	f7ff fb0b 	bl	8002e08 <HAL_GetTick>
 80037f2:	0003      	movs	r3, r0
 80037f4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80037f6:	e008      	b.n	800380a <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80037f8:	f7ff fb06 	bl	8002e08 <HAL_GetTick>
 80037fc:	0002      	movs	r2, r0
 80037fe:	69bb      	ldr	r3, [r7, #24]
 8003800:	1ad3      	subs	r3, r2, r3
 8003802:	2b02      	cmp	r3, #2
 8003804:	d901      	bls.n	800380a <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 8003806:	2303      	movs	r3, #3
 8003808:	e079      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800380a:	4b3f      	ldr	r3, [pc, #252]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800380c:	681a      	ldr	r2, [r3, #0]
 800380e:	2380      	movs	r3, #128	@ 0x80
 8003810:	049b      	lsls	r3, r3, #18
 8003812:	4013      	ands	r3, r2
 8003814:	d1f0      	bne.n	80037f8 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003816:	4b3c      	ldr	r3, [pc, #240]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003818:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800381a:	220f      	movs	r2, #15
 800381c:	4393      	bics	r3, r2
 800381e:	0019      	movs	r1, r3
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003824:	4b38      	ldr	r3, [pc, #224]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003826:	430a      	orrs	r2, r1
 8003828:	62da      	str	r2, [r3, #44]	@ 0x2c
 800382a:	4b37      	ldr	r3, [pc, #220]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800382c:	685b      	ldr	r3, [r3, #4]
 800382e:	4a3a      	ldr	r2, [pc, #232]	@ (8003918 <HAL_RCC_OscConfig+0x630>)
 8003830:	4013      	ands	r3, r2
 8003832:	0019      	movs	r1, r3
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800383c:	431a      	orrs	r2, r3
 800383e:	4b32      	ldr	r3, [pc, #200]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003840:	430a      	orrs	r2, r1
 8003842:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003844:	4b30      	ldr	r3, [pc, #192]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003846:	681a      	ldr	r2, [r3, #0]
 8003848:	4b2f      	ldr	r3, [pc, #188]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800384a:	2180      	movs	r1, #128	@ 0x80
 800384c:	0449      	lsls	r1, r1, #17
 800384e:	430a      	orrs	r2, r1
 8003850:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003852:	f7ff fad9 	bl	8002e08 <HAL_GetTick>
 8003856:	0003      	movs	r3, r0
 8003858:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800385a:	e008      	b.n	800386e <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800385c:	f7ff fad4 	bl	8002e08 <HAL_GetTick>
 8003860:	0002      	movs	r2, r0
 8003862:	69bb      	ldr	r3, [r7, #24]
 8003864:	1ad3      	subs	r3, r2, r3
 8003866:	2b02      	cmp	r3, #2
 8003868:	d901      	bls.n	800386e <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 800386a:	2303      	movs	r3, #3
 800386c:	e047      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800386e:	4b26      	ldr	r3, [pc, #152]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003870:	681a      	ldr	r2, [r3, #0]
 8003872:	2380      	movs	r3, #128	@ 0x80
 8003874:	049b      	lsls	r3, r3, #18
 8003876:	4013      	ands	r3, r2
 8003878:	d0f0      	beq.n	800385c <HAL_RCC_OscConfig+0x574>
 800387a:	e03f      	b.n	80038fc <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800387c:	4b22      	ldr	r3, [pc, #136]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 800387e:	681a      	ldr	r2, [r3, #0]
 8003880:	4b21      	ldr	r3, [pc, #132]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 8003882:	4924      	ldr	r1, [pc, #144]	@ (8003914 <HAL_RCC_OscConfig+0x62c>)
 8003884:	400a      	ands	r2, r1
 8003886:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003888:	f7ff fabe 	bl	8002e08 <HAL_GetTick>
 800388c:	0003      	movs	r3, r0
 800388e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003890:	e008      	b.n	80038a4 <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003892:	f7ff fab9 	bl	8002e08 <HAL_GetTick>
 8003896:	0002      	movs	r2, r0
 8003898:	69bb      	ldr	r3, [r7, #24]
 800389a:	1ad3      	subs	r3, r2, r3
 800389c:	2b02      	cmp	r3, #2
 800389e:	d901      	bls.n	80038a4 <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 80038a0:	2303      	movs	r3, #3
 80038a2:	e02c      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80038a4:	4b18      	ldr	r3, [pc, #96]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80038a6:	681a      	ldr	r2, [r3, #0]
 80038a8:	2380      	movs	r3, #128	@ 0x80
 80038aa:	049b      	lsls	r3, r3, #18
 80038ac:	4013      	ands	r3, r2
 80038ae:	d1f0      	bne.n	8003892 <HAL_RCC_OscConfig+0x5aa>
 80038b0:	e024      	b.n	80038fc <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	6a1b      	ldr	r3, [r3, #32]
 80038b6:	2b01      	cmp	r3, #1
 80038b8:	d101      	bne.n	80038be <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 80038ba:	2301      	movs	r3, #1
 80038bc:	e01f      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 80038be:	4b12      	ldr	r3, [pc, #72]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80038c0:	685b      	ldr	r3, [r3, #4]
 80038c2:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 80038c4:	4b10      	ldr	r3, [pc, #64]	@ (8003908 <HAL_RCC_OscConfig+0x620>)
 80038c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80038c8:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80038ca:	697a      	ldr	r2, [r7, #20]
 80038cc:	2380      	movs	r3, #128	@ 0x80
 80038ce:	025b      	lsls	r3, r3, #9
 80038d0:	401a      	ands	r2, r3
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80038d6:	429a      	cmp	r2, r3
 80038d8:	d10e      	bne.n	80038f8 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80038da:	693b      	ldr	r3, [r7, #16]
 80038dc:	220f      	movs	r2, #15
 80038de:	401a      	ands	r2, r3
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80038e4:	429a      	cmp	r2, r3
 80038e6:	d107      	bne.n	80038f8 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 80038e8:	697a      	ldr	r2, [r7, #20]
 80038ea:	23f0      	movs	r3, #240	@ 0xf0
 80038ec:	039b      	lsls	r3, r3, #14
 80038ee:	401a      	ands	r2, r3
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80038f4:	429a      	cmp	r2, r3
 80038f6:	d001      	beq.n	80038fc <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 80038f8:	2301      	movs	r3, #1
 80038fa:	e000      	b.n	80038fe <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 80038fc:	2300      	movs	r3, #0
}
 80038fe:	0018      	movs	r0, r3
 8003900:	46bd      	mov	sp, r7
 8003902:	b008      	add	sp, #32
 8003904:	bd80      	pop	{r7, pc}
 8003906:	46c0      	nop			@ (mov r8, r8)
 8003908:	40021000 	.word	0x40021000
 800390c:	00001388 	.word	0x00001388
 8003910:	efffffff 	.word	0xefffffff
 8003914:	feffffff 	.word	0xfeffffff
 8003918:	ffc2ffff 	.word	0xffc2ffff

0800391c <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800391c:	b580      	push	{r7, lr}
 800391e:	b084      	sub	sp, #16
 8003920:	af00      	add	r7, sp, #0
 8003922:	6078      	str	r0, [r7, #4]
 8003924:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	2b00      	cmp	r3, #0
 800392a:	d101      	bne.n	8003930 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800392c:	2301      	movs	r3, #1
 800392e:	e0b3      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003930:	4b5b      	ldr	r3, [pc, #364]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	2201      	movs	r2, #1
 8003936:	4013      	ands	r3, r2
 8003938:	683a      	ldr	r2, [r7, #0]
 800393a:	429a      	cmp	r2, r3
 800393c:	d911      	bls.n	8003962 <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800393e:	4b58      	ldr	r3, [pc, #352]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	2201      	movs	r2, #1
 8003944:	4393      	bics	r3, r2
 8003946:	0019      	movs	r1, r3
 8003948:	4b55      	ldr	r3, [pc, #340]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 800394a:	683a      	ldr	r2, [r7, #0]
 800394c:	430a      	orrs	r2, r1
 800394e:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003950:	4b53      	ldr	r3, [pc, #332]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	2201      	movs	r2, #1
 8003956:	4013      	ands	r3, r2
 8003958:	683a      	ldr	r2, [r7, #0]
 800395a:	429a      	cmp	r2, r3
 800395c:	d001      	beq.n	8003962 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 800395e:	2301      	movs	r3, #1
 8003960:	e09a      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	2202      	movs	r2, #2
 8003968:	4013      	ands	r3, r2
 800396a:	d015      	beq.n	8003998 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	2204      	movs	r2, #4
 8003972:	4013      	ands	r3, r2
 8003974:	d006      	beq.n	8003984 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003976:	4b4b      	ldr	r3, [pc, #300]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003978:	685a      	ldr	r2, [r3, #4]
 800397a:	4b4a      	ldr	r3, [pc, #296]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 800397c:	21e0      	movs	r1, #224	@ 0xe0
 800397e:	00c9      	lsls	r1, r1, #3
 8003980:	430a      	orrs	r2, r1
 8003982:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003984:	4b47      	ldr	r3, [pc, #284]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003986:	685b      	ldr	r3, [r3, #4]
 8003988:	22f0      	movs	r2, #240	@ 0xf0
 800398a:	4393      	bics	r3, r2
 800398c:	0019      	movs	r1, r3
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	689a      	ldr	r2, [r3, #8]
 8003992:	4b44      	ldr	r3, [pc, #272]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003994:	430a      	orrs	r2, r1
 8003996:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	2201      	movs	r2, #1
 800399e:	4013      	ands	r3, r2
 80039a0:	d040      	beq.n	8003a24 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	685b      	ldr	r3, [r3, #4]
 80039a6:	2b01      	cmp	r3, #1
 80039a8:	d107      	bne.n	80039ba <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80039aa:	4b3e      	ldr	r3, [pc, #248]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 80039ac:	681a      	ldr	r2, [r3, #0]
 80039ae:	2380      	movs	r3, #128	@ 0x80
 80039b0:	029b      	lsls	r3, r3, #10
 80039b2:	4013      	ands	r3, r2
 80039b4:	d114      	bne.n	80039e0 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80039b6:	2301      	movs	r3, #1
 80039b8:	e06e      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	2b02      	cmp	r3, #2
 80039c0:	d107      	bne.n	80039d2 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80039c2:	4b38      	ldr	r3, [pc, #224]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 80039c4:	681a      	ldr	r2, [r3, #0]
 80039c6:	2380      	movs	r3, #128	@ 0x80
 80039c8:	049b      	lsls	r3, r3, #18
 80039ca:	4013      	ands	r3, r2
 80039cc:	d108      	bne.n	80039e0 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80039ce:	2301      	movs	r3, #1
 80039d0:	e062      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80039d2:	4b34      	ldr	r3, [pc, #208]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	2202      	movs	r2, #2
 80039d8:	4013      	ands	r3, r2
 80039da:	d101      	bne.n	80039e0 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80039dc:	2301      	movs	r3, #1
 80039de:	e05b      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80039e0:	4b30      	ldr	r3, [pc, #192]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 80039e2:	685b      	ldr	r3, [r3, #4]
 80039e4:	2203      	movs	r2, #3
 80039e6:	4393      	bics	r3, r2
 80039e8:	0019      	movs	r1, r3
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	685a      	ldr	r2, [r3, #4]
 80039ee:	4b2d      	ldr	r3, [pc, #180]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 80039f0:	430a      	orrs	r2, r1
 80039f2:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80039f4:	f7ff fa08 	bl	8002e08 <HAL_GetTick>
 80039f8:	0003      	movs	r3, r0
 80039fa:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80039fc:	e009      	b.n	8003a12 <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80039fe:	f7ff fa03 	bl	8002e08 <HAL_GetTick>
 8003a02:	0002      	movs	r2, r0
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	1ad3      	subs	r3, r2, r3
 8003a08:	4a27      	ldr	r2, [pc, #156]	@ (8003aa8 <HAL_RCC_ClockConfig+0x18c>)
 8003a0a:	4293      	cmp	r3, r2
 8003a0c:	d901      	bls.n	8003a12 <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8003a0e:	2303      	movs	r3, #3
 8003a10:	e042      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003a12:	4b24      	ldr	r3, [pc, #144]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003a14:	685b      	ldr	r3, [r3, #4]
 8003a16:	220c      	movs	r2, #12
 8003a18:	401a      	ands	r2, r3
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	685b      	ldr	r3, [r3, #4]
 8003a1e:	009b      	lsls	r3, r3, #2
 8003a20:	429a      	cmp	r2, r3
 8003a22:	d1ec      	bne.n	80039fe <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003a24:	4b1e      	ldr	r3, [pc, #120]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003a26:	681b      	ldr	r3, [r3, #0]
 8003a28:	2201      	movs	r2, #1
 8003a2a:	4013      	ands	r3, r2
 8003a2c:	683a      	ldr	r2, [r7, #0]
 8003a2e:	429a      	cmp	r2, r3
 8003a30:	d211      	bcs.n	8003a56 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003a32:	4b1b      	ldr	r3, [pc, #108]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	2201      	movs	r2, #1
 8003a38:	4393      	bics	r3, r2
 8003a3a:	0019      	movs	r1, r3
 8003a3c:	4b18      	ldr	r3, [pc, #96]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003a3e:	683a      	ldr	r2, [r7, #0]
 8003a40:	430a      	orrs	r2, r1
 8003a42:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003a44:	4b16      	ldr	r3, [pc, #88]	@ (8003aa0 <HAL_RCC_ClockConfig+0x184>)
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	2201      	movs	r2, #1
 8003a4a:	4013      	ands	r3, r2
 8003a4c:	683a      	ldr	r2, [r7, #0]
 8003a4e:	429a      	cmp	r2, r3
 8003a50:	d001      	beq.n	8003a56 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8003a52:	2301      	movs	r3, #1
 8003a54:	e020      	b.n	8003a98 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	2204      	movs	r2, #4
 8003a5c:	4013      	ands	r3, r2
 8003a5e:	d009      	beq.n	8003a74 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003a60:	4b10      	ldr	r3, [pc, #64]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003a62:	685b      	ldr	r3, [r3, #4]
 8003a64:	4a11      	ldr	r2, [pc, #68]	@ (8003aac <HAL_RCC_ClockConfig+0x190>)
 8003a66:	4013      	ands	r3, r2
 8003a68:	0019      	movs	r1, r3
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	68da      	ldr	r2, [r3, #12]
 8003a6e:	4b0d      	ldr	r3, [pc, #52]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003a70:	430a      	orrs	r2, r1
 8003a72:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003a74:	f000 f820 	bl	8003ab8 <HAL_RCC_GetSysClockFreq>
 8003a78:	0001      	movs	r1, r0
 8003a7a:	4b0a      	ldr	r3, [pc, #40]	@ (8003aa4 <HAL_RCC_ClockConfig+0x188>)
 8003a7c:	685b      	ldr	r3, [r3, #4]
 8003a7e:	091b      	lsrs	r3, r3, #4
 8003a80:	220f      	movs	r2, #15
 8003a82:	4013      	ands	r3, r2
 8003a84:	4a0a      	ldr	r2, [pc, #40]	@ (8003ab0 <HAL_RCC_ClockConfig+0x194>)
 8003a86:	5cd3      	ldrb	r3, [r2, r3]
 8003a88:	000a      	movs	r2, r1
 8003a8a:	40da      	lsrs	r2, r3
 8003a8c:	4b09      	ldr	r3, [pc, #36]	@ (8003ab4 <HAL_RCC_ClockConfig+0x198>)
 8003a8e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8003a90:	2003      	movs	r0, #3
 8003a92:	f7ff f973 	bl	8002d7c <HAL_InitTick>
  
  return HAL_OK;
 8003a96:	2300      	movs	r3, #0
}
 8003a98:	0018      	movs	r0, r3
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	b004      	add	sp, #16
 8003a9e:	bd80      	pop	{r7, pc}
 8003aa0:	40022000 	.word	0x40022000
 8003aa4:	40021000 	.word	0x40021000
 8003aa8:	00001388 	.word	0x00001388
 8003aac:	fffff8ff 	.word	0xfffff8ff
 8003ab0:	08008228 	.word	0x08008228
 8003ab4:	20000020 	.word	0x20000020

08003ab8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003ab8:	b580      	push	{r7, lr}
 8003aba:	b086      	sub	sp, #24
 8003abc:	af00      	add	r7, sp, #0
  static const uint8_t aPLLMULFactorTable[16U] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
                                                   10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  static const uint8_t aPredivFactorTable[16U] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
                                                   9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8003abe:	2300      	movs	r3, #0
 8003ac0:	60fb      	str	r3, [r7, #12]
 8003ac2:	2300      	movs	r3, #0
 8003ac4:	60bb      	str	r3, [r7, #8]
 8003ac6:	2300      	movs	r3, #0
 8003ac8:	617b      	str	r3, [r7, #20]
 8003aca:	2300      	movs	r3, #0
 8003acc:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 8003ace:	2300      	movs	r3, #0
 8003ad0:	613b      	str	r3, [r7, #16]
  
  tmpreg = RCC->CFGR;
 8003ad2:	4b20      	ldr	r3, [pc, #128]	@ (8003b54 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003ad4:	685b      	ldr	r3, [r3, #4]
 8003ad6:	60fb      	str	r3, [r7, #12]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003ad8:	68fb      	ldr	r3, [r7, #12]
 8003ada:	220c      	movs	r2, #12
 8003adc:	4013      	ands	r3, r2
 8003ade:	2b04      	cmp	r3, #4
 8003ae0:	d002      	beq.n	8003ae8 <HAL_RCC_GetSysClockFreq+0x30>
 8003ae2:	2b08      	cmp	r3, #8
 8003ae4:	d003      	beq.n	8003aee <HAL_RCC_GetSysClockFreq+0x36>
 8003ae6:	e02c      	b.n	8003b42 <HAL_RCC_GetSysClockFreq+0x8a>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003ae8:	4b1b      	ldr	r3, [pc, #108]	@ (8003b58 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003aea:	613b      	str	r3, [r7, #16]
      break;
 8003aec:	e02c      	b.n	8003b48 <HAL_RCC_GetSysClockFreq+0x90>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	0c9b      	lsrs	r3, r3, #18
 8003af2:	220f      	movs	r2, #15
 8003af4:	4013      	ands	r3, r2
 8003af6:	4a19      	ldr	r2, [pc, #100]	@ (8003b5c <HAL_RCC_GetSysClockFreq+0xa4>)
 8003af8:	5cd3      	ldrb	r3, [r2, r3]
 8003afa:	607b      	str	r3, [r7, #4]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003afc:	4b15      	ldr	r3, [pc, #84]	@ (8003b54 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003afe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003b00:	220f      	movs	r2, #15
 8003b02:	4013      	ands	r3, r2
 8003b04:	4a16      	ldr	r2, [pc, #88]	@ (8003b60 <HAL_RCC_GetSysClockFreq+0xa8>)
 8003b06:	5cd3      	ldrb	r3, [r2, r3]
 8003b08:	60bb      	str	r3, [r7, #8]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003b0a:	68fa      	ldr	r2, [r7, #12]
 8003b0c:	2380      	movs	r3, #128	@ 0x80
 8003b0e:	025b      	lsls	r3, r3, #9
 8003b10:	4013      	ands	r3, r2
 8003b12:	d009      	beq.n	8003b28 <HAL_RCC_GetSysClockFreq+0x70>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003b14:	68b9      	ldr	r1, [r7, #8]
 8003b16:	4810      	ldr	r0, [pc, #64]	@ (8003b58 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003b18:	f7fc fb12 	bl	8000140 <__udivsi3>
 8003b1c:	0003      	movs	r3, r0
 8003b1e:	001a      	movs	r2, r3
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	4353      	muls	r3, r2
 8003b24:	617b      	str	r3, [r7, #20]
 8003b26:	e009      	b.n	8003b3c <HAL_RCC_GetSysClockFreq+0x84>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8003b28:	6879      	ldr	r1, [r7, #4]
 8003b2a:	000a      	movs	r2, r1
 8003b2c:	0152      	lsls	r2, r2, #5
 8003b2e:	1a52      	subs	r2, r2, r1
 8003b30:	0193      	lsls	r3, r2, #6
 8003b32:	1a9b      	subs	r3, r3, r2
 8003b34:	00db      	lsls	r3, r3, #3
 8003b36:	185b      	adds	r3, r3, r1
 8003b38:	021b      	lsls	r3, r3, #8
 8003b3a:	617b      	str	r3, [r7, #20]
#endif
      }
      sysclockfreq = pllclk;
 8003b3c:	697b      	ldr	r3, [r7, #20]
 8003b3e:	613b      	str	r3, [r7, #16]
      break;
 8003b40:	e002      	b.n	8003b48 <HAL_RCC_GetSysClockFreq+0x90>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8003b42:	4b05      	ldr	r3, [pc, #20]	@ (8003b58 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003b44:	613b      	str	r3, [r7, #16]
      break;
 8003b46:	46c0      	nop			@ (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003b48:	693b      	ldr	r3, [r7, #16]
}
 8003b4a:	0018      	movs	r0, r3
 8003b4c:	46bd      	mov	sp, r7
 8003b4e:	b006      	add	sp, #24
 8003b50:	bd80      	pop	{r7, pc}
 8003b52:	46c0      	nop			@ (mov r8, r8)
 8003b54:	40021000 	.word	0x40021000
 8003b58:	007a1200 	.word	0x007a1200
 8003b5c:	08008238 	.word	0x08008238
 8003b60:	08008248 	.word	0x08008248

08003b64 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8003b64:	b580      	push	{r7, lr}
 8003b66:	b084      	sub	sp, #16
 8003b68:	af00      	add	r7, sp, #0
 8003b6a:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d101      	bne.n	8003b76 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8003b72:	2301      	movs	r3, #1
 8003b74:	e0a8      	b.n	8003cc8 <HAL_SPI_Init+0x164>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d109      	bne.n	8003b92 <HAL_SPI_Init+0x2e>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	685a      	ldr	r2, [r3, #4]
 8003b82:	2382      	movs	r3, #130	@ 0x82
 8003b84:	005b      	lsls	r3, r3, #1
 8003b86:	429a      	cmp	r2, r3
 8003b88:	d009      	beq.n	8003b9e <HAL_SPI_Init+0x3a>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	61da      	str	r2, [r3, #28]
 8003b90:	e005      	b.n	8003b9e <HAL_SPI_Init+0x3a>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	2200      	movs	r2, #0
 8003b96:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	2200      	movs	r2, #0
 8003b9c:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	2200      	movs	r2, #0
 8003ba2:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	225d      	movs	r2, #93	@ 0x5d
 8003ba8:	5c9b      	ldrb	r3, [r3, r2]
 8003baa:	b2db      	uxtb	r3, r3
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d107      	bne.n	8003bc0 <HAL_SPI_Init+0x5c>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	225c      	movs	r2, #92	@ 0x5c
 8003bb4:	2100      	movs	r1, #0
 8003bb6:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	0018      	movs	r0, r3
 8003bbc:	f7fe ff76 	bl	8002aac <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	225d      	movs	r2, #93	@ 0x5d
 8003bc4:	2102      	movs	r1, #2
 8003bc6:	5499      	strb	r1, [r3, r2]

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	681a      	ldr	r2, [r3, #0]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	2140      	movs	r1, #64	@ 0x40
 8003bd4:	438a      	bics	r2, r1
 8003bd6:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	68da      	ldr	r2, [r3, #12]
 8003bdc:	23e0      	movs	r3, #224	@ 0xe0
 8003bde:	00db      	lsls	r3, r3, #3
 8003be0:	429a      	cmp	r2, r3
 8003be2:	d902      	bls.n	8003bea <HAL_SPI_Init+0x86>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 8003be4:	2300      	movs	r3, #0
 8003be6:	60fb      	str	r3, [r7, #12]
 8003be8:	e002      	b.n	8003bf0 <HAL_SPI_Init+0x8c>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8003bea:	2380      	movs	r3, #128	@ 0x80
 8003bec:	015b      	lsls	r3, r3, #5
 8003bee:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	68da      	ldr	r2, [r3, #12]
 8003bf4:	23f0      	movs	r3, #240	@ 0xf0
 8003bf6:	011b      	lsls	r3, r3, #4
 8003bf8:	429a      	cmp	r2, r3
 8003bfa:	d008      	beq.n	8003c0e <HAL_SPI_Init+0xaa>
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	68da      	ldr	r2, [r3, #12]
 8003c00:	23e0      	movs	r3, #224	@ 0xe0
 8003c02:	00db      	lsls	r3, r3, #3
 8003c04:	429a      	cmp	r2, r3
 8003c06:	d002      	beq.n	8003c0e <HAL_SPI_Init+0xaa>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	2200      	movs	r2, #0
 8003c0c:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	685a      	ldr	r2, [r3, #4]
 8003c12:	2382      	movs	r3, #130	@ 0x82
 8003c14:	005b      	lsls	r3, r3, #1
 8003c16:	401a      	ands	r2, r3
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	6899      	ldr	r1, [r3, #8]
 8003c1c:	2384      	movs	r3, #132	@ 0x84
 8003c1e:	021b      	lsls	r3, r3, #8
 8003c20:	400b      	ands	r3, r1
 8003c22:	431a      	orrs	r2, r3
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	691b      	ldr	r3, [r3, #16]
 8003c28:	2102      	movs	r1, #2
 8003c2a:	400b      	ands	r3, r1
 8003c2c:	431a      	orrs	r2, r3
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	695b      	ldr	r3, [r3, #20]
 8003c32:	2101      	movs	r1, #1
 8003c34:	400b      	ands	r3, r1
 8003c36:	431a      	orrs	r2, r3
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	6999      	ldr	r1, [r3, #24]
 8003c3c:	2380      	movs	r3, #128	@ 0x80
 8003c3e:	009b      	lsls	r3, r3, #2
 8003c40:	400b      	ands	r3, r1
 8003c42:	431a      	orrs	r2, r3
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	69db      	ldr	r3, [r3, #28]
 8003c48:	2138      	movs	r1, #56	@ 0x38
 8003c4a:	400b      	ands	r3, r1
 8003c4c:	431a      	orrs	r2, r3
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	6a1b      	ldr	r3, [r3, #32]
 8003c52:	2180      	movs	r1, #128	@ 0x80
 8003c54:	400b      	ands	r3, r1
 8003c56:	431a      	orrs	r2, r3
 8003c58:	0011      	movs	r1, r2
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003c5e:	2380      	movs	r3, #128	@ 0x80
 8003c60:	019b      	lsls	r3, r3, #6
 8003c62:	401a      	ands	r2, r3
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	430a      	orrs	r2, r1
 8003c6a:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	699b      	ldr	r3, [r3, #24]
 8003c70:	0c1b      	lsrs	r3, r3, #16
 8003c72:	2204      	movs	r2, #4
 8003c74:	401a      	ands	r2, r3
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c7a:	2110      	movs	r1, #16
 8003c7c:	400b      	ands	r3, r1
 8003c7e:	431a      	orrs	r2, r3
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003c84:	2108      	movs	r1, #8
 8003c86:	400b      	ands	r3, r1
 8003c88:	431a      	orrs	r2, r3
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	68d9      	ldr	r1, [r3, #12]
 8003c8e:	23f0      	movs	r3, #240	@ 0xf0
 8003c90:	011b      	lsls	r3, r3, #4
 8003c92:	400b      	ands	r3, r1
 8003c94:	431a      	orrs	r2, r3
 8003c96:	0011      	movs	r1, r2
 8003c98:	68fa      	ldr	r2, [r7, #12]
 8003c9a:	2380      	movs	r3, #128	@ 0x80
 8003c9c:	015b      	lsls	r3, r3, #5
 8003c9e:	401a      	ands	r2, r3
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	430a      	orrs	r2, r1
 8003ca6:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	69da      	ldr	r2, [r3, #28]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	4907      	ldr	r1, [pc, #28]	@ (8003cd0 <HAL_SPI_Init+0x16c>)
 8003cb4:	400a      	ands	r2, r1
 8003cb6:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	2200      	movs	r2, #0
 8003cbc:	661a      	str	r2, [r3, #96]	@ 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	225d      	movs	r2, #93	@ 0x5d
 8003cc2:	2101      	movs	r1, #1
 8003cc4:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8003cc6:	2300      	movs	r3, #0
}
 8003cc8:	0018      	movs	r0, r3
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	b004      	add	sp, #16
 8003cce:	bd80      	pop	{r7, pc}
 8003cd0:	fffff7ff 	.word	0xfffff7ff

08003cd4 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003cd4:	b580      	push	{r7, lr}
 8003cd6:	b088      	sub	sp, #32
 8003cd8:	af00      	add	r7, sp, #0
 8003cda:	60f8      	str	r0, [r7, #12]
 8003cdc:	60b9      	str	r1, [r7, #8]
 8003cde:	603b      	str	r3, [r7, #0]
 8003ce0:	1dbb      	adds	r3, r7, #6
 8003ce2:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8003ce4:	231f      	movs	r3, #31
 8003ce6:	18fb      	adds	r3, r7, r3
 8003ce8:	2200      	movs	r2, #0
 8003cea:	701a      	strb	r2, [r3, #0]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8003cec:	68fb      	ldr	r3, [r7, #12]
 8003cee:	225c      	movs	r2, #92	@ 0x5c
 8003cf0:	5c9b      	ldrb	r3, [r3, r2]
 8003cf2:	2b01      	cmp	r3, #1
 8003cf4:	d101      	bne.n	8003cfa <HAL_SPI_Transmit+0x26>
 8003cf6:	2302      	movs	r3, #2
 8003cf8:	e147      	b.n	8003f8a <HAL_SPI_Transmit+0x2b6>
 8003cfa:	68fb      	ldr	r3, [r7, #12]
 8003cfc:	225c      	movs	r2, #92	@ 0x5c
 8003cfe:	2101      	movs	r1, #1
 8003d00:	5499      	strb	r1, [r3, r2]

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8003d02:	f7ff f881 	bl	8002e08 <HAL_GetTick>
 8003d06:	0003      	movs	r3, r0
 8003d08:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 8003d0a:	2316      	movs	r3, #22
 8003d0c:	18fb      	adds	r3, r7, r3
 8003d0e:	1dba      	adds	r2, r7, #6
 8003d10:	8812      	ldrh	r2, [r2, #0]
 8003d12:	801a      	strh	r2, [r3, #0]

  if (hspi->State != HAL_SPI_STATE_READY)
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	225d      	movs	r2, #93	@ 0x5d
 8003d18:	5c9b      	ldrb	r3, [r3, r2]
 8003d1a:	b2db      	uxtb	r3, r3
 8003d1c:	2b01      	cmp	r3, #1
 8003d1e:	d004      	beq.n	8003d2a <HAL_SPI_Transmit+0x56>
  {
    errorcode = HAL_BUSY;
 8003d20:	231f      	movs	r3, #31
 8003d22:	18fb      	adds	r3, r7, r3
 8003d24:	2202      	movs	r2, #2
 8003d26:	701a      	strb	r2, [r3, #0]
    goto error;
 8003d28:	e128      	b.n	8003f7c <HAL_SPI_Transmit+0x2a8>
  }

  if ((pData == NULL) || (Size == 0U))
 8003d2a:	68bb      	ldr	r3, [r7, #8]
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d003      	beq.n	8003d38 <HAL_SPI_Transmit+0x64>
 8003d30:	1dbb      	adds	r3, r7, #6
 8003d32:	881b      	ldrh	r3, [r3, #0]
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	d104      	bne.n	8003d42 <HAL_SPI_Transmit+0x6e>
  {
    errorcode = HAL_ERROR;
 8003d38:	231f      	movs	r3, #31
 8003d3a:	18fb      	adds	r3, r7, r3
 8003d3c:	2201      	movs	r2, #1
 8003d3e:	701a      	strb	r2, [r3, #0]
    goto error;
 8003d40:	e11c      	b.n	8003f7c <HAL_SPI_Transmit+0x2a8>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	225d      	movs	r2, #93	@ 0x5d
 8003d46:	2103      	movs	r1, #3
 8003d48:	5499      	strb	r1, [r3, r2]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8003d4a:	68fb      	ldr	r3, [r7, #12]
 8003d4c:	2200      	movs	r2, #0
 8003d4e:	661a      	str	r2, [r3, #96]	@ 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	68ba      	ldr	r2, [r7, #8]
 8003d54:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxXferSize  = Size;
 8003d56:	68fb      	ldr	r3, [r7, #12]
 8003d58:	1dba      	adds	r2, r7, #6
 8003d5a:	8812      	ldrh	r2, [r2, #0]
 8003d5c:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->TxXferCount = Size;
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	1dba      	adds	r2, r7, #6
 8003d62:	8812      	ldrh	r2, [r2, #0]
 8003d64:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	2200      	movs	r2, #0
 8003d6a:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	2244      	movs	r2, #68	@ 0x44
 8003d70:	2100      	movs	r1, #0
 8003d72:	5299      	strh	r1, [r3, r2]
  hspi->RxXferCount = 0U;
 8003d74:	68fb      	ldr	r3, [r7, #12]
 8003d76:	2246      	movs	r2, #70	@ 0x46
 8003d78:	2100      	movs	r1, #0
 8003d7a:	5299      	strh	r1, [r3, r2]
  hspi->TxISR       = NULL;
 8003d7c:	68fb      	ldr	r3, [r7, #12]
 8003d7e:	2200      	movs	r2, #0
 8003d80:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi->RxISR       = NULL;
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	2200      	movs	r2, #0
 8003d86:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8003d88:	68fb      	ldr	r3, [r7, #12]
 8003d8a:	689a      	ldr	r2, [r3, #8]
 8003d8c:	2380      	movs	r3, #128	@ 0x80
 8003d8e:	021b      	lsls	r3, r3, #8
 8003d90:	429a      	cmp	r2, r3
 8003d92:	d110      	bne.n	8003db6 <HAL_SPI_Transmit+0xe2>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8003d94:	68fb      	ldr	r3, [r7, #12]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	681a      	ldr	r2, [r3, #0]
 8003d9a:	68fb      	ldr	r3, [r7, #12]
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	2140      	movs	r1, #64	@ 0x40
 8003da0:	438a      	bics	r2, r1
 8003da2:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	681a      	ldr	r2, [r3, #0]
 8003daa:	68fb      	ldr	r3, [r7, #12]
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	2180      	movs	r1, #128	@ 0x80
 8003db0:	01c9      	lsls	r1, r1, #7
 8003db2:	430a      	orrs	r2, r1
 8003db4:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	2240      	movs	r2, #64	@ 0x40
 8003dbe:	4013      	ands	r3, r2
 8003dc0:	2b40      	cmp	r3, #64	@ 0x40
 8003dc2:	d007      	beq.n	8003dd4 <HAL_SPI_Transmit+0x100>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	681a      	ldr	r2, [r3, #0]
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	2140      	movs	r1, #64	@ 0x40
 8003dd0:	430a      	orrs	r2, r1
 8003dd2:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8003dd4:	68fb      	ldr	r3, [r7, #12]
 8003dd6:	68da      	ldr	r2, [r3, #12]
 8003dd8:	23e0      	movs	r3, #224	@ 0xe0
 8003dda:	00db      	lsls	r3, r3, #3
 8003ddc:	429a      	cmp	r2, r3
 8003dde:	d952      	bls.n	8003e86 <HAL_SPI_Transmit+0x1b2>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8003de0:	68fb      	ldr	r3, [r7, #12]
 8003de2:	685b      	ldr	r3, [r3, #4]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d004      	beq.n	8003df2 <HAL_SPI_Transmit+0x11e>
 8003de8:	2316      	movs	r3, #22
 8003dea:	18fb      	adds	r3, r7, r3
 8003dec:	881b      	ldrh	r3, [r3, #0]
 8003dee:	2b01      	cmp	r3, #1
 8003df0:	d143      	bne.n	8003e7a <HAL_SPI_Transmit+0x1a6>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8003df2:	68fb      	ldr	r3, [r7, #12]
 8003df4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003df6:	881a      	ldrh	r2, [r3, #0]
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003e02:	1c9a      	adds	r2, r3, #2
 8003e04:	68fb      	ldr	r3, [r7, #12]
 8003e06:	639a      	str	r2, [r3, #56]	@ 0x38
      hspi->TxXferCount--;
 8003e08:	68fb      	ldr	r3, [r7, #12]
 8003e0a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003e0c:	b29b      	uxth	r3, r3
 8003e0e:	3b01      	subs	r3, #1
 8003e10:	b29a      	uxth	r2, r3
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	87da      	strh	r2, [r3, #62]	@ 0x3e
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8003e16:	e030      	b.n	8003e7a <HAL_SPI_Transmit+0x1a6>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8003e18:	68fb      	ldr	r3, [r7, #12]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	689b      	ldr	r3, [r3, #8]
 8003e1e:	2202      	movs	r2, #2
 8003e20:	4013      	ands	r3, r2
 8003e22:	2b02      	cmp	r3, #2
 8003e24:	d112      	bne.n	8003e4c <HAL_SPI_Transmit+0x178>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8003e26:	68fb      	ldr	r3, [r7, #12]
 8003e28:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003e2a:	881a      	ldrh	r2, [r3, #0]
 8003e2c:	68fb      	ldr	r3, [r7, #12]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8003e32:	68fb      	ldr	r3, [r7, #12]
 8003e34:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003e36:	1c9a      	adds	r2, r3, #2
 8003e38:	68fb      	ldr	r3, [r7, #12]
 8003e3a:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount--;
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003e40:	b29b      	uxth	r3, r3
 8003e42:	3b01      	subs	r3, #1
 8003e44:	b29a      	uxth	r2, r3
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003e4a:	e016      	b.n	8003e7a <HAL_SPI_Transmit+0x1a6>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8003e4c:	f7fe ffdc 	bl	8002e08 <HAL_GetTick>
 8003e50:	0002      	movs	r2, r0
 8003e52:	69bb      	ldr	r3, [r7, #24]
 8003e54:	1ad3      	subs	r3, r2, r3
 8003e56:	683a      	ldr	r2, [r7, #0]
 8003e58:	429a      	cmp	r2, r3
 8003e5a:	d802      	bhi.n	8003e62 <HAL_SPI_Transmit+0x18e>
 8003e5c:	683b      	ldr	r3, [r7, #0]
 8003e5e:	3301      	adds	r3, #1
 8003e60:	d102      	bne.n	8003e68 <HAL_SPI_Transmit+0x194>
 8003e62:	683b      	ldr	r3, [r7, #0]
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d108      	bne.n	8003e7a <HAL_SPI_Transmit+0x1a6>
        {
          errorcode = HAL_TIMEOUT;
 8003e68:	231f      	movs	r3, #31
 8003e6a:	18fb      	adds	r3, r7, r3
 8003e6c:	2203      	movs	r2, #3
 8003e6e:	701a      	strb	r2, [r3, #0]
          hspi->State = HAL_SPI_STATE_READY;
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	225d      	movs	r2, #93	@ 0x5d
 8003e74:	2101      	movs	r1, #1
 8003e76:	5499      	strb	r1, [r3, r2]
          goto error;
 8003e78:	e080      	b.n	8003f7c <HAL_SPI_Transmit+0x2a8>
    while (hspi->TxXferCount > 0U)
 8003e7a:	68fb      	ldr	r3, [r7, #12]
 8003e7c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003e7e:	b29b      	uxth	r3, r3
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	d1c9      	bne.n	8003e18 <HAL_SPI_Transmit+0x144>
 8003e84:	e053      	b.n	8003f2e <HAL_SPI_Transmit+0x25a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8003e86:	68fb      	ldr	r3, [r7, #12]
 8003e88:	685b      	ldr	r3, [r3, #4]
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d004      	beq.n	8003e98 <HAL_SPI_Transmit+0x1c4>
 8003e8e:	2316      	movs	r3, #22
 8003e90:	18fb      	adds	r3, r7, r3
 8003e92:	881b      	ldrh	r3, [r3, #0]
 8003e94:	2b01      	cmp	r3, #1
 8003e96:	d145      	bne.n	8003f24 <HAL_SPI_Transmit+0x250>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	330c      	adds	r3, #12
 8003ea2:	7812      	ldrb	r2, [r2, #0]
 8003ea4:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003eaa:	1c5a      	adds	r2, r3, #1
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	639a      	str	r2, [r3, #56]	@ 0x38
      hspi->TxXferCount--;
 8003eb0:	68fb      	ldr	r3, [r7, #12]
 8003eb2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003eb4:	b29b      	uxth	r3, r3
 8003eb6:	3b01      	subs	r3, #1
 8003eb8:	b29a      	uxth	r2, r3
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	87da      	strh	r2, [r3, #62]	@ 0x3e
    }
    while (hspi->TxXferCount > 0U)
 8003ebe:	e031      	b.n	8003f24 <HAL_SPI_Transmit+0x250>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	689b      	ldr	r3, [r3, #8]
 8003ec6:	2202      	movs	r2, #2
 8003ec8:	4013      	ands	r3, r2
 8003eca:	2b02      	cmp	r3, #2
 8003ecc:	d113      	bne.n	8003ef6 <HAL_SPI_Transmit+0x222>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	330c      	adds	r3, #12
 8003ed8:	7812      	ldrb	r2, [r2, #0]
 8003eda:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003ee0:	1c5a      	adds	r2, r3, #1
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount--;
 8003ee6:	68fb      	ldr	r3, [r7, #12]
 8003ee8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003eea:	b29b      	uxth	r3, r3
 8003eec:	3b01      	subs	r3, #1
 8003eee:	b29a      	uxth	r2, r3
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003ef4:	e016      	b.n	8003f24 <HAL_SPI_Transmit+0x250>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8003ef6:	f7fe ff87 	bl	8002e08 <HAL_GetTick>
 8003efa:	0002      	movs	r2, r0
 8003efc:	69bb      	ldr	r3, [r7, #24]
 8003efe:	1ad3      	subs	r3, r2, r3
 8003f00:	683a      	ldr	r2, [r7, #0]
 8003f02:	429a      	cmp	r2, r3
 8003f04:	d802      	bhi.n	8003f0c <HAL_SPI_Transmit+0x238>
 8003f06:	683b      	ldr	r3, [r7, #0]
 8003f08:	3301      	adds	r3, #1
 8003f0a:	d102      	bne.n	8003f12 <HAL_SPI_Transmit+0x23e>
 8003f0c:	683b      	ldr	r3, [r7, #0]
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d108      	bne.n	8003f24 <HAL_SPI_Transmit+0x250>
        {
          errorcode = HAL_TIMEOUT;
 8003f12:	231f      	movs	r3, #31
 8003f14:	18fb      	adds	r3, r7, r3
 8003f16:	2203      	movs	r2, #3
 8003f18:	701a      	strb	r2, [r3, #0]
          hspi->State = HAL_SPI_STATE_READY;
 8003f1a:	68fb      	ldr	r3, [r7, #12]
 8003f1c:	225d      	movs	r2, #93	@ 0x5d
 8003f1e:	2101      	movs	r1, #1
 8003f20:	5499      	strb	r1, [r3, r2]
          goto error;
 8003f22:	e02b      	b.n	8003f7c <HAL_SPI_Transmit+0x2a8>
    while (hspi->TxXferCount > 0U)
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003f28:	b29b      	uxth	r3, r3
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	d1c8      	bne.n	8003ec0 <HAL_SPI_Transmit+0x1ec>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8003f2e:	69ba      	ldr	r2, [r7, #24]
 8003f30:	6839      	ldr	r1, [r7, #0]
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	0018      	movs	r0, r3
 8003f36:	f000 f95d 	bl	80041f4 <SPI_EndRxTxTransaction>
 8003f3a:	1e03      	subs	r3, r0, #0
 8003f3c:	d002      	beq.n	8003f44 <HAL_SPI_Transmit+0x270>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	2220      	movs	r2, #32
 8003f42:	661a      	str	r2, [r3, #96]	@ 0x60
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	689b      	ldr	r3, [r3, #8]
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d10a      	bne.n	8003f62 <HAL_SPI_Transmit+0x28e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8003f4c:	2300      	movs	r3, #0
 8003f4e:	613b      	str	r3, [r7, #16]
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	68db      	ldr	r3, [r3, #12]
 8003f56:	613b      	str	r3, [r7, #16]
 8003f58:	68fb      	ldr	r3, [r7, #12]
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	689b      	ldr	r3, [r3, #8]
 8003f5e:	613b      	str	r3, [r7, #16]
 8003f60:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8003f62:	68fb      	ldr	r3, [r7, #12]
 8003f64:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	d004      	beq.n	8003f74 <HAL_SPI_Transmit+0x2a0>
  {
    errorcode = HAL_ERROR;
 8003f6a:	231f      	movs	r3, #31
 8003f6c:	18fb      	adds	r3, r7, r3
 8003f6e:	2201      	movs	r2, #1
 8003f70:	701a      	strb	r2, [r3, #0]
 8003f72:	e003      	b.n	8003f7c <HAL_SPI_Transmit+0x2a8>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	225d      	movs	r2, #93	@ 0x5d
 8003f78:	2101      	movs	r1, #1
 8003f7a:	5499      	strb	r1, [r3, r2]
  }

error:
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	225c      	movs	r2, #92	@ 0x5c
 8003f80:	2100      	movs	r1, #0
 8003f82:	5499      	strb	r1, [r3, r2]
  return errorcode;
 8003f84:	231f      	movs	r3, #31
 8003f86:	18fb      	adds	r3, r7, r3
 8003f88:	781b      	ldrb	r3, [r3, #0]
}
 8003f8a:	0018      	movs	r0, r3
 8003f8c:	46bd      	mov	sp, r7
 8003f8e:	b008      	add	sp, #32
 8003f90:	bd80      	pop	{r7, pc}
	...

08003f94 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8003f94:	b580      	push	{r7, lr}
 8003f96:	b088      	sub	sp, #32
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	60f8      	str	r0, [r7, #12]
 8003f9c:	60b9      	str	r1, [r7, #8]
 8003f9e:	603b      	str	r3, [r7, #0]
 8003fa0:	1dfb      	adds	r3, r7, #7
 8003fa2:	701a      	strb	r2, [r3, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8003fa4:	f7fe ff30 	bl	8002e08 <HAL_GetTick>
 8003fa8:	0002      	movs	r2, r0
 8003faa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003fac:	1a9b      	subs	r3, r3, r2
 8003fae:	683a      	ldr	r2, [r7, #0]
 8003fb0:	18d3      	adds	r3, r2, r3
 8003fb2:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8003fb4:	f7fe ff28 	bl	8002e08 <HAL_GetTick>
 8003fb8:	0003      	movs	r3, r0
 8003fba:	61bb      	str	r3, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8003fbc:	4b3a      	ldr	r3, [pc, #232]	@ (80040a8 <SPI_WaitFlagStateUntilTimeout+0x114>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	015b      	lsls	r3, r3, #5
 8003fc2:	0d1b      	lsrs	r3, r3, #20
 8003fc4:	69fa      	ldr	r2, [r7, #28]
 8003fc6:	4353      	muls	r3, r2
 8003fc8:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8003fca:	e058      	b.n	800407e <SPI_WaitFlagStateUntilTimeout+0xea>
  {
    if (Timeout != HAL_MAX_DELAY)
 8003fcc:	683b      	ldr	r3, [r7, #0]
 8003fce:	3301      	adds	r3, #1
 8003fd0:	d055      	beq.n	800407e <SPI_WaitFlagStateUntilTimeout+0xea>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8003fd2:	f7fe ff19 	bl	8002e08 <HAL_GetTick>
 8003fd6:	0002      	movs	r2, r0
 8003fd8:	69bb      	ldr	r3, [r7, #24]
 8003fda:	1ad3      	subs	r3, r2, r3
 8003fdc:	69fa      	ldr	r2, [r7, #28]
 8003fde:	429a      	cmp	r2, r3
 8003fe0:	d902      	bls.n	8003fe8 <SPI_WaitFlagStateUntilTimeout+0x54>
 8003fe2:	69fb      	ldr	r3, [r7, #28]
 8003fe4:	2b00      	cmp	r3, #0
 8003fe6:	d142      	bne.n	800406e <SPI_WaitFlagStateUntilTimeout+0xda>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	685a      	ldr	r2, [r3, #4]
 8003fee:	68fb      	ldr	r3, [r7, #12]
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	21e0      	movs	r1, #224	@ 0xe0
 8003ff4:	438a      	bics	r2, r1
 8003ff6:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	685a      	ldr	r2, [r3, #4]
 8003ffc:	2382      	movs	r3, #130	@ 0x82
 8003ffe:	005b      	lsls	r3, r3, #1
 8004000:	429a      	cmp	r2, r3
 8004002:	d113      	bne.n	800402c <SPI_WaitFlagStateUntilTimeout+0x98>
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	689a      	ldr	r2, [r3, #8]
 8004008:	2380      	movs	r3, #128	@ 0x80
 800400a:	021b      	lsls	r3, r3, #8
 800400c:	429a      	cmp	r2, r3
 800400e:	d005      	beq.n	800401c <SPI_WaitFlagStateUntilTimeout+0x88>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	689a      	ldr	r2, [r3, #8]
 8004014:	2380      	movs	r3, #128	@ 0x80
 8004016:	00db      	lsls	r3, r3, #3
 8004018:	429a      	cmp	r2, r3
 800401a:	d107      	bne.n	800402c <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	681a      	ldr	r2, [r3, #0]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	2140      	movs	r1, #64	@ 0x40
 8004028:	438a      	bics	r2, r1
 800402a:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004030:	2380      	movs	r3, #128	@ 0x80
 8004032:	019b      	lsls	r3, r3, #6
 8004034:	429a      	cmp	r2, r3
 8004036:	d110      	bne.n	800405a <SPI_WaitFlagStateUntilTimeout+0xc6>
        {
          SPI_RESET_CRC(hspi);
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	681b      	ldr	r3, [r3, #0]
 800403c:	681a      	ldr	r2, [r3, #0]
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	491a      	ldr	r1, [pc, #104]	@ (80040ac <SPI_WaitFlagStateUntilTimeout+0x118>)
 8004044:	400a      	ands	r2, r1
 8004046:	601a      	str	r2, [r3, #0]
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	681b      	ldr	r3, [r3, #0]
 800404c:	681a      	ldr	r2, [r3, #0]
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	2180      	movs	r1, #128	@ 0x80
 8004054:	0189      	lsls	r1, r1, #6
 8004056:	430a      	orrs	r2, r1
 8004058:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	225d      	movs	r2, #93	@ 0x5d
 800405e:	2101      	movs	r1, #1
 8004060:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	225c      	movs	r2, #92	@ 0x5c
 8004066:	2100      	movs	r1, #0
 8004068:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 800406a:	2303      	movs	r3, #3
 800406c:	e017      	b.n	800409e <SPI_WaitFlagStateUntilTimeout+0x10a>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 800406e:	697b      	ldr	r3, [r7, #20]
 8004070:	2b00      	cmp	r3, #0
 8004072:	d101      	bne.n	8004078 <SPI_WaitFlagStateUntilTimeout+0xe4>
      {
        tmp_timeout = 0U;
 8004074:	2300      	movs	r3, #0
 8004076:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8004078:	697b      	ldr	r3, [r7, #20]
 800407a:	3b01      	subs	r3, #1
 800407c:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	689b      	ldr	r3, [r3, #8]
 8004084:	68ba      	ldr	r2, [r7, #8]
 8004086:	4013      	ands	r3, r2
 8004088:	68ba      	ldr	r2, [r7, #8]
 800408a:	1ad3      	subs	r3, r2, r3
 800408c:	425a      	negs	r2, r3
 800408e:	4153      	adcs	r3, r2
 8004090:	b2db      	uxtb	r3, r3
 8004092:	001a      	movs	r2, r3
 8004094:	1dfb      	adds	r3, r7, #7
 8004096:	781b      	ldrb	r3, [r3, #0]
 8004098:	429a      	cmp	r2, r3
 800409a:	d197      	bne.n	8003fcc <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 800409c:	2300      	movs	r3, #0
}
 800409e:	0018      	movs	r0, r3
 80040a0:	46bd      	mov	sp, r7
 80040a2:	b008      	add	sp, #32
 80040a4:	bd80      	pop	{r7, pc}
 80040a6:	46c0      	nop			@ (mov r8, r8)
 80040a8:	20000020 	.word	0x20000020
 80040ac:	ffffdfff 	.word	0xffffdfff

080040b0 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80040b0:	b580      	push	{r7, lr}
 80040b2:	b08a      	sub	sp, #40	@ 0x28
 80040b4:	af00      	add	r7, sp, #0
 80040b6:	60f8      	str	r0, [r7, #12]
 80040b8:	60b9      	str	r1, [r7, #8]
 80040ba:	607a      	str	r2, [r7, #4]
 80040bc:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 80040be:	2317      	movs	r3, #23
 80040c0:	18fb      	adds	r3, r7, r3
 80040c2:	2200      	movs	r2, #0
 80040c4:	701a      	strb	r2, [r3, #0]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 80040c6:	f7fe fe9f 	bl	8002e08 <HAL_GetTick>
 80040ca:	0002      	movs	r2, r0
 80040cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80040ce:	1a9b      	subs	r3, r3, r2
 80040d0:	683a      	ldr	r2, [r7, #0]
 80040d2:	18d3      	adds	r3, r2, r3
 80040d4:	627b      	str	r3, [r7, #36]	@ 0x24
  tmp_tickstart = HAL_GetTick();
 80040d6:	f7fe fe97 	bl	8002e08 <HAL_GetTick>
 80040da:	0003      	movs	r3, r0
 80040dc:	623b      	str	r3, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	330c      	adds	r3, #12
 80040e4:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 80040e6:	4b41      	ldr	r3, [pc, #260]	@ (80041ec <SPI_WaitFifoStateUntilTimeout+0x13c>)
 80040e8:	681a      	ldr	r2, [r3, #0]
 80040ea:	0013      	movs	r3, r2
 80040ec:	009b      	lsls	r3, r3, #2
 80040ee:	189b      	adds	r3, r3, r2
 80040f0:	00da      	lsls	r2, r3, #3
 80040f2:	1ad3      	subs	r3, r2, r3
 80040f4:	0d1b      	lsrs	r3, r3, #20
 80040f6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80040f8:	4353      	muls	r3, r2
 80040fa:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 80040fc:	e068      	b.n	80041d0 <SPI_WaitFifoStateUntilTimeout+0x120>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 80040fe:	68ba      	ldr	r2, [r7, #8]
 8004100:	23c0      	movs	r3, #192	@ 0xc0
 8004102:	00db      	lsls	r3, r3, #3
 8004104:	429a      	cmp	r2, r3
 8004106:	d10a      	bne.n	800411e <SPI_WaitFifoStateUntilTimeout+0x6e>
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	2b00      	cmp	r3, #0
 800410c:	d107      	bne.n	800411e <SPI_WaitFifoStateUntilTimeout+0x6e>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 800410e:	69fb      	ldr	r3, [r7, #28]
 8004110:	781b      	ldrb	r3, [r3, #0]
 8004112:	b2da      	uxtb	r2, r3
 8004114:	2117      	movs	r1, #23
 8004116:	187b      	adds	r3, r7, r1
 8004118:	701a      	strb	r2, [r3, #0]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 800411a:	187b      	adds	r3, r7, r1
 800411c:	781b      	ldrb	r3, [r3, #0]
    }

    if (Timeout != HAL_MAX_DELAY)
 800411e:	683b      	ldr	r3, [r7, #0]
 8004120:	3301      	adds	r3, #1
 8004122:	d055      	beq.n	80041d0 <SPI_WaitFifoStateUntilTimeout+0x120>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8004124:	f7fe fe70 	bl	8002e08 <HAL_GetTick>
 8004128:	0002      	movs	r2, r0
 800412a:	6a3b      	ldr	r3, [r7, #32]
 800412c:	1ad3      	subs	r3, r2, r3
 800412e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004130:	429a      	cmp	r2, r3
 8004132:	d902      	bls.n	800413a <SPI_WaitFifoStateUntilTimeout+0x8a>
 8004134:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004136:	2b00      	cmp	r3, #0
 8004138:	d142      	bne.n	80041c0 <SPI_WaitFifoStateUntilTimeout+0x110>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800413a:	68fb      	ldr	r3, [r7, #12]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	685a      	ldr	r2, [r3, #4]
 8004140:	68fb      	ldr	r3, [r7, #12]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	21e0      	movs	r1, #224	@ 0xe0
 8004146:	438a      	bics	r2, r1
 8004148:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800414a:	68fb      	ldr	r3, [r7, #12]
 800414c:	685a      	ldr	r2, [r3, #4]
 800414e:	2382      	movs	r3, #130	@ 0x82
 8004150:	005b      	lsls	r3, r3, #1
 8004152:	429a      	cmp	r2, r3
 8004154:	d113      	bne.n	800417e <SPI_WaitFifoStateUntilTimeout+0xce>
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	689a      	ldr	r2, [r3, #8]
 800415a:	2380      	movs	r3, #128	@ 0x80
 800415c:	021b      	lsls	r3, r3, #8
 800415e:	429a      	cmp	r2, r3
 8004160:	d005      	beq.n	800416e <SPI_WaitFifoStateUntilTimeout+0xbe>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004162:	68fb      	ldr	r3, [r7, #12]
 8004164:	689a      	ldr	r2, [r3, #8]
 8004166:	2380      	movs	r3, #128	@ 0x80
 8004168:	00db      	lsls	r3, r3, #3
 800416a:	429a      	cmp	r2, r3
 800416c:	d107      	bne.n	800417e <SPI_WaitFifoStateUntilTimeout+0xce>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	681a      	ldr	r2, [r3, #0]
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	681b      	ldr	r3, [r3, #0]
 8004178:	2140      	movs	r1, #64	@ 0x40
 800417a:	438a      	bics	r2, r1
 800417c:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800417e:	68fb      	ldr	r3, [r7, #12]
 8004180:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004182:	2380      	movs	r3, #128	@ 0x80
 8004184:	019b      	lsls	r3, r3, #6
 8004186:	429a      	cmp	r2, r3
 8004188:	d110      	bne.n	80041ac <SPI_WaitFifoStateUntilTimeout+0xfc>
        {
          SPI_RESET_CRC(hspi);
 800418a:	68fb      	ldr	r3, [r7, #12]
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	681a      	ldr	r2, [r3, #0]
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	4916      	ldr	r1, [pc, #88]	@ (80041f0 <SPI_WaitFifoStateUntilTimeout+0x140>)
 8004196:	400a      	ands	r2, r1
 8004198:	601a      	str	r2, [r3, #0]
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	681a      	ldr	r2, [r3, #0]
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	2180      	movs	r1, #128	@ 0x80
 80041a6:	0189      	lsls	r1, r1, #6
 80041a8:	430a      	orrs	r2, r1
 80041aa:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	225d      	movs	r2, #93	@ 0x5d
 80041b0:	2101      	movs	r1, #1
 80041b2:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	225c      	movs	r2, #92	@ 0x5c
 80041b8:	2100      	movs	r1, #0
 80041ba:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 80041bc:	2303      	movs	r3, #3
 80041be:	e010      	b.n	80041e2 <SPI_WaitFifoStateUntilTimeout+0x132>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 80041c0:	69bb      	ldr	r3, [r7, #24]
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d101      	bne.n	80041ca <SPI_WaitFifoStateUntilTimeout+0x11a>
      {
        tmp_timeout = 0U;
 80041c6:	2300      	movs	r3, #0
 80041c8:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      count--;
 80041ca:	69bb      	ldr	r3, [r7, #24]
 80041cc:	3b01      	subs	r3, #1
 80041ce:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	689b      	ldr	r3, [r3, #8]
 80041d6:	68ba      	ldr	r2, [r7, #8]
 80041d8:	4013      	ands	r3, r2
 80041da:	687a      	ldr	r2, [r7, #4]
 80041dc:	429a      	cmp	r2, r3
 80041de:	d18e      	bne.n	80040fe <SPI_WaitFifoStateUntilTimeout+0x4e>
    }
  }

  return HAL_OK;
 80041e0:	2300      	movs	r3, #0
}
 80041e2:	0018      	movs	r0, r3
 80041e4:	46bd      	mov	sp, r7
 80041e6:	b00a      	add	sp, #40	@ 0x28
 80041e8:	bd80      	pop	{r7, pc}
 80041ea:	46c0      	nop			@ (mov r8, r8)
 80041ec:	20000020 	.word	0x20000020
 80041f0:	ffffdfff 	.word	0xffffdfff

080041f4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80041f4:	b580      	push	{r7, lr}
 80041f6:	b086      	sub	sp, #24
 80041f8:	af02      	add	r7, sp, #8
 80041fa:	60f8      	str	r0, [r7, #12]
 80041fc:	60b9      	str	r1, [r7, #8]
 80041fe:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8004200:	68ba      	ldr	r2, [r7, #8]
 8004202:	23c0      	movs	r3, #192	@ 0xc0
 8004204:	0159      	lsls	r1, r3, #5
 8004206:	68f8      	ldr	r0, [r7, #12]
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	9300      	str	r3, [sp, #0]
 800420c:	0013      	movs	r3, r2
 800420e:	2200      	movs	r2, #0
 8004210:	f7ff ff4e 	bl	80040b0 <SPI_WaitFifoStateUntilTimeout>
 8004214:	1e03      	subs	r3, r0, #0
 8004216:	d007      	beq.n	8004228 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800421c:	2220      	movs	r2, #32
 800421e:	431a      	orrs	r2, r3
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 8004224:	2303      	movs	r3, #3
 8004226:	e027      	b.n	8004278 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8004228:	68ba      	ldr	r2, [r7, #8]
 800422a:	68f8      	ldr	r0, [r7, #12]
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	9300      	str	r3, [sp, #0]
 8004230:	0013      	movs	r3, r2
 8004232:	2200      	movs	r2, #0
 8004234:	2180      	movs	r1, #128	@ 0x80
 8004236:	f7ff fead 	bl	8003f94 <SPI_WaitFlagStateUntilTimeout>
 800423a:	1e03      	subs	r3, r0, #0
 800423c:	d007      	beq.n	800424e <SPI_EndRxTxTransaction+0x5a>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004242:	2220      	movs	r2, #32
 8004244:	431a      	orrs	r2, r3
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 800424a:	2303      	movs	r3, #3
 800424c:	e014      	b.n	8004278 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 800424e:	68ba      	ldr	r2, [r7, #8]
 8004250:	23c0      	movs	r3, #192	@ 0xc0
 8004252:	00d9      	lsls	r1, r3, #3
 8004254:	68f8      	ldr	r0, [r7, #12]
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	9300      	str	r3, [sp, #0]
 800425a:	0013      	movs	r3, r2
 800425c:	2200      	movs	r2, #0
 800425e:	f7ff ff27 	bl	80040b0 <SPI_WaitFifoStateUntilTimeout>
 8004262:	1e03      	subs	r3, r0, #0
 8004264:	d007      	beq.n	8004276 <SPI_EndRxTxTransaction+0x82>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004266:	68fb      	ldr	r3, [r7, #12]
 8004268:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800426a:	2220      	movs	r2, #32
 800426c:	431a      	orrs	r2, r3
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 8004272:	2303      	movs	r3, #3
 8004274:	e000      	b.n	8004278 <SPI_EndRxTxTransaction+0x84>
  }

  return HAL_OK;
 8004276:	2300      	movs	r3, #0
}
 8004278:	0018      	movs	r0, r3
 800427a:	46bd      	mov	sp, r7
 800427c:	b004      	add	sp, #16
 800427e:	bd80      	pop	{r7, pc}

08004280 <__cvt>:
 8004280:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004282:	001f      	movs	r7, r3
 8004284:	2300      	movs	r3, #0
 8004286:	0016      	movs	r6, r2
 8004288:	b08b      	sub	sp, #44	@ 0x2c
 800428a:	429f      	cmp	r7, r3
 800428c:	da04      	bge.n	8004298 <__cvt+0x18>
 800428e:	2180      	movs	r1, #128	@ 0x80
 8004290:	0609      	lsls	r1, r1, #24
 8004292:	187b      	adds	r3, r7, r1
 8004294:	001f      	movs	r7, r3
 8004296:	232d      	movs	r3, #45	@ 0x2d
 8004298:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800429a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800429c:	7013      	strb	r3, [r2, #0]
 800429e:	2320      	movs	r3, #32
 80042a0:	2203      	movs	r2, #3
 80042a2:	439d      	bics	r5, r3
 80042a4:	2d46      	cmp	r5, #70	@ 0x46
 80042a6:	d007      	beq.n	80042b8 <__cvt+0x38>
 80042a8:	002b      	movs	r3, r5
 80042aa:	3b45      	subs	r3, #69	@ 0x45
 80042ac:	4259      	negs	r1, r3
 80042ae:	414b      	adcs	r3, r1
 80042b0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80042b2:	3a01      	subs	r2, #1
 80042b4:	18cb      	adds	r3, r1, r3
 80042b6:	9310      	str	r3, [sp, #64]	@ 0x40
 80042b8:	ab09      	add	r3, sp, #36	@ 0x24
 80042ba:	9304      	str	r3, [sp, #16]
 80042bc:	ab08      	add	r3, sp, #32
 80042be:	9303      	str	r3, [sp, #12]
 80042c0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80042c2:	9200      	str	r2, [sp, #0]
 80042c4:	9302      	str	r3, [sp, #8]
 80042c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80042c8:	0032      	movs	r2, r6
 80042ca:	9301      	str	r3, [sp, #4]
 80042cc:	003b      	movs	r3, r7
 80042ce:	f000 fe69 	bl	8004fa4 <_dtoa_r>
 80042d2:	0004      	movs	r4, r0
 80042d4:	2d47      	cmp	r5, #71	@ 0x47
 80042d6:	d11b      	bne.n	8004310 <__cvt+0x90>
 80042d8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80042da:	07db      	lsls	r3, r3, #31
 80042dc:	d511      	bpl.n	8004302 <__cvt+0x82>
 80042de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80042e0:	18c3      	adds	r3, r0, r3
 80042e2:	9307      	str	r3, [sp, #28]
 80042e4:	2200      	movs	r2, #0
 80042e6:	2300      	movs	r3, #0
 80042e8:	0030      	movs	r0, r6
 80042ea:	0039      	movs	r1, r7
 80042ec:	f7fc f8ae 	bl	800044c <__aeabi_dcmpeq>
 80042f0:	2800      	cmp	r0, #0
 80042f2:	d001      	beq.n	80042f8 <__cvt+0x78>
 80042f4:	9b07      	ldr	r3, [sp, #28]
 80042f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80042f8:	2230      	movs	r2, #48	@ 0x30
 80042fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80042fc:	9907      	ldr	r1, [sp, #28]
 80042fe:	428b      	cmp	r3, r1
 8004300:	d320      	bcc.n	8004344 <__cvt+0xc4>
 8004302:	0020      	movs	r0, r4
 8004304:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004306:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8004308:	1b1b      	subs	r3, r3, r4
 800430a:	6013      	str	r3, [r2, #0]
 800430c:	b00b      	add	sp, #44	@ 0x2c
 800430e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004310:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004312:	18c3      	adds	r3, r0, r3
 8004314:	9307      	str	r3, [sp, #28]
 8004316:	2d46      	cmp	r5, #70	@ 0x46
 8004318:	d1e4      	bne.n	80042e4 <__cvt+0x64>
 800431a:	7803      	ldrb	r3, [r0, #0]
 800431c:	2b30      	cmp	r3, #48	@ 0x30
 800431e:	d10c      	bne.n	800433a <__cvt+0xba>
 8004320:	2200      	movs	r2, #0
 8004322:	2300      	movs	r3, #0
 8004324:	0030      	movs	r0, r6
 8004326:	0039      	movs	r1, r7
 8004328:	f7fc f890 	bl	800044c <__aeabi_dcmpeq>
 800432c:	2800      	cmp	r0, #0
 800432e:	d104      	bne.n	800433a <__cvt+0xba>
 8004330:	2301      	movs	r3, #1
 8004332:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8004334:	1a9b      	subs	r3, r3, r2
 8004336:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8004338:	6013      	str	r3, [r2, #0]
 800433a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800433c:	9a07      	ldr	r2, [sp, #28]
 800433e:	681b      	ldr	r3, [r3, #0]
 8004340:	18d3      	adds	r3, r2, r3
 8004342:	e7ce      	b.n	80042e2 <__cvt+0x62>
 8004344:	1c59      	adds	r1, r3, #1
 8004346:	9109      	str	r1, [sp, #36]	@ 0x24
 8004348:	701a      	strb	r2, [r3, #0]
 800434a:	e7d6      	b.n	80042fa <__cvt+0x7a>

0800434c <__exponent>:
 800434c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800434e:	232b      	movs	r3, #43	@ 0x2b
 8004350:	0005      	movs	r5, r0
 8004352:	000c      	movs	r4, r1
 8004354:	b085      	sub	sp, #20
 8004356:	7002      	strb	r2, [r0, #0]
 8004358:	2900      	cmp	r1, #0
 800435a:	da01      	bge.n	8004360 <__exponent+0x14>
 800435c:	424c      	negs	r4, r1
 800435e:	3302      	adds	r3, #2
 8004360:	706b      	strb	r3, [r5, #1]
 8004362:	2c09      	cmp	r4, #9
 8004364:	dd2c      	ble.n	80043c0 <__exponent+0x74>
 8004366:	ab02      	add	r3, sp, #8
 8004368:	1dde      	adds	r6, r3, #7
 800436a:	0020      	movs	r0, r4
 800436c:	210a      	movs	r1, #10
 800436e:	f7fc f857 	bl	8000420 <__aeabi_idivmod>
 8004372:	0037      	movs	r7, r6
 8004374:	3130      	adds	r1, #48	@ 0x30
 8004376:	3e01      	subs	r6, #1
 8004378:	0020      	movs	r0, r4
 800437a:	7031      	strb	r1, [r6, #0]
 800437c:	210a      	movs	r1, #10
 800437e:	9401      	str	r4, [sp, #4]
 8004380:	f7fb ff68 	bl	8000254 <__divsi3>
 8004384:	9b01      	ldr	r3, [sp, #4]
 8004386:	0004      	movs	r4, r0
 8004388:	2b63      	cmp	r3, #99	@ 0x63
 800438a:	dcee      	bgt.n	800436a <__exponent+0x1e>
 800438c:	1eba      	subs	r2, r7, #2
 800438e:	1ca8      	adds	r0, r5, #2
 8004390:	0001      	movs	r1, r0
 8004392:	0013      	movs	r3, r2
 8004394:	3430      	adds	r4, #48	@ 0x30
 8004396:	7014      	strb	r4, [r2, #0]
 8004398:	ac02      	add	r4, sp, #8
 800439a:	3407      	adds	r4, #7
 800439c:	429c      	cmp	r4, r3
 800439e:	d80a      	bhi.n	80043b6 <__exponent+0x6a>
 80043a0:	2300      	movs	r3, #0
 80043a2:	42a2      	cmp	r2, r4
 80043a4:	d803      	bhi.n	80043ae <__exponent+0x62>
 80043a6:	3309      	adds	r3, #9
 80043a8:	aa02      	add	r2, sp, #8
 80043aa:	189b      	adds	r3, r3, r2
 80043ac:	1bdb      	subs	r3, r3, r7
 80043ae:	18c0      	adds	r0, r0, r3
 80043b0:	1b40      	subs	r0, r0, r5
 80043b2:	b005      	add	sp, #20
 80043b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043b6:	781c      	ldrb	r4, [r3, #0]
 80043b8:	3301      	adds	r3, #1
 80043ba:	700c      	strb	r4, [r1, #0]
 80043bc:	3101      	adds	r1, #1
 80043be:	e7eb      	b.n	8004398 <__exponent+0x4c>
 80043c0:	2330      	movs	r3, #48	@ 0x30
 80043c2:	18e4      	adds	r4, r4, r3
 80043c4:	70ab      	strb	r3, [r5, #2]
 80043c6:	1d28      	adds	r0, r5, #4
 80043c8:	70ec      	strb	r4, [r5, #3]
 80043ca:	e7f1      	b.n	80043b0 <__exponent+0x64>

080043cc <_printf_float>:
 80043cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80043ce:	b097      	sub	sp, #92	@ 0x5c
 80043d0:	000d      	movs	r5, r1
 80043d2:	920a      	str	r2, [sp, #40]	@ 0x28
 80043d4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80043d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80043d8:	9009      	str	r0, [sp, #36]	@ 0x24
 80043da:	f000 fccb 	bl	8004d74 <_localeconv_r>
 80043de:	6803      	ldr	r3, [r0, #0]
 80043e0:	0018      	movs	r0, r3
 80043e2:	930d      	str	r3, [sp, #52]	@ 0x34
 80043e4:	f7fb fe90 	bl	8000108 <strlen>
 80043e8:	2300      	movs	r3, #0
 80043ea:	900f      	str	r0, [sp, #60]	@ 0x3c
 80043ec:	9314      	str	r3, [sp, #80]	@ 0x50
 80043ee:	7e2b      	ldrb	r3, [r5, #24]
 80043f0:	2207      	movs	r2, #7
 80043f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80043f4:	682b      	ldr	r3, [r5, #0]
 80043f6:	930e      	str	r3, [sp, #56]	@ 0x38
 80043f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80043fa:	6823      	ldr	r3, [r4, #0]
 80043fc:	05c9      	lsls	r1, r1, #23
 80043fe:	d545      	bpl.n	800448c <_printf_float+0xc0>
 8004400:	189b      	adds	r3, r3, r2
 8004402:	4393      	bics	r3, r2
 8004404:	001a      	movs	r2, r3
 8004406:	3208      	adds	r2, #8
 8004408:	6022      	str	r2, [r4, #0]
 800440a:	2201      	movs	r2, #1
 800440c:	681e      	ldr	r6, [r3, #0]
 800440e:	685f      	ldr	r7, [r3, #4]
 8004410:	007b      	lsls	r3, r7, #1
 8004412:	085b      	lsrs	r3, r3, #1
 8004414:	9311      	str	r3, [sp, #68]	@ 0x44
 8004416:	9610      	str	r6, [sp, #64]	@ 0x40
 8004418:	64ae      	str	r6, [r5, #72]	@ 0x48
 800441a:	64ef      	str	r7, [r5, #76]	@ 0x4c
 800441c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800441e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004420:	4ba7      	ldr	r3, [pc, #668]	@ (80046c0 <_printf_float+0x2f4>)
 8004422:	4252      	negs	r2, r2
 8004424:	f7fd fe4c 	bl	80020c0 <__aeabi_dcmpun>
 8004428:	2800      	cmp	r0, #0
 800442a:	d131      	bne.n	8004490 <_printf_float+0xc4>
 800442c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800442e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004430:	2201      	movs	r2, #1
 8004432:	4ba3      	ldr	r3, [pc, #652]	@ (80046c0 <_printf_float+0x2f4>)
 8004434:	4252      	negs	r2, r2
 8004436:	f7fc f819 	bl	800046c <__aeabi_dcmple>
 800443a:	2800      	cmp	r0, #0
 800443c:	d128      	bne.n	8004490 <_printf_float+0xc4>
 800443e:	2200      	movs	r2, #0
 8004440:	2300      	movs	r3, #0
 8004442:	0030      	movs	r0, r6
 8004444:	0039      	movs	r1, r7
 8004446:	f7fc f807 	bl	8000458 <__aeabi_dcmplt>
 800444a:	2800      	cmp	r0, #0
 800444c:	d003      	beq.n	8004456 <_printf_float+0x8a>
 800444e:	002b      	movs	r3, r5
 8004450:	222d      	movs	r2, #45	@ 0x2d
 8004452:	3343      	adds	r3, #67	@ 0x43
 8004454:	701a      	strb	r2, [r3, #0]
 8004456:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004458:	4f9a      	ldr	r7, [pc, #616]	@ (80046c4 <_printf_float+0x2f8>)
 800445a:	2b47      	cmp	r3, #71	@ 0x47
 800445c:	d900      	bls.n	8004460 <_printf_float+0x94>
 800445e:	4f9a      	ldr	r7, [pc, #616]	@ (80046c8 <_printf_float+0x2fc>)
 8004460:	2303      	movs	r3, #3
 8004462:	2400      	movs	r4, #0
 8004464:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004466:	612b      	str	r3, [r5, #16]
 8004468:	3301      	adds	r3, #1
 800446a:	439a      	bics	r2, r3
 800446c:	602a      	str	r2, [r5, #0]
 800446e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004470:	0029      	movs	r1, r5
 8004472:	9300      	str	r3, [sp, #0]
 8004474:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004476:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004478:	aa15      	add	r2, sp, #84	@ 0x54
 800447a:	f000 f9e5 	bl	8004848 <_printf_common>
 800447e:	3001      	adds	r0, #1
 8004480:	d000      	beq.n	8004484 <_printf_float+0xb8>
 8004482:	e09f      	b.n	80045c4 <_printf_float+0x1f8>
 8004484:	2001      	movs	r0, #1
 8004486:	4240      	negs	r0, r0
 8004488:	b017      	add	sp, #92	@ 0x5c
 800448a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800448c:	3307      	adds	r3, #7
 800448e:	e7b8      	b.n	8004402 <_printf_float+0x36>
 8004490:	0032      	movs	r2, r6
 8004492:	003b      	movs	r3, r7
 8004494:	0030      	movs	r0, r6
 8004496:	0039      	movs	r1, r7
 8004498:	f7fd fe12 	bl	80020c0 <__aeabi_dcmpun>
 800449c:	2800      	cmp	r0, #0
 800449e:	d00b      	beq.n	80044b8 <_printf_float+0xec>
 80044a0:	2f00      	cmp	r7, #0
 80044a2:	da03      	bge.n	80044ac <_printf_float+0xe0>
 80044a4:	002b      	movs	r3, r5
 80044a6:	222d      	movs	r2, #45	@ 0x2d
 80044a8:	3343      	adds	r3, #67	@ 0x43
 80044aa:	701a      	strb	r2, [r3, #0]
 80044ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80044ae:	4f87      	ldr	r7, [pc, #540]	@ (80046cc <_printf_float+0x300>)
 80044b0:	2b47      	cmp	r3, #71	@ 0x47
 80044b2:	d9d5      	bls.n	8004460 <_printf_float+0x94>
 80044b4:	4f86      	ldr	r7, [pc, #536]	@ (80046d0 <_printf_float+0x304>)
 80044b6:	e7d3      	b.n	8004460 <_printf_float+0x94>
 80044b8:	2220      	movs	r2, #32
 80044ba:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80044bc:	686b      	ldr	r3, [r5, #4]
 80044be:	4394      	bics	r4, r2
 80044c0:	1c5a      	adds	r2, r3, #1
 80044c2:	d146      	bne.n	8004552 <_printf_float+0x186>
 80044c4:	3307      	adds	r3, #7
 80044c6:	606b      	str	r3, [r5, #4]
 80044c8:	2380      	movs	r3, #128	@ 0x80
 80044ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80044cc:	00db      	lsls	r3, r3, #3
 80044ce:	4313      	orrs	r3, r2
 80044d0:	2200      	movs	r2, #0
 80044d2:	602b      	str	r3, [r5, #0]
 80044d4:	9206      	str	r2, [sp, #24]
 80044d6:	aa14      	add	r2, sp, #80	@ 0x50
 80044d8:	9205      	str	r2, [sp, #20]
 80044da:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80044dc:	a90a      	add	r1, sp, #40	@ 0x28
 80044de:	9204      	str	r2, [sp, #16]
 80044e0:	aa13      	add	r2, sp, #76	@ 0x4c
 80044e2:	9203      	str	r2, [sp, #12]
 80044e4:	2223      	movs	r2, #35	@ 0x23
 80044e6:	1852      	adds	r2, r2, r1
 80044e8:	9202      	str	r2, [sp, #8]
 80044ea:	9301      	str	r3, [sp, #4]
 80044ec:	686b      	ldr	r3, [r5, #4]
 80044ee:	0032      	movs	r2, r6
 80044f0:	9300      	str	r3, [sp, #0]
 80044f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044f4:	003b      	movs	r3, r7
 80044f6:	f7ff fec3 	bl	8004280 <__cvt>
 80044fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80044fc:	0007      	movs	r7, r0
 80044fe:	2c47      	cmp	r4, #71	@ 0x47
 8004500:	d12d      	bne.n	800455e <_printf_float+0x192>
 8004502:	1cd3      	adds	r3, r2, #3
 8004504:	db02      	blt.n	800450c <_printf_float+0x140>
 8004506:	686b      	ldr	r3, [r5, #4]
 8004508:	429a      	cmp	r2, r3
 800450a:	dd48      	ble.n	800459e <_printf_float+0x1d2>
 800450c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800450e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004510:	3b02      	subs	r3, #2
 8004512:	b2db      	uxtb	r3, r3
 8004514:	930c      	str	r3, [sp, #48]	@ 0x30
 8004516:	0028      	movs	r0, r5
 8004518:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800451a:	3901      	subs	r1, #1
 800451c:	3050      	adds	r0, #80	@ 0x50
 800451e:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004520:	f7ff ff14 	bl	800434c <__exponent>
 8004524:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8004526:	0004      	movs	r4, r0
 8004528:	1813      	adds	r3, r2, r0
 800452a:	612b      	str	r3, [r5, #16]
 800452c:	2a01      	cmp	r2, #1
 800452e:	dc02      	bgt.n	8004536 <_printf_float+0x16a>
 8004530:	682a      	ldr	r2, [r5, #0]
 8004532:	07d2      	lsls	r2, r2, #31
 8004534:	d501      	bpl.n	800453a <_printf_float+0x16e>
 8004536:	3301      	adds	r3, #1
 8004538:	612b      	str	r3, [r5, #16]
 800453a:	2323      	movs	r3, #35	@ 0x23
 800453c:	aa0a      	add	r2, sp, #40	@ 0x28
 800453e:	189b      	adds	r3, r3, r2
 8004540:	781b      	ldrb	r3, [r3, #0]
 8004542:	2b00      	cmp	r3, #0
 8004544:	d100      	bne.n	8004548 <_printf_float+0x17c>
 8004546:	e792      	b.n	800446e <_printf_float+0xa2>
 8004548:	002b      	movs	r3, r5
 800454a:	222d      	movs	r2, #45	@ 0x2d
 800454c:	3343      	adds	r3, #67	@ 0x43
 800454e:	701a      	strb	r2, [r3, #0]
 8004550:	e78d      	b.n	800446e <_printf_float+0xa2>
 8004552:	2c47      	cmp	r4, #71	@ 0x47
 8004554:	d1b8      	bne.n	80044c8 <_printf_float+0xfc>
 8004556:	2b00      	cmp	r3, #0
 8004558:	d1b6      	bne.n	80044c8 <_printf_float+0xfc>
 800455a:	3301      	adds	r3, #1
 800455c:	e7b3      	b.n	80044c6 <_printf_float+0xfa>
 800455e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004560:	0011      	movs	r1, r2
 8004562:	2b65      	cmp	r3, #101	@ 0x65
 8004564:	d9d7      	bls.n	8004516 <_printf_float+0x14a>
 8004566:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004568:	2b66      	cmp	r3, #102	@ 0x66
 800456a:	d11a      	bne.n	80045a2 <_printf_float+0x1d6>
 800456c:	686b      	ldr	r3, [r5, #4]
 800456e:	2a00      	cmp	r2, #0
 8004570:	dd09      	ble.n	8004586 <_printf_float+0x1ba>
 8004572:	612a      	str	r2, [r5, #16]
 8004574:	2b00      	cmp	r3, #0
 8004576:	d102      	bne.n	800457e <_printf_float+0x1b2>
 8004578:	6829      	ldr	r1, [r5, #0]
 800457a:	07c9      	lsls	r1, r1, #31
 800457c:	d50b      	bpl.n	8004596 <_printf_float+0x1ca>
 800457e:	3301      	adds	r3, #1
 8004580:	189b      	adds	r3, r3, r2
 8004582:	612b      	str	r3, [r5, #16]
 8004584:	e007      	b.n	8004596 <_printf_float+0x1ca>
 8004586:	2b00      	cmp	r3, #0
 8004588:	d103      	bne.n	8004592 <_printf_float+0x1c6>
 800458a:	2201      	movs	r2, #1
 800458c:	6829      	ldr	r1, [r5, #0]
 800458e:	4211      	tst	r1, r2
 8004590:	d000      	beq.n	8004594 <_printf_float+0x1c8>
 8004592:	1c9a      	adds	r2, r3, #2
 8004594:	612a      	str	r2, [r5, #16]
 8004596:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004598:	2400      	movs	r4, #0
 800459a:	65ab      	str	r3, [r5, #88]	@ 0x58
 800459c:	e7cd      	b.n	800453a <_printf_float+0x16e>
 800459e:	2367      	movs	r3, #103	@ 0x67
 80045a0:	930c      	str	r3, [sp, #48]	@ 0x30
 80045a2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80045a4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80045a6:	4299      	cmp	r1, r3
 80045a8:	db06      	blt.n	80045b8 <_printf_float+0x1ec>
 80045aa:	682b      	ldr	r3, [r5, #0]
 80045ac:	6129      	str	r1, [r5, #16]
 80045ae:	07db      	lsls	r3, r3, #31
 80045b0:	d5f1      	bpl.n	8004596 <_printf_float+0x1ca>
 80045b2:	3101      	adds	r1, #1
 80045b4:	6129      	str	r1, [r5, #16]
 80045b6:	e7ee      	b.n	8004596 <_printf_float+0x1ca>
 80045b8:	2201      	movs	r2, #1
 80045ba:	2900      	cmp	r1, #0
 80045bc:	dce0      	bgt.n	8004580 <_printf_float+0x1b4>
 80045be:	1892      	adds	r2, r2, r2
 80045c0:	1a52      	subs	r2, r2, r1
 80045c2:	e7dd      	b.n	8004580 <_printf_float+0x1b4>
 80045c4:	682a      	ldr	r2, [r5, #0]
 80045c6:	0553      	lsls	r3, r2, #21
 80045c8:	d408      	bmi.n	80045dc <_printf_float+0x210>
 80045ca:	692b      	ldr	r3, [r5, #16]
 80045cc:	003a      	movs	r2, r7
 80045ce:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80045d0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80045d2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80045d4:	47a0      	blx	r4
 80045d6:	3001      	adds	r0, #1
 80045d8:	d129      	bne.n	800462e <_printf_float+0x262>
 80045da:	e753      	b.n	8004484 <_printf_float+0xb8>
 80045dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80045de:	2b65      	cmp	r3, #101	@ 0x65
 80045e0:	d800      	bhi.n	80045e4 <_printf_float+0x218>
 80045e2:	e0da      	b.n	800479a <_printf_float+0x3ce>
 80045e4:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80045e6:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80045e8:	2200      	movs	r2, #0
 80045ea:	2300      	movs	r3, #0
 80045ec:	f7fb ff2e 	bl	800044c <__aeabi_dcmpeq>
 80045f0:	2800      	cmp	r0, #0
 80045f2:	d033      	beq.n	800465c <_printf_float+0x290>
 80045f4:	2301      	movs	r3, #1
 80045f6:	4a37      	ldr	r2, [pc, #220]	@ (80046d4 <_printf_float+0x308>)
 80045f8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80045fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80045fc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80045fe:	47a0      	blx	r4
 8004600:	3001      	adds	r0, #1
 8004602:	d100      	bne.n	8004606 <_printf_float+0x23a>
 8004604:	e73e      	b.n	8004484 <_printf_float+0xb8>
 8004606:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8004608:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800460a:	42b3      	cmp	r3, r6
 800460c:	db02      	blt.n	8004614 <_printf_float+0x248>
 800460e:	682b      	ldr	r3, [r5, #0]
 8004610:	07db      	lsls	r3, r3, #31
 8004612:	d50c      	bpl.n	800462e <_printf_float+0x262>
 8004614:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004616:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004618:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800461a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800461c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800461e:	47a0      	blx	r4
 8004620:	2400      	movs	r4, #0
 8004622:	3001      	adds	r0, #1
 8004624:	d100      	bne.n	8004628 <_printf_float+0x25c>
 8004626:	e72d      	b.n	8004484 <_printf_float+0xb8>
 8004628:	1e73      	subs	r3, r6, #1
 800462a:	42a3      	cmp	r3, r4
 800462c:	dc0a      	bgt.n	8004644 <_printf_float+0x278>
 800462e:	682b      	ldr	r3, [r5, #0]
 8004630:	079b      	lsls	r3, r3, #30
 8004632:	d500      	bpl.n	8004636 <_printf_float+0x26a>
 8004634:	e105      	b.n	8004842 <_printf_float+0x476>
 8004636:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004638:	68e8      	ldr	r0, [r5, #12]
 800463a:	4298      	cmp	r0, r3
 800463c:	db00      	blt.n	8004640 <_printf_float+0x274>
 800463e:	e723      	b.n	8004488 <_printf_float+0xbc>
 8004640:	0018      	movs	r0, r3
 8004642:	e721      	b.n	8004488 <_printf_float+0xbc>
 8004644:	002a      	movs	r2, r5
 8004646:	2301      	movs	r3, #1
 8004648:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800464a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800464c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800464e:	321a      	adds	r2, #26
 8004650:	47b8      	blx	r7
 8004652:	3001      	adds	r0, #1
 8004654:	d100      	bne.n	8004658 <_printf_float+0x28c>
 8004656:	e715      	b.n	8004484 <_printf_float+0xb8>
 8004658:	3401      	adds	r4, #1
 800465a:	e7e5      	b.n	8004628 <_printf_float+0x25c>
 800465c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800465e:	2b00      	cmp	r3, #0
 8004660:	dc3a      	bgt.n	80046d8 <_printf_float+0x30c>
 8004662:	2301      	movs	r3, #1
 8004664:	4a1b      	ldr	r2, [pc, #108]	@ (80046d4 <_printf_float+0x308>)
 8004666:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004668:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800466a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800466c:	47a0      	blx	r4
 800466e:	3001      	adds	r0, #1
 8004670:	d100      	bne.n	8004674 <_printf_float+0x2a8>
 8004672:	e707      	b.n	8004484 <_printf_float+0xb8>
 8004674:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8004676:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004678:	4333      	orrs	r3, r6
 800467a:	d102      	bne.n	8004682 <_printf_float+0x2b6>
 800467c:	682b      	ldr	r3, [r5, #0]
 800467e:	07db      	lsls	r3, r3, #31
 8004680:	d5d5      	bpl.n	800462e <_printf_float+0x262>
 8004682:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004684:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004686:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004688:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800468a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800468c:	47a0      	blx	r4
 800468e:	2300      	movs	r3, #0
 8004690:	3001      	adds	r0, #1
 8004692:	d100      	bne.n	8004696 <_printf_float+0x2ca>
 8004694:	e6f6      	b.n	8004484 <_printf_float+0xb8>
 8004696:	930c      	str	r3, [sp, #48]	@ 0x30
 8004698:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800469a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800469c:	425b      	negs	r3, r3
 800469e:	4293      	cmp	r3, r2
 80046a0:	dc01      	bgt.n	80046a6 <_printf_float+0x2da>
 80046a2:	0033      	movs	r3, r6
 80046a4:	e792      	b.n	80045cc <_printf_float+0x200>
 80046a6:	002a      	movs	r2, r5
 80046a8:	2301      	movs	r3, #1
 80046aa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80046ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80046ae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80046b0:	321a      	adds	r2, #26
 80046b2:	47a0      	blx	r4
 80046b4:	3001      	adds	r0, #1
 80046b6:	d100      	bne.n	80046ba <_printf_float+0x2ee>
 80046b8:	e6e4      	b.n	8004484 <_printf_float+0xb8>
 80046ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80046bc:	3301      	adds	r3, #1
 80046be:	e7ea      	b.n	8004696 <_printf_float+0x2ca>
 80046c0:	7fefffff 	.word	0x7fefffff
 80046c4:	08008258 	.word	0x08008258
 80046c8:	0800825c 	.word	0x0800825c
 80046cc:	08008260 	.word	0x08008260
 80046d0:	08008264 	.word	0x08008264
 80046d4:	08008268 	.word	0x08008268
 80046d8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80046da:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80046dc:	930c      	str	r3, [sp, #48]	@ 0x30
 80046de:	429e      	cmp	r6, r3
 80046e0:	dd00      	ble.n	80046e4 <_printf_float+0x318>
 80046e2:	001e      	movs	r6, r3
 80046e4:	2e00      	cmp	r6, #0
 80046e6:	dc31      	bgt.n	800474c <_printf_float+0x380>
 80046e8:	43f3      	mvns	r3, r6
 80046ea:	2400      	movs	r4, #0
 80046ec:	17db      	asrs	r3, r3, #31
 80046ee:	4033      	ands	r3, r6
 80046f0:	930e      	str	r3, [sp, #56]	@ 0x38
 80046f2:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80046f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80046f6:	1af3      	subs	r3, r6, r3
 80046f8:	42a3      	cmp	r3, r4
 80046fa:	dc30      	bgt.n	800475e <_printf_float+0x392>
 80046fc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80046fe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004700:	429a      	cmp	r2, r3
 8004702:	dc38      	bgt.n	8004776 <_printf_float+0x3aa>
 8004704:	682b      	ldr	r3, [r5, #0]
 8004706:	07db      	lsls	r3, r3, #31
 8004708:	d435      	bmi.n	8004776 <_printf_float+0x3aa>
 800470a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800470c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800470e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004710:	1b9b      	subs	r3, r3, r6
 8004712:	1b14      	subs	r4, r2, r4
 8004714:	429c      	cmp	r4, r3
 8004716:	dd00      	ble.n	800471a <_printf_float+0x34e>
 8004718:	001c      	movs	r4, r3
 800471a:	2c00      	cmp	r4, #0
 800471c:	dc34      	bgt.n	8004788 <_printf_float+0x3bc>
 800471e:	43e3      	mvns	r3, r4
 8004720:	2600      	movs	r6, #0
 8004722:	17db      	asrs	r3, r3, #31
 8004724:	401c      	ands	r4, r3
 8004726:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004728:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800472a:	1ad3      	subs	r3, r2, r3
 800472c:	1b1b      	subs	r3, r3, r4
 800472e:	42b3      	cmp	r3, r6
 8004730:	dc00      	bgt.n	8004734 <_printf_float+0x368>
 8004732:	e77c      	b.n	800462e <_printf_float+0x262>
 8004734:	002a      	movs	r2, r5
 8004736:	2301      	movs	r3, #1
 8004738:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800473a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800473c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800473e:	321a      	adds	r2, #26
 8004740:	47b8      	blx	r7
 8004742:	3001      	adds	r0, #1
 8004744:	d100      	bne.n	8004748 <_printf_float+0x37c>
 8004746:	e69d      	b.n	8004484 <_printf_float+0xb8>
 8004748:	3601      	adds	r6, #1
 800474a:	e7ec      	b.n	8004726 <_printf_float+0x35a>
 800474c:	0033      	movs	r3, r6
 800474e:	003a      	movs	r2, r7
 8004750:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004752:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004754:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004756:	47a0      	blx	r4
 8004758:	3001      	adds	r0, #1
 800475a:	d1c5      	bne.n	80046e8 <_printf_float+0x31c>
 800475c:	e692      	b.n	8004484 <_printf_float+0xb8>
 800475e:	002a      	movs	r2, r5
 8004760:	2301      	movs	r3, #1
 8004762:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004764:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004766:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004768:	321a      	adds	r2, #26
 800476a:	47b0      	blx	r6
 800476c:	3001      	adds	r0, #1
 800476e:	d100      	bne.n	8004772 <_printf_float+0x3a6>
 8004770:	e688      	b.n	8004484 <_printf_float+0xb8>
 8004772:	3401      	adds	r4, #1
 8004774:	e7bd      	b.n	80046f2 <_printf_float+0x326>
 8004776:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004778:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800477a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800477c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800477e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004780:	47a0      	blx	r4
 8004782:	3001      	adds	r0, #1
 8004784:	d1c1      	bne.n	800470a <_printf_float+0x33e>
 8004786:	e67d      	b.n	8004484 <_printf_float+0xb8>
 8004788:	19ba      	adds	r2, r7, r6
 800478a:	0023      	movs	r3, r4
 800478c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800478e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004790:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004792:	47b0      	blx	r6
 8004794:	3001      	adds	r0, #1
 8004796:	d1c2      	bne.n	800471e <_printf_float+0x352>
 8004798:	e674      	b.n	8004484 <_printf_float+0xb8>
 800479a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800479c:	930c      	str	r3, [sp, #48]	@ 0x30
 800479e:	2b01      	cmp	r3, #1
 80047a0:	dc02      	bgt.n	80047a8 <_printf_float+0x3dc>
 80047a2:	2301      	movs	r3, #1
 80047a4:	421a      	tst	r2, r3
 80047a6:	d039      	beq.n	800481c <_printf_float+0x450>
 80047a8:	2301      	movs	r3, #1
 80047aa:	003a      	movs	r2, r7
 80047ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80047ae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047b0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80047b2:	47b0      	blx	r6
 80047b4:	3001      	adds	r0, #1
 80047b6:	d100      	bne.n	80047ba <_printf_float+0x3ee>
 80047b8:	e664      	b.n	8004484 <_printf_float+0xb8>
 80047ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80047bc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80047be:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80047c0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047c2:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80047c4:	47b0      	blx	r6
 80047c6:	3001      	adds	r0, #1
 80047c8:	d100      	bne.n	80047cc <_printf_float+0x400>
 80047ca:	e65b      	b.n	8004484 <_printf_float+0xb8>
 80047cc:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80047ce:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80047d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80047d2:	2200      	movs	r2, #0
 80047d4:	3b01      	subs	r3, #1
 80047d6:	930c      	str	r3, [sp, #48]	@ 0x30
 80047d8:	2300      	movs	r3, #0
 80047da:	f7fb fe37 	bl	800044c <__aeabi_dcmpeq>
 80047de:	2800      	cmp	r0, #0
 80047e0:	d11a      	bne.n	8004818 <_printf_float+0x44c>
 80047e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80047e4:	1c7a      	adds	r2, r7, #1
 80047e6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80047e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047ea:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80047ec:	47b0      	blx	r6
 80047ee:	3001      	adds	r0, #1
 80047f0:	d10e      	bne.n	8004810 <_printf_float+0x444>
 80047f2:	e647      	b.n	8004484 <_printf_float+0xb8>
 80047f4:	002a      	movs	r2, r5
 80047f6:	2301      	movs	r3, #1
 80047f8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80047fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047fc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80047fe:	321a      	adds	r2, #26
 8004800:	47b8      	blx	r7
 8004802:	3001      	adds	r0, #1
 8004804:	d100      	bne.n	8004808 <_printf_float+0x43c>
 8004806:	e63d      	b.n	8004484 <_printf_float+0xb8>
 8004808:	3601      	adds	r6, #1
 800480a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800480c:	429e      	cmp	r6, r3
 800480e:	dbf1      	blt.n	80047f4 <_printf_float+0x428>
 8004810:	002a      	movs	r2, r5
 8004812:	0023      	movs	r3, r4
 8004814:	3250      	adds	r2, #80	@ 0x50
 8004816:	e6da      	b.n	80045ce <_printf_float+0x202>
 8004818:	2600      	movs	r6, #0
 800481a:	e7f6      	b.n	800480a <_printf_float+0x43e>
 800481c:	003a      	movs	r2, r7
 800481e:	e7e2      	b.n	80047e6 <_printf_float+0x41a>
 8004820:	002a      	movs	r2, r5
 8004822:	2301      	movs	r3, #1
 8004824:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004826:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004828:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800482a:	3219      	adds	r2, #25
 800482c:	47b0      	blx	r6
 800482e:	3001      	adds	r0, #1
 8004830:	d100      	bne.n	8004834 <_printf_float+0x468>
 8004832:	e627      	b.n	8004484 <_printf_float+0xb8>
 8004834:	3401      	adds	r4, #1
 8004836:	68eb      	ldr	r3, [r5, #12]
 8004838:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800483a:	1a9b      	subs	r3, r3, r2
 800483c:	42a3      	cmp	r3, r4
 800483e:	dcef      	bgt.n	8004820 <_printf_float+0x454>
 8004840:	e6f9      	b.n	8004636 <_printf_float+0x26a>
 8004842:	2400      	movs	r4, #0
 8004844:	e7f7      	b.n	8004836 <_printf_float+0x46a>
 8004846:	46c0      	nop			@ (mov r8, r8)

08004848 <_printf_common>:
 8004848:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800484a:	0016      	movs	r6, r2
 800484c:	9301      	str	r3, [sp, #4]
 800484e:	688a      	ldr	r2, [r1, #8]
 8004850:	690b      	ldr	r3, [r1, #16]
 8004852:	000c      	movs	r4, r1
 8004854:	9000      	str	r0, [sp, #0]
 8004856:	4293      	cmp	r3, r2
 8004858:	da00      	bge.n	800485c <_printf_common+0x14>
 800485a:	0013      	movs	r3, r2
 800485c:	0022      	movs	r2, r4
 800485e:	6033      	str	r3, [r6, #0]
 8004860:	3243      	adds	r2, #67	@ 0x43
 8004862:	7812      	ldrb	r2, [r2, #0]
 8004864:	2a00      	cmp	r2, #0
 8004866:	d001      	beq.n	800486c <_printf_common+0x24>
 8004868:	3301      	adds	r3, #1
 800486a:	6033      	str	r3, [r6, #0]
 800486c:	6823      	ldr	r3, [r4, #0]
 800486e:	069b      	lsls	r3, r3, #26
 8004870:	d502      	bpl.n	8004878 <_printf_common+0x30>
 8004872:	6833      	ldr	r3, [r6, #0]
 8004874:	3302      	adds	r3, #2
 8004876:	6033      	str	r3, [r6, #0]
 8004878:	6822      	ldr	r2, [r4, #0]
 800487a:	2306      	movs	r3, #6
 800487c:	0015      	movs	r5, r2
 800487e:	401d      	ands	r5, r3
 8004880:	421a      	tst	r2, r3
 8004882:	d027      	beq.n	80048d4 <_printf_common+0x8c>
 8004884:	0023      	movs	r3, r4
 8004886:	3343      	adds	r3, #67	@ 0x43
 8004888:	781b      	ldrb	r3, [r3, #0]
 800488a:	1e5a      	subs	r2, r3, #1
 800488c:	4193      	sbcs	r3, r2
 800488e:	6822      	ldr	r2, [r4, #0]
 8004890:	0692      	lsls	r2, r2, #26
 8004892:	d430      	bmi.n	80048f6 <_printf_common+0xae>
 8004894:	0022      	movs	r2, r4
 8004896:	9901      	ldr	r1, [sp, #4]
 8004898:	9800      	ldr	r0, [sp, #0]
 800489a:	9d08      	ldr	r5, [sp, #32]
 800489c:	3243      	adds	r2, #67	@ 0x43
 800489e:	47a8      	blx	r5
 80048a0:	3001      	adds	r0, #1
 80048a2:	d025      	beq.n	80048f0 <_printf_common+0xa8>
 80048a4:	2206      	movs	r2, #6
 80048a6:	6823      	ldr	r3, [r4, #0]
 80048a8:	2500      	movs	r5, #0
 80048aa:	4013      	ands	r3, r2
 80048ac:	2b04      	cmp	r3, #4
 80048ae:	d105      	bne.n	80048bc <_printf_common+0x74>
 80048b0:	6833      	ldr	r3, [r6, #0]
 80048b2:	68e5      	ldr	r5, [r4, #12]
 80048b4:	1aed      	subs	r5, r5, r3
 80048b6:	43eb      	mvns	r3, r5
 80048b8:	17db      	asrs	r3, r3, #31
 80048ba:	401d      	ands	r5, r3
 80048bc:	68a3      	ldr	r3, [r4, #8]
 80048be:	6922      	ldr	r2, [r4, #16]
 80048c0:	4293      	cmp	r3, r2
 80048c2:	dd01      	ble.n	80048c8 <_printf_common+0x80>
 80048c4:	1a9b      	subs	r3, r3, r2
 80048c6:	18ed      	adds	r5, r5, r3
 80048c8:	2600      	movs	r6, #0
 80048ca:	42b5      	cmp	r5, r6
 80048cc:	d120      	bne.n	8004910 <_printf_common+0xc8>
 80048ce:	2000      	movs	r0, #0
 80048d0:	e010      	b.n	80048f4 <_printf_common+0xac>
 80048d2:	3501      	adds	r5, #1
 80048d4:	68e3      	ldr	r3, [r4, #12]
 80048d6:	6832      	ldr	r2, [r6, #0]
 80048d8:	1a9b      	subs	r3, r3, r2
 80048da:	42ab      	cmp	r3, r5
 80048dc:	ddd2      	ble.n	8004884 <_printf_common+0x3c>
 80048de:	0022      	movs	r2, r4
 80048e0:	2301      	movs	r3, #1
 80048e2:	9901      	ldr	r1, [sp, #4]
 80048e4:	9800      	ldr	r0, [sp, #0]
 80048e6:	9f08      	ldr	r7, [sp, #32]
 80048e8:	3219      	adds	r2, #25
 80048ea:	47b8      	blx	r7
 80048ec:	3001      	adds	r0, #1
 80048ee:	d1f0      	bne.n	80048d2 <_printf_common+0x8a>
 80048f0:	2001      	movs	r0, #1
 80048f2:	4240      	negs	r0, r0
 80048f4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80048f6:	2030      	movs	r0, #48	@ 0x30
 80048f8:	18e1      	adds	r1, r4, r3
 80048fa:	3143      	adds	r1, #67	@ 0x43
 80048fc:	7008      	strb	r0, [r1, #0]
 80048fe:	0021      	movs	r1, r4
 8004900:	1c5a      	adds	r2, r3, #1
 8004902:	3145      	adds	r1, #69	@ 0x45
 8004904:	7809      	ldrb	r1, [r1, #0]
 8004906:	18a2      	adds	r2, r4, r2
 8004908:	3243      	adds	r2, #67	@ 0x43
 800490a:	3302      	adds	r3, #2
 800490c:	7011      	strb	r1, [r2, #0]
 800490e:	e7c1      	b.n	8004894 <_printf_common+0x4c>
 8004910:	0022      	movs	r2, r4
 8004912:	2301      	movs	r3, #1
 8004914:	9901      	ldr	r1, [sp, #4]
 8004916:	9800      	ldr	r0, [sp, #0]
 8004918:	9f08      	ldr	r7, [sp, #32]
 800491a:	321a      	adds	r2, #26
 800491c:	47b8      	blx	r7
 800491e:	3001      	adds	r0, #1
 8004920:	d0e6      	beq.n	80048f0 <_printf_common+0xa8>
 8004922:	3601      	adds	r6, #1
 8004924:	e7d1      	b.n	80048ca <_printf_common+0x82>
	...

08004928 <_printf_i>:
 8004928:	b5f0      	push	{r4, r5, r6, r7, lr}
 800492a:	b08b      	sub	sp, #44	@ 0x2c
 800492c:	9206      	str	r2, [sp, #24]
 800492e:	000a      	movs	r2, r1
 8004930:	3243      	adds	r2, #67	@ 0x43
 8004932:	9307      	str	r3, [sp, #28]
 8004934:	9005      	str	r0, [sp, #20]
 8004936:	9203      	str	r2, [sp, #12]
 8004938:	7e0a      	ldrb	r2, [r1, #24]
 800493a:	000c      	movs	r4, r1
 800493c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800493e:	2a78      	cmp	r2, #120	@ 0x78
 8004940:	d809      	bhi.n	8004956 <_printf_i+0x2e>
 8004942:	2a62      	cmp	r2, #98	@ 0x62
 8004944:	d80b      	bhi.n	800495e <_printf_i+0x36>
 8004946:	2a00      	cmp	r2, #0
 8004948:	d100      	bne.n	800494c <_printf_i+0x24>
 800494a:	e0bc      	b.n	8004ac6 <_printf_i+0x19e>
 800494c:	497b      	ldr	r1, [pc, #492]	@ (8004b3c <_printf_i+0x214>)
 800494e:	9104      	str	r1, [sp, #16]
 8004950:	2a58      	cmp	r2, #88	@ 0x58
 8004952:	d100      	bne.n	8004956 <_printf_i+0x2e>
 8004954:	e090      	b.n	8004a78 <_printf_i+0x150>
 8004956:	0025      	movs	r5, r4
 8004958:	3542      	adds	r5, #66	@ 0x42
 800495a:	702a      	strb	r2, [r5, #0]
 800495c:	e022      	b.n	80049a4 <_printf_i+0x7c>
 800495e:	0010      	movs	r0, r2
 8004960:	3863      	subs	r0, #99	@ 0x63
 8004962:	2815      	cmp	r0, #21
 8004964:	d8f7      	bhi.n	8004956 <_printf_i+0x2e>
 8004966:	f7fb fbe1 	bl	800012c <__gnu_thumb1_case_shi>
 800496a:	0016      	.short	0x0016
 800496c:	fff6001f 	.word	0xfff6001f
 8004970:	fff6fff6 	.word	0xfff6fff6
 8004974:	001ffff6 	.word	0x001ffff6
 8004978:	fff6fff6 	.word	0xfff6fff6
 800497c:	fff6fff6 	.word	0xfff6fff6
 8004980:	003600a1 	.word	0x003600a1
 8004984:	fff60080 	.word	0xfff60080
 8004988:	00b2fff6 	.word	0x00b2fff6
 800498c:	0036fff6 	.word	0x0036fff6
 8004990:	fff6fff6 	.word	0xfff6fff6
 8004994:	0084      	.short	0x0084
 8004996:	0025      	movs	r5, r4
 8004998:	681a      	ldr	r2, [r3, #0]
 800499a:	3542      	adds	r5, #66	@ 0x42
 800499c:	1d11      	adds	r1, r2, #4
 800499e:	6019      	str	r1, [r3, #0]
 80049a0:	6813      	ldr	r3, [r2, #0]
 80049a2:	702b      	strb	r3, [r5, #0]
 80049a4:	2301      	movs	r3, #1
 80049a6:	e0a0      	b.n	8004aea <_printf_i+0x1c2>
 80049a8:	6818      	ldr	r0, [r3, #0]
 80049aa:	6809      	ldr	r1, [r1, #0]
 80049ac:	1d02      	adds	r2, r0, #4
 80049ae:	060d      	lsls	r5, r1, #24
 80049b0:	d50b      	bpl.n	80049ca <_printf_i+0xa2>
 80049b2:	6806      	ldr	r6, [r0, #0]
 80049b4:	601a      	str	r2, [r3, #0]
 80049b6:	2e00      	cmp	r6, #0
 80049b8:	da03      	bge.n	80049c2 <_printf_i+0x9a>
 80049ba:	232d      	movs	r3, #45	@ 0x2d
 80049bc:	9a03      	ldr	r2, [sp, #12]
 80049be:	4276      	negs	r6, r6
 80049c0:	7013      	strb	r3, [r2, #0]
 80049c2:	4b5e      	ldr	r3, [pc, #376]	@ (8004b3c <_printf_i+0x214>)
 80049c4:	270a      	movs	r7, #10
 80049c6:	9304      	str	r3, [sp, #16]
 80049c8:	e018      	b.n	80049fc <_printf_i+0xd4>
 80049ca:	6806      	ldr	r6, [r0, #0]
 80049cc:	601a      	str	r2, [r3, #0]
 80049ce:	0649      	lsls	r1, r1, #25
 80049d0:	d5f1      	bpl.n	80049b6 <_printf_i+0x8e>
 80049d2:	b236      	sxth	r6, r6
 80049d4:	e7ef      	b.n	80049b6 <_printf_i+0x8e>
 80049d6:	6808      	ldr	r0, [r1, #0]
 80049d8:	6819      	ldr	r1, [r3, #0]
 80049da:	c940      	ldmia	r1!, {r6}
 80049dc:	0605      	lsls	r5, r0, #24
 80049de:	d402      	bmi.n	80049e6 <_printf_i+0xbe>
 80049e0:	0640      	lsls	r0, r0, #25
 80049e2:	d500      	bpl.n	80049e6 <_printf_i+0xbe>
 80049e4:	b2b6      	uxth	r6, r6
 80049e6:	6019      	str	r1, [r3, #0]
 80049e8:	4b54      	ldr	r3, [pc, #336]	@ (8004b3c <_printf_i+0x214>)
 80049ea:	270a      	movs	r7, #10
 80049ec:	9304      	str	r3, [sp, #16]
 80049ee:	2a6f      	cmp	r2, #111	@ 0x6f
 80049f0:	d100      	bne.n	80049f4 <_printf_i+0xcc>
 80049f2:	3f02      	subs	r7, #2
 80049f4:	0023      	movs	r3, r4
 80049f6:	2200      	movs	r2, #0
 80049f8:	3343      	adds	r3, #67	@ 0x43
 80049fa:	701a      	strb	r2, [r3, #0]
 80049fc:	6863      	ldr	r3, [r4, #4]
 80049fe:	60a3      	str	r3, [r4, #8]
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	db03      	blt.n	8004a0c <_printf_i+0xe4>
 8004a04:	2104      	movs	r1, #4
 8004a06:	6822      	ldr	r2, [r4, #0]
 8004a08:	438a      	bics	r2, r1
 8004a0a:	6022      	str	r2, [r4, #0]
 8004a0c:	2e00      	cmp	r6, #0
 8004a0e:	d102      	bne.n	8004a16 <_printf_i+0xee>
 8004a10:	9d03      	ldr	r5, [sp, #12]
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d00c      	beq.n	8004a30 <_printf_i+0x108>
 8004a16:	9d03      	ldr	r5, [sp, #12]
 8004a18:	0030      	movs	r0, r6
 8004a1a:	0039      	movs	r1, r7
 8004a1c:	f7fb fc16 	bl	800024c <__aeabi_uidivmod>
 8004a20:	9b04      	ldr	r3, [sp, #16]
 8004a22:	3d01      	subs	r5, #1
 8004a24:	5c5b      	ldrb	r3, [r3, r1]
 8004a26:	702b      	strb	r3, [r5, #0]
 8004a28:	0033      	movs	r3, r6
 8004a2a:	0006      	movs	r6, r0
 8004a2c:	429f      	cmp	r7, r3
 8004a2e:	d9f3      	bls.n	8004a18 <_printf_i+0xf0>
 8004a30:	2f08      	cmp	r7, #8
 8004a32:	d109      	bne.n	8004a48 <_printf_i+0x120>
 8004a34:	6823      	ldr	r3, [r4, #0]
 8004a36:	07db      	lsls	r3, r3, #31
 8004a38:	d506      	bpl.n	8004a48 <_printf_i+0x120>
 8004a3a:	6862      	ldr	r2, [r4, #4]
 8004a3c:	6923      	ldr	r3, [r4, #16]
 8004a3e:	429a      	cmp	r2, r3
 8004a40:	dc02      	bgt.n	8004a48 <_printf_i+0x120>
 8004a42:	2330      	movs	r3, #48	@ 0x30
 8004a44:	3d01      	subs	r5, #1
 8004a46:	702b      	strb	r3, [r5, #0]
 8004a48:	9b03      	ldr	r3, [sp, #12]
 8004a4a:	1b5b      	subs	r3, r3, r5
 8004a4c:	6123      	str	r3, [r4, #16]
 8004a4e:	9b07      	ldr	r3, [sp, #28]
 8004a50:	0021      	movs	r1, r4
 8004a52:	9300      	str	r3, [sp, #0]
 8004a54:	9805      	ldr	r0, [sp, #20]
 8004a56:	9b06      	ldr	r3, [sp, #24]
 8004a58:	aa09      	add	r2, sp, #36	@ 0x24
 8004a5a:	f7ff fef5 	bl	8004848 <_printf_common>
 8004a5e:	3001      	adds	r0, #1
 8004a60:	d148      	bne.n	8004af4 <_printf_i+0x1cc>
 8004a62:	2001      	movs	r0, #1
 8004a64:	4240      	negs	r0, r0
 8004a66:	b00b      	add	sp, #44	@ 0x2c
 8004a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a6a:	2220      	movs	r2, #32
 8004a6c:	6809      	ldr	r1, [r1, #0]
 8004a6e:	430a      	orrs	r2, r1
 8004a70:	6022      	str	r2, [r4, #0]
 8004a72:	2278      	movs	r2, #120	@ 0x78
 8004a74:	4932      	ldr	r1, [pc, #200]	@ (8004b40 <_printf_i+0x218>)
 8004a76:	9104      	str	r1, [sp, #16]
 8004a78:	0021      	movs	r1, r4
 8004a7a:	3145      	adds	r1, #69	@ 0x45
 8004a7c:	700a      	strb	r2, [r1, #0]
 8004a7e:	6819      	ldr	r1, [r3, #0]
 8004a80:	6822      	ldr	r2, [r4, #0]
 8004a82:	c940      	ldmia	r1!, {r6}
 8004a84:	0610      	lsls	r0, r2, #24
 8004a86:	d402      	bmi.n	8004a8e <_printf_i+0x166>
 8004a88:	0650      	lsls	r0, r2, #25
 8004a8a:	d500      	bpl.n	8004a8e <_printf_i+0x166>
 8004a8c:	b2b6      	uxth	r6, r6
 8004a8e:	6019      	str	r1, [r3, #0]
 8004a90:	07d3      	lsls	r3, r2, #31
 8004a92:	d502      	bpl.n	8004a9a <_printf_i+0x172>
 8004a94:	2320      	movs	r3, #32
 8004a96:	4313      	orrs	r3, r2
 8004a98:	6023      	str	r3, [r4, #0]
 8004a9a:	2e00      	cmp	r6, #0
 8004a9c:	d001      	beq.n	8004aa2 <_printf_i+0x17a>
 8004a9e:	2710      	movs	r7, #16
 8004aa0:	e7a8      	b.n	80049f4 <_printf_i+0xcc>
 8004aa2:	2220      	movs	r2, #32
 8004aa4:	6823      	ldr	r3, [r4, #0]
 8004aa6:	4393      	bics	r3, r2
 8004aa8:	6023      	str	r3, [r4, #0]
 8004aaa:	e7f8      	b.n	8004a9e <_printf_i+0x176>
 8004aac:	681a      	ldr	r2, [r3, #0]
 8004aae:	680d      	ldr	r5, [r1, #0]
 8004ab0:	1d10      	adds	r0, r2, #4
 8004ab2:	6949      	ldr	r1, [r1, #20]
 8004ab4:	6018      	str	r0, [r3, #0]
 8004ab6:	6813      	ldr	r3, [r2, #0]
 8004ab8:	062e      	lsls	r6, r5, #24
 8004aba:	d501      	bpl.n	8004ac0 <_printf_i+0x198>
 8004abc:	6019      	str	r1, [r3, #0]
 8004abe:	e002      	b.n	8004ac6 <_printf_i+0x19e>
 8004ac0:	066d      	lsls	r5, r5, #25
 8004ac2:	d5fb      	bpl.n	8004abc <_printf_i+0x194>
 8004ac4:	8019      	strh	r1, [r3, #0]
 8004ac6:	2300      	movs	r3, #0
 8004ac8:	9d03      	ldr	r5, [sp, #12]
 8004aca:	6123      	str	r3, [r4, #16]
 8004acc:	e7bf      	b.n	8004a4e <_printf_i+0x126>
 8004ace:	681a      	ldr	r2, [r3, #0]
 8004ad0:	1d11      	adds	r1, r2, #4
 8004ad2:	6019      	str	r1, [r3, #0]
 8004ad4:	6815      	ldr	r5, [r2, #0]
 8004ad6:	2100      	movs	r1, #0
 8004ad8:	0028      	movs	r0, r5
 8004ada:	6862      	ldr	r2, [r4, #4]
 8004adc:	f000 f9c9 	bl	8004e72 <memchr>
 8004ae0:	2800      	cmp	r0, #0
 8004ae2:	d001      	beq.n	8004ae8 <_printf_i+0x1c0>
 8004ae4:	1b40      	subs	r0, r0, r5
 8004ae6:	6060      	str	r0, [r4, #4]
 8004ae8:	6863      	ldr	r3, [r4, #4]
 8004aea:	6123      	str	r3, [r4, #16]
 8004aec:	2300      	movs	r3, #0
 8004aee:	9a03      	ldr	r2, [sp, #12]
 8004af0:	7013      	strb	r3, [r2, #0]
 8004af2:	e7ac      	b.n	8004a4e <_printf_i+0x126>
 8004af4:	002a      	movs	r2, r5
 8004af6:	6923      	ldr	r3, [r4, #16]
 8004af8:	9906      	ldr	r1, [sp, #24]
 8004afa:	9805      	ldr	r0, [sp, #20]
 8004afc:	9d07      	ldr	r5, [sp, #28]
 8004afe:	47a8      	blx	r5
 8004b00:	3001      	adds	r0, #1
 8004b02:	d0ae      	beq.n	8004a62 <_printf_i+0x13a>
 8004b04:	6823      	ldr	r3, [r4, #0]
 8004b06:	079b      	lsls	r3, r3, #30
 8004b08:	d415      	bmi.n	8004b36 <_printf_i+0x20e>
 8004b0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b0c:	68e0      	ldr	r0, [r4, #12]
 8004b0e:	4298      	cmp	r0, r3
 8004b10:	daa9      	bge.n	8004a66 <_printf_i+0x13e>
 8004b12:	0018      	movs	r0, r3
 8004b14:	e7a7      	b.n	8004a66 <_printf_i+0x13e>
 8004b16:	0022      	movs	r2, r4
 8004b18:	2301      	movs	r3, #1
 8004b1a:	9906      	ldr	r1, [sp, #24]
 8004b1c:	9805      	ldr	r0, [sp, #20]
 8004b1e:	9e07      	ldr	r6, [sp, #28]
 8004b20:	3219      	adds	r2, #25
 8004b22:	47b0      	blx	r6
 8004b24:	3001      	adds	r0, #1
 8004b26:	d09c      	beq.n	8004a62 <_printf_i+0x13a>
 8004b28:	3501      	adds	r5, #1
 8004b2a:	68e3      	ldr	r3, [r4, #12]
 8004b2c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004b2e:	1a9b      	subs	r3, r3, r2
 8004b30:	42ab      	cmp	r3, r5
 8004b32:	dcf0      	bgt.n	8004b16 <_printf_i+0x1ee>
 8004b34:	e7e9      	b.n	8004b0a <_printf_i+0x1e2>
 8004b36:	2500      	movs	r5, #0
 8004b38:	e7f7      	b.n	8004b2a <_printf_i+0x202>
 8004b3a:	46c0      	nop			@ (mov r8, r8)
 8004b3c:	0800826a 	.word	0x0800826a
 8004b40:	0800827b 	.word	0x0800827b

08004b44 <std>:
 8004b44:	2300      	movs	r3, #0
 8004b46:	b510      	push	{r4, lr}
 8004b48:	0004      	movs	r4, r0
 8004b4a:	6003      	str	r3, [r0, #0]
 8004b4c:	6043      	str	r3, [r0, #4]
 8004b4e:	6083      	str	r3, [r0, #8]
 8004b50:	8181      	strh	r1, [r0, #12]
 8004b52:	6643      	str	r3, [r0, #100]	@ 0x64
 8004b54:	81c2      	strh	r2, [r0, #14]
 8004b56:	6103      	str	r3, [r0, #16]
 8004b58:	6143      	str	r3, [r0, #20]
 8004b5a:	6183      	str	r3, [r0, #24]
 8004b5c:	0019      	movs	r1, r3
 8004b5e:	2208      	movs	r2, #8
 8004b60:	305c      	adds	r0, #92	@ 0x5c
 8004b62:	f000 f8ff 	bl	8004d64 <memset>
 8004b66:	4b0b      	ldr	r3, [pc, #44]	@ (8004b94 <std+0x50>)
 8004b68:	6224      	str	r4, [r4, #32]
 8004b6a:	6263      	str	r3, [r4, #36]	@ 0x24
 8004b6c:	4b0a      	ldr	r3, [pc, #40]	@ (8004b98 <std+0x54>)
 8004b6e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004b70:	4b0a      	ldr	r3, [pc, #40]	@ (8004b9c <std+0x58>)
 8004b72:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004b74:	4b0a      	ldr	r3, [pc, #40]	@ (8004ba0 <std+0x5c>)
 8004b76:	6323      	str	r3, [r4, #48]	@ 0x30
 8004b78:	4b0a      	ldr	r3, [pc, #40]	@ (8004ba4 <std+0x60>)
 8004b7a:	429c      	cmp	r4, r3
 8004b7c:	d005      	beq.n	8004b8a <std+0x46>
 8004b7e:	4b0a      	ldr	r3, [pc, #40]	@ (8004ba8 <std+0x64>)
 8004b80:	429c      	cmp	r4, r3
 8004b82:	d002      	beq.n	8004b8a <std+0x46>
 8004b84:	4b09      	ldr	r3, [pc, #36]	@ (8004bac <std+0x68>)
 8004b86:	429c      	cmp	r4, r3
 8004b88:	d103      	bne.n	8004b92 <std+0x4e>
 8004b8a:	0020      	movs	r0, r4
 8004b8c:	3058      	adds	r0, #88	@ 0x58
 8004b8e:	f000 f96d 	bl	8004e6c <__retarget_lock_init_recursive>
 8004b92:	bd10      	pop	{r4, pc}
 8004b94:	08004ccd 	.word	0x08004ccd
 8004b98:	08004cf5 	.word	0x08004cf5
 8004b9c:	08004d2d 	.word	0x08004d2d
 8004ba0:	08004d59 	.word	0x08004d59
 8004ba4:	20000680 	.word	0x20000680
 8004ba8:	200006e8 	.word	0x200006e8
 8004bac:	20000750 	.word	0x20000750

08004bb0 <stdio_exit_handler>:
 8004bb0:	b510      	push	{r4, lr}
 8004bb2:	4a03      	ldr	r2, [pc, #12]	@ (8004bc0 <stdio_exit_handler+0x10>)
 8004bb4:	4903      	ldr	r1, [pc, #12]	@ (8004bc4 <stdio_exit_handler+0x14>)
 8004bb6:	4804      	ldr	r0, [pc, #16]	@ (8004bc8 <stdio_exit_handler+0x18>)
 8004bb8:	f000 f86c 	bl	8004c94 <_fwalk_sglue>
 8004bbc:	bd10      	pop	{r4, pc}
 8004bbe:	46c0      	nop			@ (mov r8, r8)
 8004bc0:	2000002c 	.word	0x2000002c
 8004bc4:	080065ed 	.word	0x080065ed
 8004bc8:	2000003c 	.word	0x2000003c

08004bcc <cleanup_stdio>:
 8004bcc:	6841      	ldr	r1, [r0, #4]
 8004bce:	4b0b      	ldr	r3, [pc, #44]	@ (8004bfc <cleanup_stdio+0x30>)
 8004bd0:	b510      	push	{r4, lr}
 8004bd2:	0004      	movs	r4, r0
 8004bd4:	4299      	cmp	r1, r3
 8004bd6:	d001      	beq.n	8004bdc <cleanup_stdio+0x10>
 8004bd8:	f001 fd08 	bl	80065ec <_fflush_r>
 8004bdc:	68a1      	ldr	r1, [r4, #8]
 8004bde:	4b08      	ldr	r3, [pc, #32]	@ (8004c00 <cleanup_stdio+0x34>)
 8004be0:	4299      	cmp	r1, r3
 8004be2:	d002      	beq.n	8004bea <cleanup_stdio+0x1e>
 8004be4:	0020      	movs	r0, r4
 8004be6:	f001 fd01 	bl	80065ec <_fflush_r>
 8004bea:	68e1      	ldr	r1, [r4, #12]
 8004bec:	4b05      	ldr	r3, [pc, #20]	@ (8004c04 <cleanup_stdio+0x38>)
 8004bee:	4299      	cmp	r1, r3
 8004bf0:	d002      	beq.n	8004bf8 <cleanup_stdio+0x2c>
 8004bf2:	0020      	movs	r0, r4
 8004bf4:	f001 fcfa 	bl	80065ec <_fflush_r>
 8004bf8:	bd10      	pop	{r4, pc}
 8004bfa:	46c0      	nop			@ (mov r8, r8)
 8004bfc:	20000680 	.word	0x20000680
 8004c00:	200006e8 	.word	0x200006e8
 8004c04:	20000750 	.word	0x20000750

08004c08 <global_stdio_init.part.0>:
 8004c08:	b510      	push	{r4, lr}
 8004c0a:	4b09      	ldr	r3, [pc, #36]	@ (8004c30 <global_stdio_init.part.0+0x28>)
 8004c0c:	4a09      	ldr	r2, [pc, #36]	@ (8004c34 <global_stdio_init.part.0+0x2c>)
 8004c0e:	2104      	movs	r1, #4
 8004c10:	601a      	str	r2, [r3, #0]
 8004c12:	4809      	ldr	r0, [pc, #36]	@ (8004c38 <global_stdio_init.part.0+0x30>)
 8004c14:	2200      	movs	r2, #0
 8004c16:	f7ff ff95 	bl	8004b44 <std>
 8004c1a:	2201      	movs	r2, #1
 8004c1c:	2109      	movs	r1, #9
 8004c1e:	4807      	ldr	r0, [pc, #28]	@ (8004c3c <global_stdio_init.part.0+0x34>)
 8004c20:	f7ff ff90 	bl	8004b44 <std>
 8004c24:	2202      	movs	r2, #2
 8004c26:	2112      	movs	r1, #18
 8004c28:	4805      	ldr	r0, [pc, #20]	@ (8004c40 <global_stdio_init.part.0+0x38>)
 8004c2a:	f7ff ff8b 	bl	8004b44 <std>
 8004c2e:	bd10      	pop	{r4, pc}
 8004c30:	200007b8 	.word	0x200007b8
 8004c34:	08004bb1 	.word	0x08004bb1
 8004c38:	20000680 	.word	0x20000680
 8004c3c:	200006e8 	.word	0x200006e8
 8004c40:	20000750 	.word	0x20000750

08004c44 <__sfp_lock_acquire>:
 8004c44:	b510      	push	{r4, lr}
 8004c46:	4802      	ldr	r0, [pc, #8]	@ (8004c50 <__sfp_lock_acquire+0xc>)
 8004c48:	f000 f911 	bl	8004e6e <__retarget_lock_acquire_recursive>
 8004c4c:	bd10      	pop	{r4, pc}
 8004c4e:	46c0      	nop			@ (mov r8, r8)
 8004c50:	200007c1 	.word	0x200007c1

08004c54 <__sfp_lock_release>:
 8004c54:	b510      	push	{r4, lr}
 8004c56:	4802      	ldr	r0, [pc, #8]	@ (8004c60 <__sfp_lock_release+0xc>)
 8004c58:	f000 f90a 	bl	8004e70 <__retarget_lock_release_recursive>
 8004c5c:	bd10      	pop	{r4, pc}
 8004c5e:	46c0      	nop			@ (mov r8, r8)
 8004c60:	200007c1 	.word	0x200007c1

08004c64 <__sinit>:
 8004c64:	b510      	push	{r4, lr}
 8004c66:	0004      	movs	r4, r0
 8004c68:	f7ff ffec 	bl	8004c44 <__sfp_lock_acquire>
 8004c6c:	6a23      	ldr	r3, [r4, #32]
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d002      	beq.n	8004c78 <__sinit+0x14>
 8004c72:	f7ff ffef 	bl	8004c54 <__sfp_lock_release>
 8004c76:	bd10      	pop	{r4, pc}
 8004c78:	4b04      	ldr	r3, [pc, #16]	@ (8004c8c <__sinit+0x28>)
 8004c7a:	6223      	str	r3, [r4, #32]
 8004c7c:	4b04      	ldr	r3, [pc, #16]	@ (8004c90 <__sinit+0x2c>)
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	d1f6      	bne.n	8004c72 <__sinit+0xe>
 8004c84:	f7ff ffc0 	bl	8004c08 <global_stdio_init.part.0>
 8004c88:	e7f3      	b.n	8004c72 <__sinit+0xe>
 8004c8a:	46c0      	nop			@ (mov r8, r8)
 8004c8c:	08004bcd 	.word	0x08004bcd
 8004c90:	200007b8 	.word	0x200007b8

08004c94 <_fwalk_sglue>:
 8004c94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004c96:	0014      	movs	r4, r2
 8004c98:	2600      	movs	r6, #0
 8004c9a:	9000      	str	r0, [sp, #0]
 8004c9c:	9101      	str	r1, [sp, #4]
 8004c9e:	68a5      	ldr	r5, [r4, #8]
 8004ca0:	6867      	ldr	r7, [r4, #4]
 8004ca2:	3f01      	subs	r7, #1
 8004ca4:	d504      	bpl.n	8004cb0 <_fwalk_sglue+0x1c>
 8004ca6:	6824      	ldr	r4, [r4, #0]
 8004ca8:	2c00      	cmp	r4, #0
 8004caa:	d1f8      	bne.n	8004c9e <_fwalk_sglue+0xa>
 8004cac:	0030      	movs	r0, r6
 8004cae:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004cb0:	89ab      	ldrh	r3, [r5, #12]
 8004cb2:	2b01      	cmp	r3, #1
 8004cb4:	d908      	bls.n	8004cc8 <_fwalk_sglue+0x34>
 8004cb6:	220e      	movs	r2, #14
 8004cb8:	5eab      	ldrsh	r3, [r5, r2]
 8004cba:	3301      	adds	r3, #1
 8004cbc:	d004      	beq.n	8004cc8 <_fwalk_sglue+0x34>
 8004cbe:	0029      	movs	r1, r5
 8004cc0:	9800      	ldr	r0, [sp, #0]
 8004cc2:	9b01      	ldr	r3, [sp, #4]
 8004cc4:	4798      	blx	r3
 8004cc6:	4306      	orrs	r6, r0
 8004cc8:	3568      	adds	r5, #104	@ 0x68
 8004cca:	e7ea      	b.n	8004ca2 <_fwalk_sglue+0xe>

08004ccc <__sread>:
 8004ccc:	b570      	push	{r4, r5, r6, lr}
 8004cce:	000c      	movs	r4, r1
 8004cd0:	250e      	movs	r5, #14
 8004cd2:	5f49      	ldrsh	r1, [r1, r5]
 8004cd4:	f000 f878 	bl	8004dc8 <_read_r>
 8004cd8:	2800      	cmp	r0, #0
 8004cda:	db03      	blt.n	8004ce4 <__sread+0x18>
 8004cdc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8004cde:	181b      	adds	r3, r3, r0
 8004ce0:	6563      	str	r3, [r4, #84]	@ 0x54
 8004ce2:	bd70      	pop	{r4, r5, r6, pc}
 8004ce4:	89a3      	ldrh	r3, [r4, #12]
 8004ce6:	4a02      	ldr	r2, [pc, #8]	@ (8004cf0 <__sread+0x24>)
 8004ce8:	4013      	ands	r3, r2
 8004cea:	81a3      	strh	r3, [r4, #12]
 8004cec:	e7f9      	b.n	8004ce2 <__sread+0x16>
 8004cee:	46c0      	nop			@ (mov r8, r8)
 8004cf0:	ffffefff 	.word	0xffffefff

08004cf4 <__swrite>:
 8004cf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cf6:	001f      	movs	r7, r3
 8004cf8:	898b      	ldrh	r3, [r1, #12]
 8004cfa:	0005      	movs	r5, r0
 8004cfc:	000c      	movs	r4, r1
 8004cfe:	0016      	movs	r6, r2
 8004d00:	05db      	lsls	r3, r3, #23
 8004d02:	d505      	bpl.n	8004d10 <__swrite+0x1c>
 8004d04:	230e      	movs	r3, #14
 8004d06:	5ec9      	ldrsh	r1, [r1, r3]
 8004d08:	2200      	movs	r2, #0
 8004d0a:	2302      	movs	r3, #2
 8004d0c:	f000 f848 	bl	8004da0 <_lseek_r>
 8004d10:	89a3      	ldrh	r3, [r4, #12]
 8004d12:	4a05      	ldr	r2, [pc, #20]	@ (8004d28 <__swrite+0x34>)
 8004d14:	0028      	movs	r0, r5
 8004d16:	4013      	ands	r3, r2
 8004d18:	81a3      	strh	r3, [r4, #12]
 8004d1a:	0032      	movs	r2, r6
 8004d1c:	230e      	movs	r3, #14
 8004d1e:	5ee1      	ldrsh	r1, [r4, r3]
 8004d20:	003b      	movs	r3, r7
 8004d22:	f000 f865 	bl	8004df0 <_write_r>
 8004d26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d28:	ffffefff 	.word	0xffffefff

08004d2c <__sseek>:
 8004d2c:	b570      	push	{r4, r5, r6, lr}
 8004d2e:	000c      	movs	r4, r1
 8004d30:	250e      	movs	r5, #14
 8004d32:	5f49      	ldrsh	r1, [r1, r5]
 8004d34:	f000 f834 	bl	8004da0 <_lseek_r>
 8004d38:	89a3      	ldrh	r3, [r4, #12]
 8004d3a:	1c42      	adds	r2, r0, #1
 8004d3c:	d103      	bne.n	8004d46 <__sseek+0x1a>
 8004d3e:	4a05      	ldr	r2, [pc, #20]	@ (8004d54 <__sseek+0x28>)
 8004d40:	4013      	ands	r3, r2
 8004d42:	81a3      	strh	r3, [r4, #12]
 8004d44:	bd70      	pop	{r4, r5, r6, pc}
 8004d46:	2280      	movs	r2, #128	@ 0x80
 8004d48:	0152      	lsls	r2, r2, #5
 8004d4a:	4313      	orrs	r3, r2
 8004d4c:	81a3      	strh	r3, [r4, #12]
 8004d4e:	6560      	str	r0, [r4, #84]	@ 0x54
 8004d50:	e7f8      	b.n	8004d44 <__sseek+0x18>
 8004d52:	46c0      	nop			@ (mov r8, r8)
 8004d54:	ffffefff 	.word	0xffffefff

08004d58 <__sclose>:
 8004d58:	b510      	push	{r4, lr}
 8004d5a:	230e      	movs	r3, #14
 8004d5c:	5ec9      	ldrsh	r1, [r1, r3]
 8004d5e:	f000 f80d 	bl	8004d7c <_close_r>
 8004d62:	bd10      	pop	{r4, pc}

08004d64 <memset>:
 8004d64:	0003      	movs	r3, r0
 8004d66:	1882      	adds	r2, r0, r2
 8004d68:	4293      	cmp	r3, r2
 8004d6a:	d100      	bne.n	8004d6e <memset+0xa>
 8004d6c:	4770      	bx	lr
 8004d6e:	7019      	strb	r1, [r3, #0]
 8004d70:	3301      	adds	r3, #1
 8004d72:	e7f9      	b.n	8004d68 <memset+0x4>

08004d74 <_localeconv_r>:
 8004d74:	4800      	ldr	r0, [pc, #0]	@ (8004d78 <_localeconv_r+0x4>)
 8004d76:	4770      	bx	lr
 8004d78:	20000178 	.word	0x20000178

08004d7c <_close_r>:
 8004d7c:	2300      	movs	r3, #0
 8004d7e:	b570      	push	{r4, r5, r6, lr}
 8004d80:	4d06      	ldr	r5, [pc, #24]	@ (8004d9c <_close_r+0x20>)
 8004d82:	0004      	movs	r4, r0
 8004d84:	0008      	movs	r0, r1
 8004d86:	602b      	str	r3, [r5, #0]
 8004d88:	f7fd ff51 	bl	8002c2e <_close>
 8004d8c:	1c43      	adds	r3, r0, #1
 8004d8e:	d103      	bne.n	8004d98 <_close_r+0x1c>
 8004d90:	682b      	ldr	r3, [r5, #0]
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	d000      	beq.n	8004d98 <_close_r+0x1c>
 8004d96:	6023      	str	r3, [r4, #0]
 8004d98:	bd70      	pop	{r4, r5, r6, pc}
 8004d9a:	46c0      	nop			@ (mov r8, r8)
 8004d9c:	200007bc 	.word	0x200007bc

08004da0 <_lseek_r>:
 8004da0:	b570      	push	{r4, r5, r6, lr}
 8004da2:	0004      	movs	r4, r0
 8004da4:	0008      	movs	r0, r1
 8004da6:	0011      	movs	r1, r2
 8004da8:	001a      	movs	r2, r3
 8004daa:	2300      	movs	r3, #0
 8004dac:	4d05      	ldr	r5, [pc, #20]	@ (8004dc4 <_lseek_r+0x24>)
 8004dae:	602b      	str	r3, [r5, #0]
 8004db0:	f7fd ff5e 	bl	8002c70 <_lseek>
 8004db4:	1c43      	adds	r3, r0, #1
 8004db6:	d103      	bne.n	8004dc0 <_lseek_r+0x20>
 8004db8:	682b      	ldr	r3, [r5, #0]
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	d000      	beq.n	8004dc0 <_lseek_r+0x20>
 8004dbe:	6023      	str	r3, [r4, #0]
 8004dc0:	bd70      	pop	{r4, r5, r6, pc}
 8004dc2:	46c0      	nop			@ (mov r8, r8)
 8004dc4:	200007bc 	.word	0x200007bc

08004dc8 <_read_r>:
 8004dc8:	b570      	push	{r4, r5, r6, lr}
 8004dca:	0004      	movs	r4, r0
 8004dcc:	0008      	movs	r0, r1
 8004dce:	0011      	movs	r1, r2
 8004dd0:	001a      	movs	r2, r3
 8004dd2:	2300      	movs	r3, #0
 8004dd4:	4d05      	ldr	r5, [pc, #20]	@ (8004dec <_read_r+0x24>)
 8004dd6:	602b      	str	r3, [r5, #0]
 8004dd8:	f7fd fef0 	bl	8002bbc <_read>
 8004ddc:	1c43      	adds	r3, r0, #1
 8004dde:	d103      	bne.n	8004de8 <_read_r+0x20>
 8004de0:	682b      	ldr	r3, [r5, #0]
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	d000      	beq.n	8004de8 <_read_r+0x20>
 8004de6:	6023      	str	r3, [r4, #0]
 8004de8:	bd70      	pop	{r4, r5, r6, pc}
 8004dea:	46c0      	nop			@ (mov r8, r8)
 8004dec:	200007bc 	.word	0x200007bc

08004df0 <_write_r>:
 8004df0:	b570      	push	{r4, r5, r6, lr}
 8004df2:	0004      	movs	r4, r0
 8004df4:	0008      	movs	r0, r1
 8004df6:	0011      	movs	r1, r2
 8004df8:	001a      	movs	r2, r3
 8004dfa:	2300      	movs	r3, #0
 8004dfc:	4d05      	ldr	r5, [pc, #20]	@ (8004e14 <_write_r+0x24>)
 8004dfe:	602b      	str	r3, [r5, #0]
 8004e00:	f7fd fef9 	bl	8002bf6 <_write>
 8004e04:	1c43      	adds	r3, r0, #1
 8004e06:	d103      	bne.n	8004e10 <_write_r+0x20>
 8004e08:	682b      	ldr	r3, [r5, #0]
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d000      	beq.n	8004e10 <_write_r+0x20>
 8004e0e:	6023      	str	r3, [r4, #0]
 8004e10:	bd70      	pop	{r4, r5, r6, pc}
 8004e12:	46c0      	nop			@ (mov r8, r8)
 8004e14:	200007bc 	.word	0x200007bc

08004e18 <__errno>:
 8004e18:	4b01      	ldr	r3, [pc, #4]	@ (8004e20 <__errno+0x8>)
 8004e1a:	6818      	ldr	r0, [r3, #0]
 8004e1c:	4770      	bx	lr
 8004e1e:	46c0      	nop			@ (mov r8, r8)
 8004e20:	20000038 	.word	0x20000038

08004e24 <__libc_init_array>:
 8004e24:	b570      	push	{r4, r5, r6, lr}
 8004e26:	2600      	movs	r6, #0
 8004e28:	4c0c      	ldr	r4, [pc, #48]	@ (8004e5c <__libc_init_array+0x38>)
 8004e2a:	4d0d      	ldr	r5, [pc, #52]	@ (8004e60 <__libc_init_array+0x3c>)
 8004e2c:	1b64      	subs	r4, r4, r5
 8004e2e:	10a4      	asrs	r4, r4, #2
 8004e30:	42a6      	cmp	r6, r4
 8004e32:	d109      	bne.n	8004e48 <__libc_init_array+0x24>
 8004e34:	2600      	movs	r6, #0
 8004e36:	f001 ff5f 	bl	8006cf8 <_init>
 8004e3a:	4c0a      	ldr	r4, [pc, #40]	@ (8004e64 <__libc_init_array+0x40>)
 8004e3c:	4d0a      	ldr	r5, [pc, #40]	@ (8004e68 <__libc_init_array+0x44>)
 8004e3e:	1b64      	subs	r4, r4, r5
 8004e40:	10a4      	asrs	r4, r4, #2
 8004e42:	42a6      	cmp	r6, r4
 8004e44:	d105      	bne.n	8004e52 <__libc_init_array+0x2e>
 8004e46:	bd70      	pop	{r4, r5, r6, pc}
 8004e48:	00b3      	lsls	r3, r6, #2
 8004e4a:	58eb      	ldr	r3, [r5, r3]
 8004e4c:	4798      	blx	r3
 8004e4e:	3601      	adds	r6, #1
 8004e50:	e7ee      	b.n	8004e30 <__libc_init_array+0xc>
 8004e52:	00b3      	lsls	r3, r6, #2
 8004e54:	58eb      	ldr	r3, [r5, r3]
 8004e56:	4798      	blx	r3
 8004e58:	3601      	adds	r6, #1
 8004e5a:	e7f2      	b.n	8004e42 <__libc_init_array+0x1e>
 8004e5c:	080085c8 	.word	0x080085c8
 8004e60:	080085c8 	.word	0x080085c8
 8004e64:	080085cc 	.word	0x080085cc
 8004e68:	080085c8 	.word	0x080085c8

08004e6c <__retarget_lock_init_recursive>:
 8004e6c:	4770      	bx	lr

08004e6e <__retarget_lock_acquire_recursive>:
 8004e6e:	4770      	bx	lr

08004e70 <__retarget_lock_release_recursive>:
 8004e70:	4770      	bx	lr

08004e72 <memchr>:
 8004e72:	b2c9      	uxtb	r1, r1
 8004e74:	1882      	adds	r2, r0, r2
 8004e76:	4290      	cmp	r0, r2
 8004e78:	d101      	bne.n	8004e7e <memchr+0xc>
 8004e7a:	2000      	movs	r0, #0
 8004e7c:	4770      	bx	lr
 8004e7e:	7803      	ldrb	r3, [r0, #0]
 8004e80:	428b      	cmp	r3, r1
 8004e82:	d0fb      	beq.n	8004e7c <memchr+0xa>
 8004e84:	3001      	adds	r0, #1
 8004e86:	e7f6      	b.n	8004e76 <memchr+0x4>

08004e88 <quorem>:
 8004e88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e8a:	6902      	ldr	r2, [r0, #16]
 8004e8c:	690f      	ldr	r7, [r1, #16]
 8004e8e:	b087      	sub	sp, #28
 8004e90:	0006      	movs	r6, r0
 8004e92:	000b      	movs	r3, r1
 8004e94:	2000      	movs	r0, #0
 8004e96:	9102      	str	r1, [sp, #8]
 8004e98:	42ba      	cmp	r2, r7
 8004e9a:	db6d      	blt.n	8004f78 <quorem+0xf0>
 8004e9c:	3f01      	subs	r7, #1
 8004e9e:	00bc      	lsls	r4, r7, #2
 8004ea0:	3314      	adds	r3, #20
 8004ea2:	9305      	str	r3, [sp, #20]
 8004ea4:	191b      	adds	r3, r3, r4
 8004ea6:	9303      	str	r3, [sp, #12]
 8004ea8:	0033      	movs	r3, r6
 8004eaa:	3314      	adds	r3, #20
 8004eac:	191c      	adds	r4, r3, r4
 8004eae:	9301      	str	r3, [sp, #4]
 8004eb0:	6823      	ldr	r3, [r4, #0]
 8004eb2:	9304      	str	r3, [sp, #16]
 8004eb4:	9b03      	ldr	r3, [sp, #12]
 8004eb6:	9804      	ldr	r0, [sp, #16]
 8004eb8:	681d      	ldr	r5, [r3, #0]
 8004eba:	3501      	adds	r5, #1
 8004ebc:	0029      	movs	r1, r5
 8004ebe:	f7fb f93f 	bl	8000140 <__udivsi3>
 8004ec2:	9b04      	ldr	r3, [sp, #16]
 8004ec4:	9000      	str	r0, [sp, #0]
 8004ec6:	42ab      	cmp	r3, r5
 8004ec8:	d32b      	bcc.n	8004f22 <quorem+0x9a>
 8004eca:	9b05      	ldr	r3, [sp, #20]
 8004ecc:	9d01      	ldr	r5, [sp, #4]
 8004ece:	469c      	mov	ip, r3
 8004ed0:	2300      	movs	r3, #0
 8004ed2:	9305      	str	r3, [sp, #20]
 8004ed4:	9304      	str	r3, [sp, #16]
 8004ed6:	4662      	mov	r2, ip
 8004ed8:	ca08      	ldmia	r2!, {r3}
 8004eda:	6828      	ldr	r0, [r5, #0]
 8004edc:	4694      	mov	ip, r2
 8004ede:	9a00      	ldr	r2, [sp, #0]
 8004ee0:	b299      	uxth	r1, r3
 8004ee2:	4351      	muls	r1, r2
 8004ee4:	9a05      	ldr	r2, [sp, #20]
 8004ee6:	0c1b      	lsrs	r3, r3, #16
 8004ee8:	1889      	adds	r1, r1, r2
 8004eea:	9a00      	ldr	r2, [sp, #0]
 8004eec:	4353      	muls	r3, r2
 8004eee:	0c0a      	lsrs	r2, r1, #16
 8004ef0:	189b      	adds	r3, r3, r2
 8004ef2:	0c1a      	lsrs	r2, r3, #16
 8004ef4:	b289      	uxth	r1, r1
 8004ef6:	9205      	str	r2, [sp, #20]
 8004ef8:	b282      	uxth	r2, r0
 8004efa:	1a52      	subs	r2, r2, r1
 8004efc:	9904      	ldr	r1, [sp, #16]
 8004efe:	0c00      	lsrs	r0, r0, #16
 8004f00:	1852      	adds	r2, r2, r1
 8004f02:	b29b      	uxth	r3, r3
 8004f04:	1411      	asrs	r1, r2, #16
 8004f06:	1ac3      	subs	r3, r0, r3
 8004f08:	185b      	adds	r3, r3, r1
 8004f0a:	1419      	asrs	r1, r3, #16
 8004f0c:	b292      	uxth	r2, r2
 8004f0e:	041b      	lsls	r3, r3, #16
 8004f10:	431a      	orrs	r2, r3
 8004f12:	9b03      	ldr	r3, [sp, #12]
 8004f14:	9104      	str	r1, [sp, #16]
 8004f16:	c504      	stmia	r5!, {r2}
 8004f18:	4563      	cmp	r3, ip
 8004f1a:	d2dc      	bcs.n	8004ed6 <quorem+0x4e>
 8004f1c:	6823      	ldr	r3, [r4, #0]
 8004f1e:	2b00      	cmp	r3, #0
 8004f20:	d030      	beq.n	8004f84 <quorem+0xfc>
 8004f22:	0030      	movs	r0, r6
 8004f24:	9902      	ldr	r1, [sp, #8]
 8004f26:	f001 f9c5 	bl	80062b4 <__mcmp>
 8004f2a:	2800      	cmp	r0, #0
 8004f2c:	db23      	blt.n	8004f76 <quorem+0xee>
 8004f2e:	0034      	movs	r4, r6
 8004f30:	2500      	movs	r5, #0
 8004f32:	9902      	ldr	r1, [sp, #8]
 8004f34:	3414      	adds	r4, #20
 8004f36:	3114      	adds	r1, #20
 8004f38:	6823      	ldr	r3, [r4, #0]
 8004f3a:	c901      	ldmia	r1!, {r0}
 8004f3c:	9302      	str	r3, [sp, #8]
 8004f3e:	466b      	mov	r3, sp
 8004f40:	891b      	ldrh	r3, [r3, #8]
 8004f42:	b282      	uxth	r2, r0
 8004f44:	1a9a      	subs	r2, r3, r2
 8004f46:	9b02      	ldr	r3, [sp, #8]
 8004f48:	1952      	adds	r2, r2, r5
 8004f4a:	0c00      	lsrs	r0, r0, #16
 8004f4c:	0c1b      	lsrs	r3, r3, #16
 8004f4e:	1a1b      	subs	r3, r3, r0
 8004f50:	1410      	asrs	r0, r2, #16
 8004f52:	181b      	adds	r3, r3, r0
 8004f54:	141d      	asrs	r5, r3, #16
 8004f56:	b292      	uxth	r2, r2
 8004f58:	041b      	lsls	r3, r3, #16
 8004f5a:	431a      	orrs	r2, r3
 8004f5c:	9b03      	ldr	r3, [sp, #12]
 8004f5e:	c404      	stmia	r4!, {r2}
 8004f60:	428b      	cmp	r3, r1
 8004f62:	d2e9      	bcs.n	8004f38 <quorem+0xb0>
 8004f64:	9a01      	ldr	r2, [sp, #4]
 8004f66:	00bb      	lsls	r3, r7, #2
 8004f68:	18d3      	adds	r3, r2, r3
 8004f6a:	681a      	ldr	r2, [r3, #0]
 8004f6c:	2a00      	cmp	r2, #0
 8004f6e:	d013      	beq.n	8004f98 <quorem+0x110>
 8004f70:	9b00      	ldr	r3, [sp, #0]
 8004f72:	3301      	adds	r3, #1
 8004f74:	9300      	str	r3, [sp, #0]
 8004f76:	9800      	ldr	r0, [sp, #0]
 8004f78:	b007      	add	sp, #28
 8004f7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f7c:	6823      	ldr	r3, [r4, #0]
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d104      	bne.n	8004f8c <quorem+0x104>
 8004f82:	3f01      	subs	r7, #1
 8004f84:	9b01      	ldr	r3, [sp, #4]
 8004f86:	3c04      	subs	r4, #4
 8004f88:	42a3      	cmp	r3, r4
 8004f8a:	d3f7      	bcc.n	8004f7c <quorem+0xf4>
 8004f8c:	6137      	str	r7, [r6, #16]
 8004f8e:	e7c8      	b.n	8004f22 <quorem+0x9a>
 8004f90:	681a      	ldr	r2, [r3, #0]
 8004f92:	2a00      	cmp	r2, #0
 8004f94:	d104      	bne.n	8004fa0 <quorem+0x118>
 8004f96:	3f01      	subs	r7, #1
 8004f98:	9a01      	ldr	r2, [sp, #4]
 8004f9a:	3b04      	subs	r3, #4
 8004f9c:	429a      	cmp	r2, r3
 8004f9e:	d3f7      	bcc.n	8004f90 <quorem+0x108>
 8004fa0:	6137      	str	r7, [r6, #16]
 8004fa2:	e7e5      	b.n	8004f70 <quorem+0xe8>

08004fa4 <_dtoa_r>:
 8004fa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004fa6:	0014      	movs	r4, r2
 8004fa8:	001d      	movs	r5, r3
 8004faa:	69c6      	ldr	r6, [r0, #28]
 8004fac:	b09d      	sub	sp, #116	@ 0x74
 8004fae:	940a      	str	r4, [sp, #40]	@ 0x28
 8004fb0:	950b      	str	r5, [sp, #44]	@ 0x2c
 8004fb2:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 8004fb4:	9003      	str	r0, [sp, #12]
 8004fb6:	2e00      	cmp	r6, #0
 8004fb8:	d10f      	bne.n	8004fda <_dtoa_r+0x36>
 8004fba:	2010      	movs	r0, #16
 8004fbc:	f000 fe30 	bl	8005c20 <malloc>
 8004fc0:	9b03      	ldr	r3, [sp, #12]
 8004fc2:	1e02      	subs	r2, r0, #0
 8004fc4:	61d8      	str	r0, [r3, #28]
 8004fc6:	d104      	bne.n	8004fd2 <_dtoa_r+0x2e>
 8004fc8:	21ef      	movs	r1, #239	@ 0xef
 8004fca:	4bc7      	ldr	r3, [pc, #796]	@ (80052e8 <_dtoa_r+0x344>)
 8004fcc:	48c7      	ldr	r0, [pc, #796]	@ (80052ec <_dtoa_r+0x348>)
 8004fce:	f001 fb55 	bl	800667c <__assert_func>
 8004fd2:	6046      	str	r6, [r0, #4]
 8004fd4:	6086      	str	r6, [r0, #8]
 8004fd6:	6006      	str	r6, [r0, #0]
 8004fd8:	60c6      	str	r6, [r0, #12]
 8004fda:	9b03      	ldr	r3, [sp, #12]
 8004fdc:	69db      	ldr	r3, [r3, #28]
 8004fde:	6819      	ldr	r1, [r3, #0]
 8004fe0:	2900      	cmp	r1, #0
 8004fe2:	d00b      	beq.n	8004ffc <_dtoa_r+0x58>
 8004fe4:	685a      	ldr	r2, [r3, #4]
 8004fe6:	2301      	movs	r3, #1
 8004fe8:	4093      	lsls	r3, r2
 8004fea:	604a      	str	r2, [r1, #4]
 8004fec:	608b      	str	r3, [r1, #8]
 8004fee:	9803      	ldr	r0, [sp, #12]
 8004ff0:	f000 ff16 	bl	8005e20 <_Bfree>
 8004ff4:	2200      	movs	r2, #0
 8004ff6:	9b03      	ldr	r3, [sp, #12]
 8004ff8:	69db      	ldr	r3, [r3, #28]
 8004ffa:	601a      	str	r2, [r3, #0]
 8004ffc:	2d00      	cmp	r5, #0
 8004ffe:	da1e      	bge.n	800503e <_dtoa_r+0x9a>
 8005000:	2301      	movs	r3, #1
 8005002:	603b      	str	r3, [r7, #0]
 8005004:	006b      	lsls	r3, r5, #1
 8005006:	085b      	lsrs	r3, r3, #1
 8005008:	930b      	str	r3, [sp, #44]	@ 0x2c
 800500a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800500c:	4bb8      	ldr	r3, [pc, #736]	@ (80052f0 <_dtoa_r+0x34c>)
 800500e:	4ab8      	ldr	r2, [pc, #736]	@ (80052f0 <_dtoa_r+0x34c>)
 8005010:	403b      	ands	r3, r7
 8005012:	4293      	cmp	r3, r2
 8005014:	d116      	bne.n	8005044 <_dtoa_r+0xa0>
 8005016:	4bb7      	ldr	r3, [pc, #732]	@ (80052f4 <_dtoa_r+0x350>)
 8005018:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800501a:	6013      	str	r3, [r2, #0]
 800501c:	033b      	lsls	r3, r7, #12
 800501e:	0b1b      	lsrs	r3, r3, #12
 8005020:	4323      	orrs	r3, r4
 8005022:	d101      	bne.n	8005028 <_dtoa_r+0x84>
 8005024:	f000 fd83 	bl	8005b2e <_dtoa_r+0xb8a>
 8005028:	4bb3      	ldr	r3, [pc, #716]	@ (80052f8 <_dtoa_r+0x354>)
 800502a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 800502c:	9308      	str	r3, [sp, #32]
 800502e:	2a00      	cmp	r2, #0
 8005030:	d002      	beq.n	8005038 <_dtoa_r+0x94>
 8005032:	4bb2      	ldr	r3, [pc, #712]	@ (80052fc <_dtoa_r+0x358>)
 8005034:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005036:	6013      	str	r3, [r2, #0]
 8005038:	9808      	ldr	r0, [sp, #32]
 800503a:	b01d      	add	sp, #116	@ 0x74
 800503c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800503e:	2300      	movs	r3, #0
 8005040:	603b      	str	r3, [r7, #0]
 8005042:	e7e2      	b.n	800500a <_dtoa_r+0x66>
 8005044:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005046:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005048:	9212      	str	r2, [sp, #72]	@ 0x48
 800504a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800504c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800504e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005050:	2200      	movs	r2, #0
 8005052:	2300      	movs	r3, #0
 8005054:	f7fb f9fa 	bl	800044c <__aeabi_dcmpeq>
 8005058:	1e06      	subs	r6, r0, #0
 800505a:	d00b      	beq.n	8005074 <_dtoa_r+0xd0>
 800505c:	2301      	movs	r3, #1
 800505e:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8005060:	6013      	str	r3, [r2, #0]
 8005062:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8005064:	2b00      	cmp	r3, #0
 8005066:	d002      	beq.n	800506e <_dtoa_r+0xca>
 8005068:	4ba5      	ldr	r3, [pc, #660]	@ (8005300 <_dtoa_r+0x35c>)
 800506a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 800506c:	6013      	str	r3, [r2, #0]
 800506e:	4ba5      	ldr	r3, [pc, #660]	@ (8005304 <_dtoa_r+0x360>)
 8005070:	9308      	str	r3, [sp, #32]
 8005072:	e7e1      	b.n	8005038 <_dtoa_r+0x94>
 8005074:	ab1a      	add	r3, sp, #104	@ 0x68
 8005076:	9301      	str	r3, [sp, #4]
 8005078:	ab1b      	add	r3, sp, #108	@ 0x6c
 800507a:	9300      	str	r3, [sp, #0]
 800507c:	9803      	ldr	r0, [sp, #12]
 800507e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8005080:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005082:	f001 f9cd 	bl	8006420 <__d2b>
 8005086:	007a      	lsls	r2, r7, #1
 8005088:	9005      	str	r0, [sp, #20]
 800508a:	0d52      	lsrs	r2, r2, #21
 800508c:	d100      	bne.n	8005090 <_dtoa_r+0xec>
 800508e:	e07b      	b.n	8005188 <_dtoa_r+0x1e4>
 8005090:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005092:	9618      	str	r6, [sp, #96]	@ 0x60
 8005094:	0319      	lsls	r1, r3, #12
 8005096:	4b9c      	ldr	r3, [pc, #624]	@ (8005308 <_dtoa_r+0x364>)
 8005098:	0b09      	lsrs	r1, r1, #12
 800509a:	430b      	orrs	r3, r1
 800509c:	499b      	ldr	r1, [pc, #620]	@ (800530c <_dtoa_r+0x368>)
 800509e:	1857      	adds	r7, r2, r1
 80050a0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80050a2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80050a4:	0019      	movs	r1, r3
 80050a6:	2200      	movs	r2, #0
 80050a8:	4b99      	ldr	r3, [pc, #612]	@ (8005310 <_dtoa_r+0x36c>)
 80050aa:	f7fc fc6d 	bl	8001988 <__aeabi_dsub>
 80050ae:	4a99      	ldr	r2, [pc, #612]	@ (8005314 <_dtoa_r+0x370>)
 80050b0:	4b99      	ldr	r3, [pc, #612]	@ (8005318 <_dtoa_r+0x374>)
 80050b2:	f7fc f9a1 	bl	80013f8 <__aeabi_dmul>
 80050b6:	4a99      	ldr	r2, [pc, #612]	@ (800531c <_dtoa_r+0x378>)
 80050b8:	4b99      	ldr	r3, [pc, #612]	@ (8005320 <_dtoa_r+0x37c>)
 80050ba:	f7fb f9f5 	bl	80004a8 <__aeabi_dadd>
 80050be:	0004      	movs	r4, r0
 80050c0:	0038      	movs	r0, r7
 80050c2:	000d      	movs	r5, r1
 80050c4:	f7fd f85a 	bl	800217c <__aeabi_i2d>
 80050c8:	4a96      	ldr	r2, [pc, #600]	@ (8005324 <_dtoa_r+0x380>)
 80050ca:	4b97      	ldr	r3, [pc, #604]	@ (8005328 <_dtoa_r+0x384>)
 80050cc:	f7fc f994 	bl	80013f8 <__aeabi_dmul>
 80050d0:	0002      	movs	r2, r0
 80050d2:	000b      	movs	r3, r1
 80050d4:	0020      	movs	r0, r4
 80050d6:	0029      	movs	r1, r5
 80050d8:	f7fb f9e6 	bl	80004a8 <__aeabi_dadd>
 80050dc:	0004      	movs	r4, r0
 80050de:	000d      	movs	r5, r1
 80050e0:	f7fd f810 	bl	8002104 <__aeabi_d2iz>
 80050e4:	2200      	movs	r2, #0
 80050e6:	9004      	str	r0, [sp, #16]
 80050e8:	2300      	movs	r3, #0
 80050ea:	0020      	movs	r0, r4
 80050ec:	0029      	movs	r1, r5
 80050ee:	f7fb f9b3 	bl	8000458 <__aeabi_dcmplt>
 80050f2:	2800      	cmp	r0, #0
 80050f4:	d00b      	beq.n	800510e <_dtoa_r+0x16a>
 80050f6:	9804      	ldr	r0, [sp, #16]
 80050f8:	f7fd f840 	bl	800217c <__aeabi_i2d>
 80050fc:	002b      	movs	r3, r5
 80050fe:	0022      	movs	r2, r4
 8005100:	f7fb f9a4 	bl	800044c <__aeabi_dcmpeq>
 8005104:	4243      	negs	r3, r0
 8005106:	4158      	adcs	r0, r3
 8005108:	9b04      	ldr	r3, [sp, #16]
 800510a:	1a1b      	subs	r3, r3, r0
 800510c:	9304      	str	r3, [sp, #16]
 800510e:	2301      	movs	r3, #1
 8005110:	9315      	str	r3, [sp, #84]	@ 0x54
 8005112:	9b04      	ldr	r3, [sp, #16]
 8005114:	2b16      	cmp	r3, #22
 8005116:	d810      	bhi.n	800513a <_dtoa_r+0x196>
 8005118:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800511a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800511c:	9a04      	ldr	r2, [sp, #16]
 800511e:	4b83      	ldr	r3, [pc, #524]	@ (800532c <_dtoa_r+0x388>)
 8005120:	00d2      	lsls	r2, r2, #3
 8005122:	189b      	adds	r3, r3, r2
 8005124:	681a      	ldr	r2, [r3, #0]
 8005126:	685b      	ldr	r3, [r3, #4]
 8005128:	f7fb f996 	bl	8000458 <__aeabi_dcmplt>
 800512c:	2800      	cmp	r0, #0
 800512e:	d047      	beq.n	80051c0 <_dtoa_r+0x21c>
 8005130:	9b04      	ldr	r3, [sp, #16]
 8005132:	3b01      	subs	r3, #1
 8005134:	9304      	str	r3, [sp, #16]
 8005136:	2300      	movs	r3, #0
 8005138:	9315      	str	r3, [sp, #84]	@ 0x54
 800513a:	2200      	movs	r2, #0
 800513c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800513e:	9206      	str	r2, [sp, #24]
 8005140:	1bdb      	subs	r3, r3, r7
 8005142:	1e5a      	subs	r2, r3, #1
 8005144:	d53e      	bpl.n	80051c4 <_dtoa_r+0x220>
 8005146:	2201      	movs	r2, #1
 8005148:	1ad3      	subs	r3, r2, r3
 800514a:	9306      	str	r3, [sp, #24]
 800514c:	2300      	movs	r3, #0
 800514e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005150:	9b04      	ldr	r3, [sp, #16]
 8005152:	2b00      	cmp	r3, #0
 8005154:	db38      	blt.n	80051c8 <_dtoa_r+0x224>
 8005156:	9a04      	ldr	r2, [sp, #16]
 8005158:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800515a:	4694      	mov	ip, r2
 800515c:	4463      	add	r3, ip
 800515e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005160:	2300      	movs	r3, #0
 8005162:	9214      	str	r2, [sp, #80]	@ 0x50
 8005164:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005166:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005168:	2401      	movs	r4, #1
 800516a:	2b09      	cmp	r3, #9
 800516c:	d867      	bhi.n	800523e <_dtoa_r+0x29a>
 800516e:	2b05      	cmp	r3, #5
 8005170:	dd02      	ble.n	8005178 <_dtoa_r+0x1d4>
 8005172:	2400      	movs	r4, #0
 8005174:	3b04      	subs	r3, #4
 8005176:	9322      	str	r3, [sp, #136]	@ 0x88
 8005178:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800517a:	1e98      	subs	r0, r3, #2
 800517c:	2803      	cmp	r0, #3
 800517e:	d867      	bhi.n	8005250 <_dtoa_r+0x2ac>
 8005180:	f7fa ffca 	bl	8000118 <__gnu_thumb1_case_uqi>
 8005184:	5b383a2b 	.word	0x5b383a2b
 8005188:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800518a:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 800518c:	18f6      	adds	r6, r6, r3
 800518e:	4b68      	ldr	r3, [pc, #416]	@ (8005330 <_dtoa_r+0x38c>)
 8005190:	18f2      	adds	r2, r6, r3
 8005192:	2a20      	cmp	r2, #32
 8005194:	dd0f      	ble.n	80051b6 <_dtoa_r+0x212>
 8005196:	2340      	movs	r3, #64	@ 0x40
 8005198:	1a9b      	subs	r3, r3, r2
 800519a:	409f      	lsls	r7, r3
 800519c:	4b65      	ldr	r3, [pc, #404]	@ (8005334 <_dtoa_r+0x390>)
 800519e:	0038      	movs	r0, r7
 80051a0:	18f3      	adds	r3, r6, r3
 80051a2:	40dc      	lsrs	r4, r3
 80051a4:	4320      	orrs	r0, r4
 80051a6:	f7fd f817 	bl	80021d8 <__aeabi_ui2d>
 80051aa:	2201      	movs	r2, #1
 80051ac:	4b62      	ldr	r3, [pc, #392]	@ (8005338 <_dtoa_r+0x394>)
 80051ae:	1e77      	subs	r7, r6, #1
 80051b0:	18cb      	adds	r3, r1, r3
 80051b2:	9218      	str	r2, [sp, #96]	@ 0x60
 80051b4:	e776      	b.n	80050a4 <_dtoa_r+0x100>
 80051b6:	2320      	movs	r3, #32
 80051b8:	0020      	movs	r0, r4
 80051ba:	1a9b      	subs	r3, r3, r2
 80051bc:	4098      	lsls	r0, r3
 80051be:	e7f2      	b.n	80051a6 <_dtoa_r+0x202>
 80051c0:	9015      	str	r0, [sp, #84]	@ 0x54
 80051c2:	e7ba      	b.n	800513a <_dtoa_r+0x196>
 80051c4:	920d      	str	r2, [sp, #52]	@ 0x34
 80051c6:	e7c3      	b.n	8005150 <_dtoa_r+0x1ac>
 80051c8:	9b06      	ldr	r3, [sp, #24]
 80051ca:	9a04      	ldr	r2, [sp, #16]
 80051cc:	1a9b      	subs	r3, r3, r2
 80051ce:	9306      	str	r3, [sp, #24]
 80051d0:	4253      	negs	r3, r2
 80051d2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80051d4:	2300      	movs	r3, #0
 80051d6:	9314      	str	r3, [sp, #80]	@ 0x50
 80051d8:	e7c5      	b.n	8005166 <_dtoa_r+0x1c2>
 80051da:	2300      	movs	r3, #0
 80051dc:	9310      	str	r3, [sp, #64]	@ 0x40
 80051de:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80051e0:	930e      	str	r3, [sp, #56]	@ 0x38
 80051e2:	9309      	str	r3, [sp, #36]	@ 0x24
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	dc13      	bgt.n	8005210 <_dtoa_r+0x26c>
 80051e8:	2301      	movs	r3, #1
 80051ea:	001a      	movs	r2, r3
 80051ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80051ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80051f0:	9223      	str	r2, [sp, #140]	@ 0x8c
 80051f2:	e00d      	b.n	8005210 <_dtoa_r+0x26c>
 80051f4:	2301      	movs	r3, #1
 80051f6:	e7f1      	b.n	80051dc <_dtoa_r+0x238>
 80051f8:	2300      	movs	r3, #0
 80051fa:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80051fc:	9310      	str	r3, [sp, #64]	@ 0x40
 80051fe:	4694      	mov	ip, r2
 8005200:	9b04      	ldr	r3, [sp, #16]
 8005202:	4463      	add	r3, ip
 8005204:	930e      	str	r3, [sp, #56]	@ 0x38
 8005206:	3301      	adds	r3, #1
 8005208:	9309      	str	r3, [sp, #36]	@ 0x24
 800520a:	2b00      	cmp	r3, #0
 800520c:	dc00      	bgt.n	8005210 <_dtoa_r+0x26c>
 800520e:	2301      	movs	r3, #1
 8005210:	9a03      	ldr	r2, [sp, #12]
 8005212:	2100      	movs	r1, #0
 8005214:	69d0      	ldr	r0, [r2, #28]
 8005216:	2204      	movs	r2, #4
 8005218:	0015      	movs	r5, r2
 800521a:	3514      	adds	r5, #20
 800521c:	429d      	cmp	r5, r3
 800521e:	d91b      	bls.n	8005258 <_dtoa_r+0x2b4>
 8005220:	6041      	str	r1, [r0, #4]
 8005222:	9803      	ldr	r0, [sp, #12]
 8005224:	f000 fdb8 	bl	8005d98 <_Balloc>
 8005228:	9008      	str	r0, [sp, #32]
 800522a:	2800      	cmp	r0, #0
 800522c:	d117      	bne.n	800525e <_dtoa_r+0x2ba>
 800522e:	21b0      	movs	r1, #176	@ 0xb0
 8005230:	4b42      	ldr	r3, [pc, #264]	@ (800533c <_dtoa_r+0x398>)
 8005232:	482e      	ldr	r0, [pc, #184]	@ (80052ec <_dtoa_r+0x348>)
 8005234:	9a08      	ldr	r2, [sp, #32]
 8005236:	31ff      	adds	r1, #255	@ 0xff
 8005238:	e6c9      	b.n	8004fce <_dtoa_r+0x2a>
 800523a:	2301      	movs	r3, #1
 800523c:	e7dd      	b.n	80051fa <_dtoa_r+0x256>
 800523e:	2300      	movs	r3, #0
 8005240:	9410      	str	r4, [sp, #64]	@ 0x40
 8005242:	9322      	str	r3, [sp, #136]	@ 0x88
 8005244:	3b01      	subs	r3, #1
 8005246:	930e      	str	r3, [sp, #56]	@ 0x38
 8005248:	9309      	str	r3, [sp, #36]	@ 0x24
 800524a:	2200      	movs	r2, #0
 800524c:	3313      	adds	r3, #19
 800524e:	e7cf      	b.n	80051f0 <_dtoa_r+0x24c>
 8005250:	2301      	movs	r3, #1
 8005252:	9310      	str	r3, [sp, #64]	@ 0x40
 8005254:	3b02      	subs	r3, #2
 8005256:	e7f6      	b.n	8005246 <_dtoa_r+0x2a2>
 8005258:	3101      	adds	r1, #1
 800525a:	0052      	lsls	r2, r2, #1
 800525c:	e7dc      	b.n	8005218 <_dtoa_r+0x274>
 800525e:	9b03      	ldr	r3, [sp, #12]
 8005260:	9a08      	ldr	r2, [sp, #32]
 8005262:	69db      	ldr	r3, [r3, #28]
 8005264:	601a      	str	r2, [r3, #0]
 8005266:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005268:	2b0e      	cmp	r3, #14
 800526a:	d900      	bls.n	800526e <_dtoa_r+0x2ca>
 800526c:	e0d9      	b.n	8005422 <_dtoa_r+0x47e>
 800526e:	2c00      	cmp	r4, #0
 8005270:	d100      	bne.n	8005274 <_dtoa_r+0x2d0>
 8005272:	e0d6      	b.n	8005422 <_dtoa_r+0x47e>
 8005274:	9b04      	ldr	r3, [sp, #16]
 8005276:	2b00      	cmp	r3, #0
 8005278:	dd64      	ble.n	8005344 <_dtoa_r+0x3a0>
 800527a:	210f      	movs	r1, #15
 800527c:	9a04      	ldr	r2, [sp, #16]
 800527e:	4b2b      	ldr	r3, [pc, #172]	@ (800532c <_dtoa_r+0x388>)
 8005280:	400a      	ands	r2, r1
 8005282:	00d2      	lsls	r2, r2, #3
 8005284:	189b      	adds	r3, r3, r2
 8005286:	681e      	ldr	r6, [r3, #0]
 8005288:	685f      	ldr	r7, [r3, #4]
 800528a:	9b04      	ldr	r3, [sp, #16]
 800528c:	2402      	movs	r4, #2
 800528e:	111d      	asrs	r5, r3, #4
 8005290:	05db      	lsls	r3, r3, #23
 8005292:	d50a      	bpl.n	80052aa <_dtoa_r+0x306>
 8005294:	4b2a      	ldr	r3, [pc, #168]	@ (8005340 <_dtoa_r+0x39c>)
 8005296:	400d      	ands	r5, r1
 8005298:	6a1a      	ldr	r2, [r3, #32]
 800529a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800529c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800529e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80052a0:	f7fb fc66 	bl	8000b70 <__aeabi_ddiv>
 80052a4:	900a      	str	r0, [sp, #40]	@ 0x28
 80052a6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80052a8:	3401      	adds	r4, #1
 80052aa:	4b25      	ldr	r3, [pc, #148]	@ (8005340 <_dtoa_r+0x39c>)
 80052ac:	930c      	str	r3, [sp, #48]	@ 0x30
 80052ae:	2d00      	cmp	r5, #0
 80052b0:	d108      	bne.n	80052c4 <_dtoa_r+0x320>
 80052b2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80052b4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80052b6:	0032      	movs	r2, r6
 80052b8:	003b      	movs	r3, r7
 80052ba:	f7fb fc59 	bl	8000b70 <__aeabi_ddiv>
 80052be:	900a      	str	r0, [sp, #40]	@ 0x28
 80052c0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80052c2:	e05a      	b.n	800537a <_dtoa_r+0x3d6>
 80052c4:	2301      	movs	r3, #1
 80052c6:	421d      	tst	r5, r3
 80052c8:	d009      	beq.n	80052de <_dtoa_r+0x33a>
 80052ca:	18e4      	adds	r4, r4, r3
 80052cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80052ce:	0030      	movs	r0, r6
 80052d0:	681a      	ldr	r2, [r3, #0]
 80052d2:	685b      	ldr	r3, [r3, #4]
 80052d4:	0039      	movs	r1, r7
 80052d6:	f7fc f88f 	bl	80013f8 <__aeabi_dmul>
 80052da:	0006      	movs	r6, r0
 80052dc:	000f      	movs	r7, r1
 80052de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80052e0:	106d      	asrs	r5, r5, #1
 80052e2:	3308      	adds	r3, #8
 80052e4:	e7e2      	b.n	80052ac <_dtoa_r+0x308>
 80052e6:	46c0      	nop			@ (mov r8, r8)
 80052e8:	08008299 	.word	0x08008299
 80052ec:	080082b0 	.word	0x080082b0
 80052f0:	7ff00000 	.word	0x7ff00000
 80052f4:	0000270f 	.word	0x0000270f
 80052f8:	08008295 	.word	0x08008295
 80052fc:	08008298 	.word	0x08008298
 8005300:	08008269 	.word	0x08008269
 8005304:	08008268 	.word	0x08008268
 8005308:	3ff00000 	.word	0x3ff00000
 800530c:	fffffc01 	.word	0xfffffc01
 8005310:	3ff80000 	.word	0x3ff80000
 8005314:	636f4361 	.word	0x636f4361
 8005318:	3fd287a7 	.word	0x3fd287a7
 800531c:	8b60c8b3 	.word	0x8b60c8b3
 8005320:	3fc68a28 	.word	0x3fc68a28
 8005324:	509f79fb 	.word	0x509f79fb
 8005328:	3fd34413 	.word	0x3fd34413
 800532c:	080083a8 	.word	0x080083a8
 8005330:	00000432 	.word	0x00000432
 8005334:	00000412 	.word	0x00000412
 8005338:	fe100000 	.word	0xfe100000
 800533c:	08008308 	.word	0x08008308
 8005340:	08008380 	.word	0x08008380
 8005344:	9b04      	ldr	r3, [sp, #16]
 8005346:	2402      	movs	r4, #2
 8005348:	2b00      	cmp	r3, #0
 800534a:	d016      	beq.n	800537a <_dtoa_r+0x3d6>
 800534c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800534e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005350:	220f      	movs	r2, #15
 8005352:	425d      	negs	r5, r3
 8005354:	402a      	ands	r2, r5
 8005356:	4bd7      	ldr	r3, [pc, #860]	@ (80056b4 <_dtoa_r+0x710>)
 8005358:	00d2      	lsls	r2, r2, #3
 800535a:	189b      	adds	r3, r3, r2
 800535c:	681a      	ldr	r2, [r3, #0]
 800535e:	685b      	ldr	r3, [r3, #4]
 8005360:	f7fc f84a 	bl	80013f8 <__aeabi_dmul>
 8005364:	2701      	movs	r7, #1
 8005366:	2300      	movs	r3, #0
 8005368:	900a      	str	r0, [sp, #40]	@ 0x28
 800536a:	910b      	str	r1, [sp, #44]	@ 0x2c
 800536c:	4ed2      	ldr	r6, [pc, #840]	@ (80056b8 <_dtoa_r+0x714>)
 800536e:	112d      	asrs	r5, r5, #4
 8005370:	2d00      	cmp	r5, #0
 8005372:	d000      	beq.n	8005376 <_dtoa_r+0x3d2>
 8005374:	e0ba      	b.n	80054ec <_dtoa_r+0x548>
 8005376:	2b00      	cmp	r3, #0
 8005378:	d1a1      	bne.n	80052be <_dtoa_r+0x31a>
 800537a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800537c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800537e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8005380:	2b00      	cmp	r3, #0
 8005382:	d100      	bne.n	8005386 <_dtoa_r+0x3e2>
 8005384:	e0bd      	b.n	8005502 <_dtoa_r+0x55e>
 8005386:	2200      	movs	r2, #0
 8005388:	0030      	movs	r0, r6
 800538a:	0039      	movs	r1, r7
 800538c:	4bcb      	ldr	r3, [pc, #812]	@ (80056bc <_dtoa_r+0x718>)
 800538e:	f7fb f863 	bl	8000458 <__aeabi_dcmplt>
 8005392:	2800      	cmp	r0, #0
 8005394:	d100      	bne.n	8005398 <_dtoa_r+0x3f4>
 8005396:	e0b4      	b.n	8005502 <_dtoa_r+0x55e>
 8005398:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800539a:	2b00      	cmp	r3, #0
 800539c:	d100      	bne.n	80053a0 <_dtoa_r+0x3fc>
 800539e:	e0b0      	b.n	8005502 <_dtoa_r+0x55e>
 80053a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	dd39      	ble.n	800541a <_dtoa_r+0x476>
 80053a6:	9b04      	ldr	r3, [sp, #16]
 80053a8:	2200      	movs	r2, #0
 80053aa:	3b01      	subs	r3, #1
 80053ac:	930c      	str	r3, [sp, #48]	@ 0x30
 80053ae:	0030      	movs	r0, r6
 80053b0:	4bc3      	ldr	r3, [pc, #780]	@ (80056c0 <_dtoa_r+0x71c>)
 80053b2:	0039      	movs	r1, r7
 80053b4:	f7fc f820 	bl	80013f8 <__aeabi_dmul>
 80053b8:	900a      	str	r0, [sp, #40]	@ 0x28
 80053ba:	910b      	str	r1, [sp, #44]	@ 0x2c
 80053bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80053be:	3401      	adds	r4, #1
 80053c0:	0020      	movs	r0, r4
 80053c2:	9311      	str	r3, [sp, #68]	@ 0x44
 80053c4:	f7fc feda 	bl	800217c <__aeabi_i2d>
 80053c8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80053ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80053cc:	f7fc f814 	bl	80013f8 <__aeabi_dmul>
 80053d0:	4bbc      	ldr	r3, [pc, #752]	@ (80056c4 <_dtoa_r+0x720>)
 80053d2:	2200      	movs	r2, #0
 80053d4:	f7fb f868 	bl	80004a8 <__aeabi_dadd>
 80053d8:	4bbb      	ldr	r3, [pc, #748]	@ (80056c8 <_dtoa_r+0x724>)
 80053da:	0006      	movs	r6, r0
 80053dc:	18cf      	adds	r7, r1, r3
 80053de:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d000      	beq.n	80053e6 <_dtoa_r+0x442>
 80053e4:	e091      	b.n	800550a <_dtoa_r+0x566>
 80053e6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80053e8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80053ea:	2200      	movs	r2, #0
 80053ec:	4bb7      	ldr	r3, [pc, #732]	@ (80056cc <_dtoa_r+0x728>)
 80053ee:	f7fc facb 	bl	8001988 <__aeabi_dsub>
 80053f2:	0032      	movs	r2, r6
 80053f4:	003b      	movs	r3, r7
 80053f6:	0004      	movs	r4, r0
 80053f8:	000d      	movs	r5, r1
 80053fa:	f7fb f841 	bl	8000480 <__aeabi_dcmpgt>
 80053fe:	2800      	cmp	r0, #0
 8005400:	d000      	beq.n	8005404 <_dtoa_r+0x460>
 8005402:	e29d      	b.n	8005940 <_dtoa_r+0x99c>
 8005404:	2180      	movs	r1, #128	@ 0x80
 8005406:	0609      	lsls	r1, r1, #24
 8005408:	187b      	adds	r3, r7, r1
 800540a:	0032      	movs	r2, r6
 800540c:	0020      	movs	r0, r4
 800540e:	0029      	movs	r1, r5
 8005410:	f7fb f822 	bl	8000458 <__aeabi_dcmplt>
 8005414:	2800      	cmp	r0, #0
 8005416:	d000      	beq.n	800541a <_dtoa_r+0x476>
 8005418:	e130      	b.n	800567c <_dtoa_r+0x6d8>
 800541a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800541c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800541e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005420:	940b      	str	r4, [sp, #44]	@ 0x2c
 8005422:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8005424:	2b00      	cmp	r3, #0
 8005426:	da00      	bge.n	800542a <_dtoa_r+0x486>
 8005428:	e177      	b.n	800571a <_dtoa_r+0x776>
 800542a:	9a04      	ldr	r2, [sp, #16]
 800542c:	2a0e      	cmp	r2, #14
 800542e:	dd00      	ble.n	8005432 <_dtoa_r+0x48e>
 8005430:	e173      	b.n	800571a <_dtoa_r+0x776>
 8005432:	4ba0      	ldr	r3, [pc, #640]	@ (80056b4 <_dtoa_r+0x710>)
 8005434:	00d2      	lsls	r2, r2, #3
 8005436:	189b      	adds	r3, r3, r2
 8005438:	685c      	ldr	r4, [r3, #4]
 800543a:	681b      	ldr	r3, [r3, #0]
 800543c:	9306      	str	r3, [sp, #24]
 800543e:	9407      	str	r4, [sp, #28]
 8005440:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8005442:	2b00      	cmp	r3, #0
 8005444:	da03      	bge.n	800544e <_dtoa_r+0x4aa>
 8005446:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005448:	2b00      	cmp	r3, #0
 800544a:	dc00      	bgt.n	800544e <_dtoa_r+0x4aa>
 800544c:	e106      	b.n	800565c <_dtoa_r+0x6b8>
 800544e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8005450:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005452:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005454:	9d08      	ldr	r5, [sp, #32]
 8005456:	3b01      	subs	r3, #1
 8005458:	195b      	adds	r3, r3, r5
 800545a:	930a      	str	r3, [sp, #40]	@ 0x28
 800545c:	9a06      	ldr	r2, [sp, #24]
 800545e:	9b07      	ldr	r3, [sp, #28]
 8005460:	0030      	movs	r0, r6
 8005462:	0039      	movs	r1, r7
 8005464:	f7fb fb84 	bl	8000b70 <__aeabi_ddiv>
 8005468:	f7fc fe4c 	bl	8002104 <__aeabi_d2iz>
 800546c:	9009      	str	r0, [sp, #36]	@ 0x24
 800546e:	f7fc fe85 	bl	800217c <__aeabi_i2d>
 8005472:	9a06      	ldr	r2, [sp, #24]
 8005474:	9b07      	ldr	r3, [sp, #28]
 8005476:	f7fb ffbf 	bl	80013f8 <__aeabi_dmul>
 800547a:	0002      	movs	r2, r0
 800547c:	000b      	movs	r3, r1
 800547e:	0030      	movs	r0, r6
 8005480:	0039      	movs	r1, r7
 8005482:	f7fc fa81 	bl	8001988 <__aeabi_dsub>
 8005486:	002b      	movs	r3, r5
 8005488:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800548a:	3501      	adds	r5, #1
 800548c:	3230      	adds	r2, #48	@ 0x30
 800548e:	701a      	strb	r2, [r3, #0]
 8005490:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005492:	002c      	movs	r4, r5
 8005494:	429a      	cmp	r2, r3
 8005496:	d000      	beq.n	800549a <_dtoa_r+0x4f6>
 8005498:	e131      	b.n	80056fe <_dtoa_r+0x75a>
 800549a:	0002      	movs	r2, r0
 800549c:	000b      	movs	r3, r1
 800549e:	f7fb f803 	bl	80004a8 <__aeabi_dadd>
 80054a2:	9a06      	ldr	r2, [sp, #24]
 80054a4:	9b07      	ldr	r3, [sp, #28]
 80054a6:	0006      	movs	r6, r0
 80054a8:	000f      	movs	r7, r1
 80054aa:	f7fa ffe9 	bl	8000480 <__aeabi_dcmpgt>
 80054ae:	2800      	cmp	r0, #0
 80054b0:	d000      	beq.n	80054b4 <_dtoa_r+0x510>
 80054b2:	e10f      	b.n	80056d4 <_dtoa_r+0x730>
 80054b4:	9a06      	ldr	r2, [sp, #24]
 80054b6:	9b07      	ldr	r3, [sp, #28]
 80054b8:	0030      	movs	r0, r6
 80054ba:	0039      	movs	r1, r7
 80054bc:	f7fa ffc6 	bl	800044c <__aeabi_dcmpeq>
 80054c0:	2800      	cmp	r0, #0
 80054c2:	d003      	beq.n	80054cc <_dtoa_r+0x528>
 80054c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80054c6:	07dd      	lsls	r5, r3, #31
 80054c8:	d500      	bpl.n	80054cc <_dtoa_r+0x528>
 80054ca:	e103      	b.n	80056d4 <_dtoa_r+0x730>
 80054cc:	9905      	ldr	r1, [sp, #20]
 80054ce:	9803      	ldr	r0, [sp, #12]
 80054d0:	f000 fca6 	bl	8005e20 <_Bfree>
 80054d4:	2300      	movs	r3, #0
 80054d6:	7023      	strb	r3, [r4, #0]
 80054d8:	9b04      	ldr	r3, [sp, #16]
 80054da:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80054dc:	3301      	adds	r3, #1
 80054de:	6013      	str	r3, [r2, #0]
 80054e0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d100      	bne.n	80054e8 <_dtoa_r+0x544>
 80054e6:	e5a7      	b.n	8005038 <_dtoa_r+0x94>
 80054e8:	601c      	str	r4, [r3, #0]
 80054ea:	e5a5      	b.n	8005038 <_dtoa_r+0x94>
 80054ec:	423d      	tst	r5, r7
 80054ee:	d005      	beq.n	80054fc <_dtoa_r+0x558>
 80054f0:	6832      	ldr	r2, [r6, #0]
 80054f2:	6873      	ldr	r3, [r6, #4]
 80054f4:	f7fb ff80 	bl	80013f8 <__aeabi_dmul>
 80054f8:	003b      	movs	r3, r7
 80054fa:	3401      	adds	r4, #1
 80054fc:	106d      	asrs	r5, r5, #1
 80054fe:	3608      	adds	r6, #8
 8005500:	e736      	b.n	8005370 <_dtoa_r+0x3cc>
 8005502:	9b04      	ldr	r3, [sp, #16]
 8005504:	930c      	str	r3, [sp, #48]	@ 0x30
 8005506:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005508:	e75a      	b.n	80053c0 <_dtoa_r+0x41c>
 800550a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800550c:	4b69      	ldr	r3, [pc, #420]	@ (80056b4 <_dtoa_r+0x710>)
 800550e:	3a01      	subs	r2, #1
 8005510:	00d2      	lsls	r2, r2, #3
 8005512:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8005514:	189b      	adds	r3, r3, r2
 8005516:	681a      	ldr	r2, [r3, #0]
 8005518:	685b      	ldr	r3, [r3, #4]
 800551a:	2900      	cmp	r1, #0
 800551c:	d04c      	beq.n	80055b8 <_dtoa_r+0x614>
 800551e:	2000      	movs	r0, #0
 8005520:	496b      	ldr	r1, [pc, #428]	@ (80056d0 <_dtoa_r+0x72c>)
 8005522:	f7fb fb25 	bl	8000b70 <__aeabi_ddiv>
 8005526:	0032      	movs	r2, r6
 8005528:	003b      	movs	r3, r7
 800552a:	f7fc fa2d 	bl	8001988 <__aeabi_dsub>
 800552e:	9a08      	ldr	r2, [sp, #32]
 8005530:	0006      	movs	r6, r0
 8005532:	4694      	mov	ip, r2
 8005534:	000f      	movs	r7, r1
 8005536:	9b08      	ldr	r3, [sp, #32]
 8005538:	9316      	str	r3, [sp, #88]	@ 0x58
 800553a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800553c:	4463      	add	r3, ip
 800553e:	9311      	str	r3, [sp, #68]	@ 0x44
 8005540:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005542:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005544:	f7fc fdde 	bl	8002104 <__aeabi_d2iz>
 8005548:	0005      	movs	r5, r0
 800554a:	f7fc fe17 	bl	800217c <__aeabi_i2d>
 800554e:	0002      	movs	r2, r0
 8005550:	000b      	movs	r3, r1
 8005552:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005554:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005556:	f7fc fa17 	bl	8001988 <__aeabi_dsub>
 800555a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800555c:	3530      	adds	r5, #48	@ 0x30
 800555e:	1c5c      	adds	r4, r3, #1
 8005560:	701d      	strb	r5, [r3, #0]
 8005562:	0032      	movs	r2, r6
 8005564:	003b      	movs	r3, r7
 8005566:	900a      	str	r0, [sp, #40]	@ 0x28
 8005568:	910b      	str	r1, [sp, #44]	@ 0x2c
 800556a:	f7fa ff75 	bl	8000458 <__aeabi_dcmplt>
 800556e:	2800      	cmp	r0, #0
 8005570:	d16a      	bne.n	8005648 <_dtoa_r+0x6a4>
 8005572:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005574:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005576:	2000      	movs	r0, #0
 8005578:	4950      	ldr	r1, [pc, #320]	@ (80056bc <_dtoa_r+0x718>)
 800557a:	f7fc fa05 	bl	8001988 <__aeabi_dsub>
 800557e:	0032      	movs	r2, r6
 8005580:	003b      	movs	r3, r7
 8005582:	f7fa ff69 	bl	8000458 <__aeabi_dcmplt>
 8005586:	2800      	cmp	r0, #0
 8005588:	d000      	beq.n	800558c <_dtoa_r+0x5e8>
 800558a:	e0a5      	b.n	80056d8 <_dtoa_r+0x734>
 800558c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800558e:	42a3      	cmp	r3, r4
 8005590:	d100      	bne.n	8005594 <_dtoa_r+0x5f0>
 8005592:	e742      	b.n	800541a <_dtoa_r+0x476>
 8005594:	2200      	movs	r2, #0
 8005596:	0030      	movs	r0, r6
 8005598:	0039      	movs	r1, r7
 800559a:	4b49      	ldr	r3, [pc, #292]	@ (80056c0 <_dtoa_r+0x71c>)
 800559c:	f7fb ff2c 	bl	80013f8 <__aeabi_dmul>
 80055a0:	2200      	movs	r2, #0
 80055a2:	0006      	movs	r6, r0
 80055a4:	000f      	movs	r7, r1
 80055a6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80055a8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80055aa:	4b45      	ldr	r3, [pc, #276]	@ (80056c0 <_dtoa_r+0x71c>)
 80055ac:	f7fb ff24 	bl	80013f8 <__aeabi_dmul>
 80055b0:	9416      	str	r4, [sp, #88]	@ 0x58
 80055b2:	900a      	str	r0, [sp, #40]	@ 0x28
 80055b4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80055b6:	e7c3      	b.n	8005540 <_dtoa_r+0x59c>
 80055b8:	0030      	movs	r0, r6
 80055ba:	0039      	movs	r1, r7
 80055bc:	f7fb ff1c 	bl	80013f8 <__aeabi_dmul>
 80055c0:	9d08      	ldr	r5, [sp, #32]
 80055c2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80055c4:	002b      	movs	r3, r5
 80055c6:	4694      	mov	ip, r2
 80055c8:	9016      	str	r0, [sp, #88]	@ 0x58
 80055ca:	9117      	str	r1, [sp, #92]	@ 0x5c
 80055cc:	4463      	add	r3, ip
 80055ce:	9319      	str	r3, [sp, #100]	@ 0x64
 80055d0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80055d2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80055d4:	f7fc fd96 	bl	8002104 <__aeabi_d2iz>
 80055d8:	0004      	movs	r4, r0
 80055da:	f7fc fdcf 	bl	800217c <__aeabi_i2d>
 80055de:	000b      	movs	r3, r1
 80055e0:	0002      	movs	r2, r0
 80055e2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80055e4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80055e6:	f7fc f9cf 	bl	8001988 <__aeabi_dsub>
 80055ea:	3430      	adds	r4, #48	@ 0x30
 80055ec:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80055ee:	702c      	strb	r4, [r5, #0]
 80055f0:	3501      	adds	r5, #1
 80055f2:	0006      	movs	r6, r0
 80055f4:	000f      	movs	r7, r1
 80055f6:	42ab      	cmp	r3, r5
 80055f8:	d129      	bne.n	800564e <_dtoa_r+0x6aa>
 80055fa:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80055fc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80055fe:	9b08      	ldr	r3, [sp, #32]
 8005600:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8005602:	469c      	mov	ip, r3
 8005604:	2200      	movs	r2, #0
 8005606:	4b32      	ldr	r3, [pc, #200]	@ (80056d0 <_dtoa_r+0x72c>)
 8005608:	4464      	add	r4, ip
 800560a:	f7fa ff4d 	bl	80004a8 <__aeabi_dadd>
 800560e:	0002      	movs	r2, r0
 8005610:	000b      	movs	r3, r1
 8005612:	0030      	movs	r0, r6
 8005614:	0039      	movs	r1, r7
 8005616:	f7fa ff33 	bl	8000480 <__aeabi_dcmpgt>
 800561a:	2800      	cmp	r0, #0
 800561c:	d15c      	bne.n	80056d8 <_dtoa_r+0x734>
 800561e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8005620:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8005622:	2000      	movs	r0, #0
 8005624:	492a      	ldr	r1, [pc, #168]	@ (80056d0 <_dtoa_r+0x72c>)
 8005626:	f7fc f9af 	bl	8001988 <__aeabi_dsub>
 800562a:	0002      	movs	r2, r0
 800562c:	000b      	movs	r3, r1
 800562e:	0030      	movs	r0, r6
 8005630:	0039      	movs	r1, r7
 8005632:	f7fa ff11 	bl	8000458 <__aeabi_dcmplt>
 8005636:	2800      	cmp	r0, #0
 8005638:	d100      	bne.n	800563c <_dtoa_r+0x698>
 800563a:	e6ee      	b.n	800541a <_dtoa_r+0x476>
 800563c:	0023      	movs	r3, r4
 800563e:	3c01      	subs	r4, #1
 8005640:	7822      	ldrb	r2, [r4, #0]
 8005642:	2a30      	cmp	r2, #48	@ 0x30
 8005644:	d0fa      	beq.n	800563c <_dtoa_r+0x698>
 8005646:	001c      	movs	r4, r3
 8005648:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800564a:	9304      	str	r3, [sp, #16]
 800564c:	e73e      	b.n	80054cc <_dtoa_r+0x528>
 800564e:	2200      	movs	r2, #0
 8005650:	4b1b      	ldr	r3, [pc, #108]	@ (80056c0 <_dtoa_r+0x71c>)
 8005652:	f7fb fed1 	bl	80013f8 <__aeabi_dmul>
 8005656:	900a      	str	r0, [sp, #40]	@ 0x28
 8005658:	910b      	str	r1, [sp, #44]	@ 0x2c
 800565a:	e7b9      	b.n	80055d0 <_dtoa_r+0x62c>
 800565c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800565e:	2b00      	cmp	r3, #0
 8005660:	d10c      	bne.n	800567c <_dtoa_r+0x6d8>
 8005662:	9806      	ldr	r0, [sp, #24]
 8005664:	9907      	ldr	r1, [sp, #28]
 8005666:	2200      	movs	r2, #0
 8005668:	4b18      	ldr	r3, [pc, #96]	@ (80056cc <_dtoa_r+0x728>)
 800566a:	f7fb fec5 	bl	80013f8 <__aeabi_dmul>
 800566e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005670:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005672:	f7fa ff0f 	bl	8000494 <__aeabi_dcmpge>
 8005676:	2800      	cmp	r0, #0
 8005678:	d100      	bne.n	800567c <_dtoa_r+0x6d8>
 800567a:	e164      	b.n	8005946 <_dtoa_r+0x9a2>
 800567c:	2600      	movs	r6, #0
 800567e:	0037      	movs	r7, r6
 8005680:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8005682:	9c08      	ldr	r4, [sp, #32]
 8005684:	43db      	mvns	r3, r3
 8005686:	930c      	str	r3, [sp, #48]	@ 0x30
 8005688:	2300      	movs	r3, #0
 800568a:	9304      	str	r3, [sp, #16]
 800568c:	0031      	movs	r1, r6
 800568e:	9803      	ldr	r0, [sp, #12]
 8005690:	f000 fbc6 	bl	8005e20 <_Bfree>
 8005694:	2f00      	cmp	r7, #0
 8005696:	d0d7      	beq.n	8005648 <_dtoa_r+0x6a4>
 8005698:	9b04      	ldr	r3, [sp, #16]
 800569a:	2b00      	cmp	r3, #0
 800569c:	d005      	beq.n	80056aa <_dtoa_r+0x706>
 800569e:	42bb      	cmp	r3, r7
 80056a0:	d003      	beq.n	80056aa <_dtoa_r+0x706>
 80056a2:	0019      	movs	r1, r3
 80056a4:	9803      	ldr	r0, [sp, #12]
 80056a6:	f000 fbbb 	bl	8005e20 <_Bfree>
 80056aa:	0039      	movs	r1, r7
 80056ac:	9803      	ldr	r0, [sp, #12]
 80056ae:	f000 fbb7 	bl	8005e20 <_Bfree>
 80056b2:	e7c9      	b.n	8005648 <_dtoa_r+0x6a4>
 80056b4:	080083a8 	.word	0x080083a8
 80056b8:	08008380 	.word	0x08008380
 80056bc:	3ff00000 	.word	0x3ff00000
 80056c0:	40240000 	.word	0x40240000
 80056c4:	401c0000 	.word	0x401c0000
 80056c8:	fcc00000 	.word	0xfcc00000
 80056cc:	40140000 	.word	0x40140000
 80056d0:	3fe00000 	.word	0x3fe00000
 80056d4:	9b04      	ldr	r3, [sp, #16]
 80056d6:	930c      	str	r3, [sp, #48]	@ 0x30
 80056d8:	0023      	movs	r3, r4
 80056da:	001c      	movs	r4, r3
 80056dc:	3b01      	subs	r3, #1
 80056de:	781a      	ldrb	r2, [r3, #0]
 80056e0:	2a39      	cmp	r2, #57	@ 0x39
 80056e2:	d108      	bne.n	80056f6 <_dtoa_r+0x752>
 80056e4:	9a08      	ldr	r2, [sp, #32]
 80056e6:	429a      	cmp	r2, r3
 80056e8:	d1f7      	bne.n	80056da <_dtoa_r+0x736>
 80056ea:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80056ec:	9908      	ldr	r1, [sp, #32]
 80056ee:	3201      	adds	r2, #1
 80056f0:	920c      	str	r2, [sp, #48]	@ 0x30
 80056f2:	2230      	movs	r2, #48	@ 0x30
 80056f4:	700a      	strb	r2, [r1, #0]
 80056f6:	781a      	ldrb	r2, [r3, #0]
 80056f8:	3201      	adds	r2, #1
 80056fa:	701a      	strb	r2, [r3, #0]
 80056fc:	e7a4      	b.n	8005648 <_dtoa_r+0x6a4>
 80056fe:	2200      	movs	r2, #0
 8005700:	4bc6      	ldr	r3, [pc, #792]	@ (8005a1c <_dtoa_r+0xa78>)
 8005702:	f7fb fe79 	bl	80013f8 <__aeabi_dmul>
 8005706:	2200      	movs	r2, #0
 8005708:	2300      	movs	r3, #0
 800570a:	0006      	movs	r6, r0
 800570c:	000f      	movs	r7, r1
 800570e:	f7fa fe9d 	bl	800044c <__aeabi_dcmpeq>
 8005712:	2800      	cmp	r0, #0
 8005714:	d100      	bne.n	8005718 <_dtoa_r+0x774>
 8005716:	e6a1      	b.n	800545c <_dtoa_r+0x4b8>
 8005718:	e6d8      	b.n	80054cc <_dtoa_r+0x528>
 800571a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800571c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 800571e:	9c06      	ldr	r4, [sp, #24]
 8005720:	2f00      	cmp	r7, #0
 8005722:	d014      	beq.n	800574e <_dtoa_r+0x7aa>
 8005724:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8005726:	2a01      	cmp	r2, #1
 8005728:	dd00      	ble.n	800572c <_dtoa_r+0x788>
 800572a:	e0c8      	b.n	80058be <_dtoa_r+0x91a>
 800572c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 800572e:	2a00      	cmp	r2, #0
 8005730:	d100      	bne.n	8005734 <_dtoa_r+0x790>
 8005732:	e0be      	b.n	80058b2 <_dtoa_r+0x90e>
 8005734:	4aba      	ldr	r2, [pc, #744]	@ (8005a20 <_dtoa_r+0xa7c>)
 8005736:	189b      	adds	r3, r3, r2
 8005738:	9a06      	ldr	r2, [sp, #24]
 800573a:	2101      	movs	r1, #1
 800573c:	18d2      	adds	r2, r2, r3
 800573e:	9206      	str	r2, [sp, #24]
 8005740:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005742:	9803      	ldr	r0, [sp, #12]
 8005744:	18d3      	adds	r3, r2, r3
 8005746:	930d      	str	r3, [sp, #52]	@ 0x34
 8005748:	f000 fc22 	bl	8005f90 <__i2b>
 800574c:	0007      	movs	r7, r0
 800574e:	2c00      	cmp	r4, #0
 8005750:	d00e      	beq.n	8005770 <_dtoa_r+0x7cc>
 8005752:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005754:	2b00      	cmp	r3, #0
 8005756:	dd0b      	ble.n	8005770 <_dtoa_r+0x7cc>
 8005758:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800575a:	0023      	movs	r3, r4
 800575c:	4294      	cmp	r4, r2
 800575e:	dd00      	ble.n	8005762 <_dtoa_r+0x7be>
 8005760:	0013      	movs	r3, r2
 8005762:	9a06      	ldr	r2, [sp, #24]
 8005764:	1ae4      	subs	r4, r4, r3
 8005766:	1ad2      	subs	r2, r2, r3
 8005768:	9206      	str	r2, [sp, #24]
 800576a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800576c:	1ad3      	subs	r3, r2, r3
 800576e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005770:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005772:	2b00      	cmp	r3, #0
 8005774:	d01f      	beq.n	80057b6 <_dtoa_r+0x812>
 8005776:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005778:	2b00      	cmp	r3, #0
 800577a:	d100      	bne.n	800577e <_dtoa_r+0x7da>
 800577c:	e0b5      	b.n	80058ea <_dtoa_r+0x946>
 800577e:	2d00      	cmp	r5, #0
 8005780:	d010      	beq.n	80057a4 <_dtoa_r+0x800>
 8005782:	0039      	movs	r1, r7
 8005784:	002a      	movs	r2, r5
 8005786:	9803      	ldr	r0, [sp, #12]
 8005788:	f000 fccc 	bl	8006124 <__pow5mult>
 800578c:	9a05      	ldr	r2, [sp, #20]
 800578e:	0001      	movs	r1, r0
 8005790:	0007      	movs	r7, r0
 8005792:	9803      	ldr	r0, [sp, #12]
 8005794:	f000 fc14 	bl	8005fc0 <__multiply>
 8005798:	0006      	movs	r6, r0
 800579a:	9905      	ldr	r1, [sp, #20]
 800579c:	9803      	ldr	r0, [sp, #12]
 800579e:	f000 fb3f 	bl	8005e20 <_Bfree>
 80057a2:	9605      	str	r6, [sp, #20]
 80057a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80057a6:	1b5a      	subs	r2, r3, r5
 80057a8:	42ab      	cmp	r3, r5
 80057aa:	d004      	beq.n	80057b6 <_dtoa_r+0x812>
 80057ac:	9905      	ldr	r1, [sp, #20]
 80057ae:	9803      	ldr	r0, [sp, #12]
 80057b0:	f000 fcb8 	bl	8006124 <__pow5mult>
 80057b4:	9005      	str	r0, [sp, #20]
 80057b6:	2101      	movs	r1, #1
 80057b8:	9803      	ldr	r0, [sp, #12]
 80057ba:	f000 fbe9 	bl	8005f90 <__i2b>
 80057be:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80057c0:	0006      	movs	r6, r0
 80057c2:	2b00      	cmp	r3, #0
 80057c4:	d100      	bne.n	80057c8 <_dtoa_r+0x824>
 80057c6:	e1bc      	b.n	8005b42 <_dtoa_r+0xb9e>
 80057c8:	001a      	movs	r2, r3
 80057ca:	0001      	movs	r1, r0
 80057cc:	9803      	ldr	r0, [sp, #12]
 80057ce:	f000 fca9 	bl	8006124 <__pow5mult>
 80057d2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80057d4:	0006      	movs	r6, r0
 80057d6:	2500      	movs	r5, #0
 80057d8:	2b01      	cmp	r3, #1
 80057da:	dc16      	bgt.n	800580a <_dtoa_r+0x866>
 80057dc:	2500      	movs	r5, #0
 80057de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80057e0:	42ab      	cmp	r3, r5
 80057e2:	d10e      	bne.n	8005802 <_dtoa_r+0x85e>
 80057e4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80057e6:	031b      	lsls	r3, r3, #12
 80057e8:	42ab      	cmp	r3, r5
 80057ea:	d10a      	bne.n	8005802 <_dtoa_r+0x85e>
 80057ec:	4b8d      	ldr	r3, [pc, #564]	@ (8005a24 <_dtoa_r+0xa80>)
 80057ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80057f0:	4213      	tst	r3, r2
 80057f2:	d006      	beq.n	8005802 <_dtoa_r+0x85e>
 80057f4:	9b06      	ldr	r3, [sp, #24]
 80057f6:	3501      	adds	r5, #1
 80057f8:	3301      	adds	r3, #1
 80057fa:	9306      	str	r3, [sp, #24]
 80057fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80057fe:	3301      	adds	r3, #1
 8005800:	930d      	str	r3, [sp, #52]	@ 0x34
 8005802:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005804:	2001      	movs	r0, #1
 8005806:	2b00      	cmp	r3, #0
 8005808:	d008      	beq.n	800581c <_dtoa_r+0x878>
 800580a:	6933      	ldr	r3, [r6, #16]
 800580c:	3303      	adds	r3, #3
 800580e:	009b      	lsls	r3, r3, #2
 8005810:	18f3      	adds	r3, r6, r3
 8005812:	6858      	ldr	r0, [r3, #4]
 8005814:	f000 fb6c 	bl	8005ef0 <__hi0bits>
 8005818:	2320      	movs	r3, #32
 800581a:	1a18      	subs	r0, r3, r0
 800581c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800581e:	1818      	adds	r0, r3, r0
 8005820:	0002      	movs	r2, r0
 8005822:	231f      	movs	r3, #31
 8005824:	401a      	ands	r2, r3
 8005826:	4218      	tst	r0, r3
 8005828:	d065      	beq.n	80058f6 <_dtoa_r+0x952>
 800582a:	3301      	adds	r3, #1
 800582c:	1a9b      	subs	r3, r3, r2
 800582e:	2b04      	cmp	r3, #4
 8005830:	dd5d      	ble.n	80058ee <_dtoa_r+0x94a>
 8005832:	231c      	movs	r3, #28
 8005834:	1a9b      	subs	r3, r3, r2
 8005836:	9a06      	ldr	r2, [sp, #24]
 8005838:	18e4      	adds	r4, r4, r3
 800583a:	18d2      	adds	r2, r2, r3
 800583c:	9206      	str	r2, [sp, #24]
 800583e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005840:	18d3      	adds	r3, r2, r3
 8005842:	930d      	str	r3, [sp, #52]	@ 0x34
 8005844:	9b06      	ldr	r3, [sp, #24]
 8005846:	2b00      	cmp	r3, #0
 8005848:	dd05      	ble.n	8005856 <_dtoa_r+0x8b2>
 800584a:	001a      	movs	r2, r3
 800584c:	9905      	ldr	r1, [sp, #20]
 800584e:	9803      	ldr	r0, [sp, #12]
 8005850:	f000 fcc4 	bl	80061dc <__lshift>
 8005854:	9005      	str	r0, [sp, #20]
 8005856:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005858:	2b00      	cmp	r3, #0
 800585a:	dd05      	ble.n	8005868 <_dtoa_r+0x8c4>
 800585c:	0031      	movs	r1, r6
 800585e:	001a      	movs	r2, r3
 8005860:	9803      	ldr	r0, [sp, #12]
 8005862:	f000 fcbb 	bl	80061dc <__lshift>
 8005866:	0006      	movs	r6, r0
 8005868:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800586a:	2b00      	cmp	r3, #0
 800586c:	d045      	beq.n	80058fa <_dtoa_r+0x956>
 800586e:	0031      	movs	r1, r6
 8005870:	9805      	ldr	r0, [sp, #20]
 8005872:	f000 fd1f 	bl	80062b4 <__mcmp>
 8005876:	2800      	cmp	r0, #0
 8005878:	da3f      	bge.n	80058fa <_dtoa_r+0x956>
 800587a:	9b04      	ldr	r3, [sp, #16]
 800587c:	220a      	movs	r2, #10
 800587e:	3b01      	subs	r3, #1
 8005880:	930c      	str	r3, [sp, #48]	@ 0x30
 8005882:	9905      	ldr	r1, [sp, #20]
 8005884:	2300      	movs	r3, #0
 8005886:	9803      	ldr	r0, [sp, #12]
 8005888:	f000 faee 	bl	8005e68 <__multadd>
 800588c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800588e:	9005      	str	r0, [sp, #20]
 8005890:	2b00      	cmp	r3, #0
 8005892:	d100      	bne.n	8005896 <_dtoa_r+0x8f2>
 8005894:	e15c      	b.n	8005b50 <_dtoa_r+0xbac>
 8005896:	2300      	movs	r3, #0
 8005898:	0039      	movs	r1, r7
 800589a:	220a      	movs	r2, #10
 800589c:	9803      	ldr	r0, [sp, #12]
 800589e:	f000 fae3 	bl	8005e68 <__multadd>
 80058a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058a4:	0007      	movs	r7, r0
 80058a6:	2b00      	cmp	r3, #0
 80058a8:	dc55      	bgt.n	8005956 <_dtoa_r+0x9b2>
 80058aa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80058ac:	2b02      	cmp	r3, #2
 80058ae:	dc2d      	bgt.n	800590c <_dtoa_r+0x968>
 80058b0:	e051      	b.n	8005956 <_dtoa_r+0x9b2>
 80058b2:	2336      	movs	r3, #54	@ 0x36
 80058b4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80058b6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80058b8:	9c06      	ldr	r4, [sp, #24]
 80058ba:	1a9b      	subs	r3, r3, r2
 80058bc:	e73c      	b.n	8005738 <_dtoa_r+0x794>
 80058be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80058c0:	1e5d      	subs	r5, r3, #1
 80058c2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058c4:	42ab      	cmp	r3, r5
 80058c6:	db08      	blt.n	80058da <_dtoa_r+0x936>
 80058c8:	1b5d      	subs	r5, r3, r5
 80058ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80058cc:	9c06      	ldr	r4, [sp, #24]
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	db00      	blt.n	80058d4 <_dtoa_r+0x930>
 80058d2:	e731      	b.n	8005738 <_dtoa_r+0x794>
 80058d4:	1ae4      	subs	r4, r4, r3
 80058d6:	2300      	movs	r3, #0
 80058d8:	e72e      	b.n	8005738 <_dtoa_r+0x794>
 80058da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80058dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80058de:	1aeb      	subs	r3, r5, r3
 80058e0:	18d3      	adds	r3, r2, r3
 80058e2:	950f      	str	r5, [sp, #60]	@ 0x3c
 80058e4:	9314      	str	r3, [sp, #80]	@ 0x50
 80058e6:	2500      	movs	r5, #0
 80058e8:	e7ef      	b.n	80058ca <_dtoa_r+0x926>
 80058ea:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80058ec:	e75e      	b.n	80057ac <_dtoa_r+0x808>
 80058ee:	2b04      	cmp	r3, #4
 80058f0:	d0a8      	beq.n	8005844 <_dtoa_r+0x8a0>
 80058f2:	331c      	adds	r3, #28
 80058f4:	e79f      	b.n	8005836 <_dtoa_r+0x892>
 80058f6:	0013      	movs	r3, r2
 80058f8:	e7fb      	b.n	80058f2 <_dtoa_r+0x94e>
 80058fa:	9b04      	ldr	r3, [sp, #16]
 80058fc:	930c      	str	r3, [sp, #48]	@ 0x30
 80058fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005900:	930e      	str	r3, [sp, #56]	@ 0x38
 8005902:	2b00      	cmp	r3, #0
 8005904:	dc23      	bgt.n	800594e <_dtoa_r+0x9aa>
 8005906:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005908:	2b02      	cmp	r3, #2
 800590a:	dd20      	ble.n	800594e <_dtoa_r+0x9aa>
 800590c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800590e:	2b00      	cmp	r3, #0
 8005910:	d000      	beq.n	8005914 <_dtoa_r+0x970>
 8005912:	e6b5      	b.n	8005680 <_dtoa_r+0x6dc>
 8005914:	0031      	movs	r1, r6
 8005916:	2205      	movs	r2, #5
 8005918:	9803      	ldr	r0, [sp, #12]
 800591a:	f000 faa5 	bl	8005e68 <__multadd>
 800591e:	0006      	movs	r6, r0
 8005920:	0001      	movs	r1, r0
 8005922:	9805      	ldr	r0, [sp, #20]
 8005924:	f000 fcc6 	bl	80062b4 <__mcmp>
 8005928:	2800      	cmp	r0, #0
 800592a:	dc00      	bgt.n	800592e <_dtoa_r+0x98a>
 800592c:	e6a8      	b.n	8005680 <_dtoa_r+0x6dc>
 800592e:	9b08      	ldr	r3, [sp, #32]
 8005930:	9a08      	ldr	r2, [sp, #32]
 8005932:	1c5c      	adds	r4, r3, #1
 8005934:	2331      	movs	r3, #49	@ 0x31
 8005936:	7013      	strb	r3, [r2, #0]
 8005938:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800593a:	3301      	adds	r3, #1
 800593c:	930c      	str	r3, [sp, #48]	@ 0x30
 800593e:	e6a3      	b.n	8005688 <_dtoa_r+0x6e4>
 8005940:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8005942:	0037      	movs	r7, r6
 8005944:	e7f3      	b.n	800592e <_dtoa_r+0x98a>
 8005946:	9b04      	ldr	r3, [sp, #16]
 8005948:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 800594a:	930c      	str	r3, [sp, #48]	@ 0x30
 800594c:	e7f9      	b.n	8005942 <_dtoa_r+0x99e>
 800594e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005950:	2b00      	cmp	r3, #0
 8005952:	d100      	bne.n	8005956 <_dtoa_r+0x9b2>
 8005954:	e100      	b.n	8005b58 <_dtoa_r+0xbb4>
 8005956:	2c00      	cmp	r4, #0
 8005958:	dd05      	ble.n	8005966 <_dtoa_r+0x9c2>
 800595a:	0039      	movs	r1, r7
 800595c:	0022      	movs	r2, r4
 800595e:	9803      	ldr	r0, [sp, #12]
 8005960:	f000 fc3c 	bl	80061dc <__lshift>
 8005964:	0007      	movs	r7, r0
 8005966:	0038      	movs	r0, r7
 8005968:	2d00      	cmp	r5, #0
 800596a:	d018      	beq.n	800599e <_dtoa_r+0x9fa>
 800596c:	6879      	ldr	r1, [r7, #4]
 800596e:	9803      	ldr	r0, [sp, #12]
 8005970:	f000 fa12 	bl	8005d98 <_Balloc>
 8005974:	1e04      	subs	r4, r0, #0
 8005976:	d105      	bne.n	8005984 <_dtoa_r+0x9e0>
 8005978:	0022      	movs	r2, r4
 800597a:	4b2b      	ldr	r3, [pc, #172]	@ (8005a28 <_dtoa_r+0xa84>)
 800597c:	482b      	ldr	r0, [pc, #172]	@ (8005a2c <_dtoa_r+0xa88>)
 800597e:	492c      	ldr	r1, [pc, #176]	@ (8005a30 <_dtoa_r+0xa8c>)
 8005980:	f7ff fb25 	bl	8004fce <_dtoa_r+0x2a>
 8005984:	0039      	movs	r1, r7
 8005986:	693a      	ldr	r2, [r7, #16]
 8005988:	310c      	adds	r1, #12
 800598a:	3202      	adds	r2, #2
 800598c:	0092      	lsls	r2, r2, #2
 800598e:	300c      	adds	r0, #12
 8005990:	f000 fe6a 	bl	8006668 <memcpy>
 8005994:	2201      	movs	r2, #1
 8005996:	0021      	movs	r1, r4
 8005998:	9803      	ldr	r0, [sp, #12]
 800599a:	f000 fc1f 	bl	80061dc <__lshift>
 800599e:	9b08      	ldr	r3, [sp, #32]
 80059a0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80059a2:	9306      	str	r3, [sp, #24]
 80059a4:	3b01      	subs	r3, #1
 80059a6:	189b      	adds	r3, r3, r2
 80059a8:	2201      	movs	r2, #1
 80059aa:	9704      	str	r7, [sp, #16]
 80059ac:	0007      	movs	r7, r0
 80059ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 80059b0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80059b2:	4013      	ands	r3, r2
 80059b4:	930e      	str	r3, [sp, #56]	@ 0x38
 80059b6:	0031      	movs	r1, r6
 80059b8:	9805      	ldr	r0, [sp, #20]
 80059ba:	f7ff fa65 	bl	8004e88 <quorem>
 80059be:	9904      	ldr	r1, [sp, #16]
 80059c0:	0005      	movs	r5, r0
 80059c2:	900a      	str	r0, [sp, #40]	@ 0x28
 80059c4:	9805      	ldr	r0, [sp, #20]
 80059c6:	f000 fc75 	bl	80062b4 <__mcmp>
 80059ca:	003a      	movs	r2, r7
 80059cc:	900d      	str	r0, [sp, #52]	@ 0x34
 80059ce:	0031      	movs	r1, r6
 80059d0:	9803      	ldr	r0, [sp, #12]
 80059d2:	f000 fc8b 	bl	80062ec <__mdiff>
 80059d6:	2201      	movs	r2, #1
 80059d8:	68c3      	ldr	r3, [r0, #12]
 80059da:	0004      	movs	r4, r0
 80059dc:	3530      	adds	r5, #48	@ 0x30
 80059de:	9209      	str	r2, [sp, #36]	@ 0x24
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	d104      	bne.n	80059ee <_dtoa_r+0xa4a>
 80059e4:	0001      	movs	r1, r0
 80059e6:	9805      	ldr	r0, [sp, #20]
 80059e8:	f000 fc64 	bl	80062b4 <__mcmp>
 80059ec:	9009      	str	r0, [sp, #36]	@ 0x24
 80059ee:	0021      	movs	r1, r4
 80059f0:	9803      	ldr	r0, [sp, #12]
 80059f2:	f000 fa15 	bl	8005e20 <_Bfree>
 80059f6:	9b06      	ldr	r3, [sp, #24]
 80059f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80059fa:	1c5c      	adds	r4, r3, #1
 80059fc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80059fe:	4313      	orrs	r3, r2
 8005a00:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005a02:	4313      	orrs	r3, r2
 8005a04:	d116      	bne.n	8005a34 <_dtoa_r+0xa90>
 8005a06:	2d39      	cmp	r5, #57	@ 0x39
 8005a08:	d02f      	beq.n	8005a6a <_dtoa_r+0xac6>
 8005a0a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005a0c:	2b00      	cmp	r3, #0
 8005a0e:	dd01      	ble.n	8005a14 <_dtoa_r+0xa70>
 8005a10:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8005a12:	3531      	adds	r5, #49	@ 0x31
 8005a14:	9b06      	ldr	r3, [sp, #24]
 8005a16:	701d      	strb	r5, [r3, #0]
 8005a18:	e638      	b.n	800568c <_dtoa_r+0x6e8>
 8005a1a:	46c0      	nop			@ (mov r8, r8)
 8005a1c:	40240000 	.word	0x40240000
 8005a20:	00000433 	.word	0x00000433
 8005a24:	7ff00000 	.word	0x7ff00000
 8005a28:	08008308 	.word	0x08008308
 8005a2c:	080082b0 	.word	0x080082b0
 8005a30:	000002ef 	.word	0x000002ef
 8005a34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005a36:	2b00      	cmp	r3, #0
 8005a38:	db04      	blt.n	8005a44 <_dtoa_r+0xaa0>
 8005a3a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8005a3c:	4313      	orrs	r3, r2
 8005a3e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005a40:	4313      	orrs	r3, r2
 8005a42:	d11e      	bne.n	8005a82 <_dtoa_r+0xade>
 8005a44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	dde4      	ble.n	8005a14 <_dtoa_r+0xa70>
 8005a4a:	9905      	ldr	r1, [sp, #20]
 8005a4c:	2201      	movs	r2, #1
 8005a4e:	9803      	ldr	r0, [sp, #12]
 8005a50:	f000 fbc4 	bl	80061dc <__lshift>
 8005a54:	0031      	movs	r1, r6
 8005a56:	9005      	str	r0, [sp, #20]
 8005a58:	f000 fc2c 	bl	80062b4 <__mcmp>
 8005a5c:	2800      	cmp	r0, #0
 8005a5e:	dc02      	bgt.n	8005a66 <_dtoa_r+0xac2>
 8005a60:	d1d8      	bne.n	8005a14 <_dtoa_r+0xa70>
 8005a62:	07eb      	lsls	r3, r5, #31
 8005a64:	d5d6      	bpl.n	8005a14 <_dtoa_r+0xa70>
 8005a66:	2d39      	cmp	r5, #57	@ 0x39
 8005a68:	d1d2      	bne.n	8005a10 <_dtoa_r+0xa6c>
 8005a6a:	2339      	movs	r3, #57	@ 0x39
 8005a6c:	9a06      	ldr	r2, [sp, #24]
 8005a6e:	7013      	strb	r3, [r2, #0]
 8005a70:	0023      	movs	r3, r4
 8005a72:	001c      	movs	r4, r3
 8005a74:	3b01      	subs	r3, #1
 8005a76:	781a      	ldrb	r2, [r3, #0]
 8005a78:	2a39      	cmp	r2, #57	@ 0x39
 8005a7a:	d04f      	beq.n	8005b1c <_dtoa_r+0xb78>
 8005a7c:	3201      	adds	r2, #1
 8005a7e:	701a      	strb	r2, [r3, #0]
 8005a80:	e604      	b.n	800568c <_dtoa_r+0x6e8>
 8005a82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	dd03      	ble.n	8005a90 <_dtoa_r+0xaec>
 8005a88:	2d39      	cmp	r5, #57	@ 0x39
 8005a8a:	d0ee      	beq.n	8005a6a <_dtoa_r+0xac6>
 8005a8c:	3501      	adds	r5, #1
 8005a8e:	e7c1      	b.n	8005a14 <_dtoa_r+0xa70>
 8005a90:	9b06      	ldr	r3, [sp, #24]
 8005a92:	9a06      	ldr	r2, [sp, #24]
 8005a94:	701d      	strb	r5, [r3, #0]
 8005a96:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005a98:	4293      	cmp	r3, r2
 8005a9a:	d02a      	beq.n	8005af2 <_dtoa_r+0xb4e>
 8005a9c:	2300      	movs	r3, #0
 8005a9e:	220a      	movs	r2, #10
 8005aa0:	9905      	ldr	r1, [sp, #20]
 8005aa2:	9803      	ldr	r0, [sp, #12]
 8005aa4:	f000 f9e0 	bl	8005e68 <__multadd>
 8005aa8:	9b04      	ldr	r3, [sp, #16]
 8005aaa:	9005      	str	r0, [sp, #20]
 8005aac:	42bb      	cmp	r3, r7
 8005aae:	d109      	bne.n	8005ac4 <_dtoa_r+0xb20>
 8005ab0:	2300      	movs	r3, #0
 8005ab2:	220a      	movs	r2, #10
 8005ab4:	9904      	ldr	r1, [sp, #16]
 8005ab6:	9803      	ldr	r0, [sp, #12]
 8005ab8:	f000 f9d6 	bl	8005e68 <__multadd>
 8005abc:	9004      	str	r0, [sp, #16]
 8005abe:	0007      	movs	r7, r0
 8005ac0:	9406      	str	r4, [sp, #24]
 8005ac2:	e778      	b.n	80059b6 <_dtoa_r+0xa12>
 8005ac4:	9904      	ldr	r1, [sp, #16]
 8005ac6:	2300      	movs	r3, #0
 8005ac8:	220a      	movs	r2, #10
 8005aca:	9803      	ldr	r0, [sp, #12]
 8005acc:	f000 f9cc 	bl	8005e68 <__multadd>
 8005ad0:	2300      	movs	r3, #0
 8005ad2:	9004      	str	r0, [sp, #16]
 8005ad4:	220a      	movs	r2, #10
 8005ad6:	0039      	movs	r1, r7
 8005ad8:	9803      	ldr	r0, [sp, #12]
 8005ada:	f000 f9c5 	bl	8005e68 <__multadd>
 8005ade:	e7ee      	b.n	8005abe <_dtoa_r+0xb1a>
 8005ae0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005ae2:	2401      	movs	r4, #1
 8005ae4:	2b00      	cmp	r3, #0
 8005ae6:	dd00      	ble.n	8005aea <_dtoa_r+0xb46>
 8005ae8:	001c      	movs	r4, r3
 8005aea:	9b08      	ldr	r3, [sp, #32]
 8005aec:	191c      	adds	r4, r3, r4
 8005aee:	2300      	movs	r3, #0
 8005af0:	9304      	str	r3, [sp, #16]
 8005af2:	9905      	ldr	r1, [sp, #20]
 8005af4:	2201      	movs	r2, #1
 8005af6:	9803      	ldr	r0, [sp, #12]
 8005af8:	f000 fb70 	bl	80061dc <__lshift>
 8005afc:	0031      	movs	r1, r6
 8005afe:	9005      	str	r0, [sp, #20]
 8005b00:	f000 fbd8 	bl	80062b4 <__mcmp>
 8005b04:	2800      	cmp	r0, #0
 8005b06:	dcb3      	bgt.n	8005a70 <_dtoa_r+0xacc>
 8005b08:	d101      	bne.n	8005b0e <_dtoa_r+0xb6a>
 8005b0a:	07ed      	lsls	r5, r5, #31
 8005b0c:	d4b0      	bmi.n	8005a70 <_dtoa_r+0xacc>
 8005b0e:	0023      	movs	r3, r4
 8005b10:	001c      	movs	r4, r3
 8005b12:	3b01      	subs	r3, #1
 8005b14:	781a      	ldrb	r2, [r3, #0]
 8005b16:	2a30      	cmp	r2, #48	@ 0x30
 8005b18:	d0fa      	beq.n	8005b10 <_dtoa_r+0xb6c>
 8005b1a:	e5b7      	b.n	800568c <_dtoa_r+0x6e8>
 8005b1c:	9a08      	ldr	r2, [sp, #32]
 8005b1e:	429a      	cmp	r2, r3
 8005b20:	d1a7      	bne.n	8005a72 <_dtoa_r+0xace>
 8005b22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005b24:	3301      	adds	r3, #1
 8005b26:	930c      	str	r3, [sp, #48]	@ 0x30
 8005b28:	2331      	movs	r3, #49	@ 0x31
 8005b2a:	7013      	strb	r3, [r2, #0]
 8005b2c:	e5ae      	b.n	800568c <_dtoa_r+0x6e8>
 8005b2e:	4b15      	ldr	r3, [pc, #84]	@ (8005b84 <_dtoa_r+0xbe0>)
 8005b30:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005b32:	9308      	str	r3, [sp, #32]
 8005b34:	4b14      	ldr	r3, [pc, #80]	@ (8005b88 <_dtoa_r+0xbe4>)
 8005b36:	2a00      	cmp	r2, #0
 8005b38:	d001      	beq.n	8005b3e <_dtoa_r+0xb9a>
 8005b3a:	f7ff fa7b 	bl	8005034 <_dtoa_r+0x90>
 8005b3e:	f7ff fa7b 	bl	8005038 <_dtoa_r+0x94>
 8005b42:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005b44:	2b01      	cmp	r3, #1
 8005b46:	dc00      	bgt.n	8005b4a <_dtoa_r+0xba6>
 8005b48:	e648      	b.n	80057dc <_dtoa_r+0x838>
 8005b4a:	2001      	movs	r0, #1
 8005b4c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8005b4e:	e665      	b.n	800581c <_dtoa_r+0x878>
 8005b50:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	dc00      	bgt.n	8005b58 <_dtoa_r+0xbb4>
 8005b56:	e6d6      	b.n	8005906 <_dtoa_r+0x962>
 8005b58:	2400      	movs	r4, #0
 8005b5a:	0031      	movs	r1, r6
 8005b5c:	9805      	ldr	r0, [sp, #20]
 8005b5e:	f7ff f993 	bl	8004e88 <quorem>
 8005b62:	9b08      	ldr	r3, [sp, #32]
 8005b64:	3030      	adds	r0, #48	@ 0x30
 8005b66:	5518      	strb	r0, [r3, r4]
 8005b68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005b6a:	3401      	adds	r4, #1
 8005b6c:	0005      	movs	r5, r0
 8005b6e:	429c      	cmp	r4, r3
 8005b70:	dab6      	bge.n	8005ae0 <_dtoa_r+0xb3c>
 8005b72:	2300      	movs	r3, #0
 8005b74:	220a      	movs	r2, #10
 8005b76:	9905      	ldr	r1, [sp, #20]
 8005b78:	9803      	ldr	r0, [sp, #12]
 8005b7a:	f000 f975 	bl	8005e68 <__multadd>
 8005b7e:	9005      	str	r0, [sp, #20]
 8005b80:	e7eb      	b.n	8005b5a <_dtoa_r+0xbb6>
 8005b82:	46c0      	nop			@ (mov r8, r8)
 8005b84:	0800828c 	.word	0x0800828c
 8005b88:	08008294 	.word	0x08008294

08005b8c <_free_r>:
 8005b8c:	b570      	push	{r4, r5, r6, lr}
 8005b8e:	0005      	movs	r5, r0
 8005b90:	1e0c      	subs	r4, r1, #0
 8005b92:	d010      	beq.n	8005bb6 <_free_r+0x2a>
 8005b94:	3c04      	subs	r4, #4
 8005b96:	6823      	ldr	r3, [r4, #0]
 8005b98:	2b00      	cmp	r3, #0
 8005b9a:	da00      	bge.n	8005b9e <_free_r+0x12>
 8005b9c:	18e4      	adds	r4, r4, r3
 8005b9e:	0028      	movs	r0, r5
 8005ba0:	f000 f8ea 	bl	8005d78 <__malloc_lock>
 8005ba4:	4a1d      	ldr	r2, [pc, #116]	@ (8005c1c <_free_r+0x90>)
 8005ba6:	6813      	ldr	r3, [r2, #0]
 8005ba8:	2b00      	cmp	r3, #0
 8005baa:	d105      	bne.n	8005bb8 <_free_r+0x2c>
 8005bac:	6063      	str	r3, [r4, #4]
 8005bae:	6014      	str	r4, [r2, #0]
 8005bb0:	0028      	movs	r0, r5
 8005bb2:	f000 f8e9 	bl	8005d88 <__malloc_unlock>
 8005bb6:	bd70      	pop	{r4, r5, r6, pc}
 8005bb8:	42a3      	cmp	r3, r4
 8005bba:	d908      	bls.n	8005bce <_free_r+0x42>
 8005bbc:	6820      	ldr	r0, [r4, #0]
 8005bbe:	1821      	adds	r1, r4, r0
 8005bc0:	428b      	cmp	r3, r1
 8005bc2:	d1f3      	bne.n	8005bac <_free_r+0x20>
 8005bc4:	6819      	ldr	r1, [r3, #0]
 8005bc6:	685b      	ldr	r3, [r3, #4]
 8005bc8:	1809      	adds	r1, r1, r0
 8005bca:	6021      	str	r1, [r4, #0]
 8005bcc:	e7ee      	b.n	8005bac <_free_r+0x20>
 8005bce:	001a      	movs	r2, r3
 8005bd0:	685b      	ldr	r3, [r3, #4]
 8005bd2:	2b00      	cmp	r3, #0
 8005bd4:	d001      	beq.n	8005bda <_free_r+0x4e>
 8005bd6:	42a3      	cmp	r3, r4
 8005bd8:	d9f9      	bls.n	8005bce <_free_r+0x42>
 8005bda:	6811      	ldr	r1, [r2, #0]
 8005bdc:	1850      	adds	r0, r2, r1
 8005bde:	42a0      	cmp	r0, r4
 8005be0:	d10b      	bne.n	8005bfa <_free_r+0x6e>
 8005be2:	6820      	ldr	r0, [r4, #0]
 8005be4:	1809      	adds	r1, r1, r0
 8005be6:	1850      	adds	r0, r2, r1
 8005be8:	6011      	str	r1, [r2, #0]
 8005bea:	4283      	cmp	r3, r0
 8005bec:	d1e0      	bne.n	8005bb0 <_free_r+0x24>
 8005bee:	6818      	ldr	r0, [r3, #0]
 8005bf0:	685b      	ldr	r3, [r3, #4]
 8005bf2:	1841      	adds	r1, r0, r1
 8005bf4:	6011      	str	r1, [r2, #0]
 8005bf6:	6053      	str	r3, [r2, #4]
 8005bf8:	e7da      	b.n	8005bb0 <_free_r+0x24>
 8005bfa:	42a0      	cmp	r0, r4
 8005bfc:	d902      	bls.n	8005c04 <_free_r+0x78>
 8005bfe:	230c      	movs	r3, #12
 8005c00:	602b      	str	r3, [r5, #0]
 8005c02:	e7d5      	b.n	8005bb0 <_free_r+0x24>
 8005c04:	6820      	ldr	r0, [r4, #0]
 8005c06:	1821      	adds	r1, r4, r0
 8005c08:	428b      	cmp	r3, r1
 8005c0a:	d103      	bne.n	8005c14 <_free_r+0x88>
 8005c0c:	6819      	ldr	r1, [r3, #0]
 8005c0e:	685b      	ldr	r3, [r3, #4]
 8005c10:	1809      	adds	r1, r1, r0
 8005c12:	6021      	str	r1, [r4, #0]
 8005c14:	6063      	str	r3, [r4, #4]
 8005c16:	6054      	str	r4, [r2, #4]
 8005c18:	e7ca      	b.n	8005bb0 <_free_r+0x24>
 8005c1a:	46c0      	nop			@ (mov r8, r8)
 8005c1c:	200007c8 	.word	0x200007c8

08005c20 <malloc>:
 8005c20:	b510      	push	{r4, lr}
 8005c22:	4b03      	ldr	r3, [pc, #12]	@ (8005c30 <malloc+0x10>)
 8005c24:	0001      	movs	r1, r0
 8005c26:	6818      	ldr	r0, [r3, #0]
 8005c28:	f000 f826 	bl	8005c78 <_malloc_r>
 8005c2c:	bd10      	pop	{r4, pc}
 8005c2e:	46c0      	nop			@ (mov r8, r8)
 8005c30:	20000038 	.word	0x20000038

08005c34 <sbrk_aligned>:
 8005c34:	b570      	push	{r4, r5, r6, lr}
 8005c36:	4e0f      	ldr	r6, [pc, #60]	@ (8005c74 <sbrk_aligned+0x40>)
 8005c38:	000d      	movs	r5, r1
 8005c3a:	6831      	ldr	r1, [r6, #0]
 8005c3c:	0004      	movs	r4, r0
 8005c3e:	2900      	cmp	r1, #0
 8005c40:	d102      	bne.n	8005c48 <sbrk_aligned+0x14>
 8005c42:	f000 fcff 	bl	8006644 <_sbrk_r>
 8005c46:	6030      	str	r0, [r6, #0]
 8005c48:	0029      	movs	r1, r5
 8005c4a:	0020      	movs	r0, r4
 8005c4c:	f000 fcfa 	bl	8006644 <_sbrk_r>
 8005c50:	1c43      	adds	r3, r0, #1
 8005c52:	d103      	bne.n	8005c5c <sbrk_aligned+0x28>
 8005c54:	2501      	movs	r5, #1
 8005c56:	426d      	negs	r5, r5
 8005c58:	0028      	movs	r0, r5
 8005c5a:	bd70      	pop	{r4, r5, r6, pc}
 8005c5c:	2303      	movs	r3, #3
 8005c5e:	1cc5      	adds	r5, r0, #3
 8005c60:	439d      	bics	r5, r3
 8005c62:	42a8      	cmp	r0, r5
 8005c64:	d0f8      	beq.n	8005c58 <sbrk_aligned+0x24>
 8005c66:	1a29      	subs	r1, r5, r0
 8005c68:	0020      	movs	r0, r4
 8005c6a:	f000 fceb 	bl	8006644 <_sbrk_r>
 8005c6e:	3001      	adds	r0, #1
 8005c70:	d1f2      	bne.n	8005c58 <sbrk_aligned+0x24>
 8005c72:	e7ef      	b.n	8005c54 <sbrk_aligned+0x20>
 8005c74:	200007c4 	.word	0x200007c4

08005c78 <_malloc_r>:
 8005c78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005c7a:	2203      	movs	r2, #3
 8005c7c:	1ccb      	adds	r3, r1, #3
 8005c7e:	4393      	bics	r3, r2
 8005c80:	3308      	adds	r3, #8
 8005c82:	0005      	movs	r5, r0
 8005c84:	001f      	movs	r7, r3
 8005c86:	2b0c      	cmp	r3, #12
 8005c88:	d234      	bcs.n	8005cf4 <_malloc_r+0x7c>
 8005c8a:	270c      	movs	r7, #12
 8005c8c:	42b9      	cmp	r1, r7
 8005c8e:	d833      	bhi.n	8005cf8 <_malloc_r+0x80>
 8005c90:	0028      	movs	r0, r5
 8005c92:	f000 f871 	bl	8005d78 <__malloc_lock>
 8005c96:	4e37      	ldr	r6, [pc, #220]	@ (8005d74 <_malloc_r+0xfc>)
 8005c98:	6833      	ldr	r3, [r6, #0]
 8005c9a:	001c      	movs	r4, r3
 8005c9c:	2c00      	cmp	r4, #0
 8005c9e:	d12f      	bne.n	8005d00 <_malloc_r+0x88>
 8005ca0:	0039      	movs	r1, r7
 8005ca2:	0028      	movs	r0, r5
 8005ca4:	f7ff ffc6 	bl	8005c34 <sbrk_aligned>
 8005ca8:	0004      	movs	r4, r0
 8005caa:	1c43      	adds	r3, r0, #1
 8005cac:	d15f      	bne.n	8005d6e <_malloc_r+0xf6>
 8005cae:	6834      	ldr	r4, [r6, #0]
 8005cb0:	9400      	str	r4, [sp, #0]
 8005cb2:	9b00      	ldr	r3, [sp, #0]
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d14a      	bne.n	8005d4e <_malloc_r+0xd6>
 8005cb8:	2c00      	cmp	r4, #0
 8005cba:	d052      	beq.n	8005d62 <_malloc_r+0xea>
 8005cbc:	6823      	ldr	r3, [r4, #0]
 8005cbe:	0028      	movs	r0, r5
 8005cc0:	18e3      	adds	r3, r4, r3
 8005cc2:	9900      	ldr	r1, [sp, #0]
 8005cc4:	9301      	str	r3, [sp, #4]
 8005cc6:	f000 fcbd 	bl	8006644 <_sbrk_r>
 8005cca:	9b01      	ldr	r3, [sp, #4]
 8005ccc:	4283      	cmp	r3, r0
 8005cce:	d148      	bne.n	8005d62 <_malloc_r+0xea>
 8005cd0:	6823      	ldr	r3, [r4, #0]
 8005cd2:	0028      	movs	r0, r5
 8005cd4:	1aff      	subs	r7, r7, r3
 8005cd6:	0039      	movs	r1, r7
 8005cd8:	f7ff ffac 	bl	8005c34 <sbrk_aligned>
 8005cdc:	3001      	adds	r0, #1
 8005cde:	d040      	beq.n	8005d62 <_malloc_r+0xea>
 8005ce0:	6823      	ldr	r3, [r4, #0]
 8005ce2:	19db      	adds	r3, r3, r7
 8005ce4:	6023      	str	r3, [r4, #0]
 8005ce6:	6833      	ldr	r3, [r6, #0]
 8005ce8:	685a      	ldr	r2, [r3, #4]
 8005cea:	2a00      	cmp	r2, #0
 8005cec:	d133      	bne.n	8005d56 <_malloc_r+0xde>
 8005cee:	9b00      	ldr	r3, [sp, #0]
 8005cf0:	6033      	str	r3, [r6, #0]
 8005cf2:	e019      	b.n	8005d28 <_malloc_r+0xb0>
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	dac9      	bge.n	8005c8c <_malloc_r+0x14>
 8005cf8:	230c      	movs	r3, #12
 8005cfa:	602b      	str	r3, [r5, #0]
 8005cfc:	2000      	movs	r0, #0
 8005cfe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005d00:	6821      	ldr	r1, [r4, #0]
 8005d02:	1bc9      	subs	r1, r1, r7
 8005d04:	d420      	bmi.n	8005d48 <_malloc_r+0xd0>
 8005d06:	290b      	cmp	r1, #11
 8005d08:	d90a      	bls.n	8005d20 <_malloc_r+0xa8>
 8005d0a:	19e2      	adds	r2, r4, r7
 8005d0c:	6027      	str	r7, [r4, #0]
 8005d0e:	42a3      	cmp	r3, r4
 8005d10:	d104      	bne.n	8005d1c <_malloc_r+0xa4>
 8005d12:	6032      	str	r2, [r6, #0]
 8005d14:	6863      	ldr	r3, [r4, #4]
 8005d16:	6011      	str	r1, [r2, #0]
 8005d18:	6053      	str	r3, [r2, #4]
 8005d1a:	e005      	b.n	8005d28 <_malloc_r+0xb0>
 8005d1c:	605a      	str	r2, [r3, #4]
 8005d1e:	e7f9      	b.n	8005d14 <_malloc_r+0x9c>
 8005d20:	6862      	ldr	r2, [r4, #4]
 8005d22:	42a3      	cmp	r3, r4
 8005d24:	d10e      	bne.n	8005d44 <_malloc_r+0xcc>
 8005d26:	6032      	str	r2, [r6, #0]
 8005d28:	0028      	movs	r0, r5
 8005d2a:	f000 f82d 	bl	8005d88 <__malloc_unlock>
 8005d2e:	0020      	movs	r0, r4
 8005d30:	2207      	movs	r2, #7
 8005d32:	300b      	adds	r0, #11
 8005d34:	1d23      	adds	r3, r4, #4
 8005d36:	4390      	bics	r0, r2
 8005d38:	1ac2      	subs	r2, r0, r3
 8005d3a:	4298      	cmp	r0, r3
 8005d3c:	d0df      	beq.n	8005cfe <_malloc_r+0x86>
 8005d3e:	1a1b      	subs	r3, r3, r0
 8005d40:	50a3      	str	r3, [r4, r2]
 8005d42:	e7dc      	b.n	8005cfe <_malloc_r+0x86>
 8005d44:	605a      	str	r2, [r3, #4]
 8005d46:	e7ef      	b.n	8005d28 <_malloc_r+0xb0>
 8005d48:	0023      	movs	r3, r4
 8005d4a:	6864      	ldr	r4, [r4, #4]
 8005d4c:	e7a6      	b.n	8005c9c <_malloc_r+0x24>
 8005d4e:	9c00      	ldr	r4, [sp, #0]
 8005d50:	6863      	ldr	r3, [r4, #4]
 8005d52:	9300      	str	r3, [sp, #0]
 8005d54:	e7ad      	b.n	8005cb2 <_malloc_r+0x3a>
 8005d56:	001a      	movs	r2, r3
 8005d58:	685b      	ldr	r3, [r3, #4]
 8005d5a:	42a3      	cmp	r3, r4
 8005d5c:	d1fb      	bne.n	8005d56 <_malloc_r+0xde>
 8005d5e:	2300      	movs	r3, #0
 8005d60:	e7da      	b.n	8005d18 <_malloc_r+0xa0>
 8005d62:	230c      	movs	r3, #12
 8005d64:	0028      	movs	r0, r5
 8005d66:	602b      	str	r3, [r5, #0]
 8005d68:	f000 f80e 	bl	8005d88 <__malloc_unlock>
 8005d6c:	e7c6      	b.n	8005cfc <_malloc_r+0x84>
 8005d6e:	6007      	str	r7, [r0, #0]
 8005d70:	e7da      	b.n	8005d28 <_malloc_r+0xb0>
 8005d72:	46c0      	nop			@ (mov r8, r8)
 8005d74:	200007c8 	.word	0x200007c8

08005d78 <__malloc_lock>:
 8005d78:	b510      	push	{r4, lr}
 8005d7a:	4802      	ldr	r0, [pc, #8]	@ (8005d84 <__malloc_lock+0xc>)
 8005d7c:	f7ff f877 	bl	8004e6e <__retarget_lock_acquire_recursive>
 8005d80:	bd10      	pop	{r4, pc}
 8005d82:	46c0      	nop			@ (mov r8, r8)
 8005d84:	200007c0 	.word	0x200007c0

08005d88 <__malloc_unlock>:
 8005d88:	b510      	push	{r4, lr}
 8005d8a:	4802      	ldr	r0, [pc, #8]	@ (8005d94 <__malloc_unlock+0xc>)
 8005d8c:	f7ff f870 	bl	8004e70 <__retarget_lock_release_recursive>
 8005d90:	bd10      	pop	{r4, pc}
 8005d92:	46c0      	nop			@ (mov r8, r8)
 8005d94:	200007c0 	.word	0x200007c0

08005d98 <_Balloc>:
 8005d98:	b570      	push	{r4, r5, r6, lr}
 8005d9a:	69c5      	ldr	r5, [r0, #28]
 8005d9c:	0006      	movs	r6, r0
 8005d9e:	000c      	movs	r4, r1
 8005da0:	2d00      	cmp	r5, #0
 8005da2:	d10e      	bne.n	8005dc2 <_Balloc+0x2a>
 8005da4:	2010      	movs	r0, #16
 8005da6:	f7ff ff3b 	bl	8005c20 <malloc>
 8005daa:	1e02      	subs	r2, r0, #0
 8005dac:	61f0      	str	r0, [r6, #28]
 8005dae:	d104      	bne.n	8005dba <_Balloc+0x22>
 8005db0:	216b      	movs	r1, #107	@ 0x6b
 8005db2:	4b19      	ldr	r3, [pc, #100]	@ (8005e18 <_Balloc+0x80>)
 8005db4:	4819      	ldr	r0, [pc, #100]	@ (8005e1c <_Balloc+0x84>)
 8005db6:	f000 fc61 	bl	800667c <__assert_func>
 8005dba:	6045      	str	r5, [r0, #4]
 8005dbc:	6085      	str	r5, [r0, #8]
 8005dbe:	6005      	str	r5, [r0, #0]
 8005dc0:	60c5      	str	r5, [r0, #12]
 8005dc2:	69f5      	ldr	r5, [r6, #28]
 8005dc4:	68eb      	ldr	r3, [r5, #12]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d013      	beq.n	8005df2 <_Balloc+0x5a>
 8005dca:	69f3      	ldr	r3, [r6, #28]
 8005dcc:	00a2      	lsls	r2, r4, #2
 8005dce:	68db      	ldr	r3, [r3, #12]
 8005dd0:	189b      	adds	r3, r3, r2
 8005dd2:	6818      	ldr	r0, [r3, #0]
 8005dd4:	2800      	cmp	r0, #0
 8005dd6:	d118      	bne.n	8005e0a <_Balloc+0x72>
 8005dd8:	2101      	movs	r1, #1
 8005dda:	000d      	movs	r5, r1
 8005ddc:	40a5      	lsls	r5, r4
 8005dde:	1d6a      	adds	r2, r5, #5
 8005de0:	0030      	movs	r0, r6
 8005de2:	0092      	lsls	r2, r2, #2
 8005de4:	f000 fc68 	bl	80066b8 <_calloc_r>
 8005de8:	2800      	cmp	r0, #0
 8005dea:	d00c      	beq.n	8005e06 <_Balloc+0x6e>
 8005dec:	6044      	str	r4, [r0, #4]
 8005dee:	6085      	str	r5, [r0, #8]
 8005df0:	e00d      	b.n	8005e0e <_Balloc+0x76>
 8005df2:	2221      	movs	r2, #33	@ 0x21
 8005df4:	2104      	movs	r1, #4
 8005df6:	0030      	movs	r0, r6
 8005df8:	f000 fc5e 	bl	80066b8 <_calloc_r>
 8005dfc:	69f3      	ldr	r3, [r6, #28]
 8005dfe:	60e8      	str	r0, [r5, #12]
 8005e00:	68db      	ldr	r3, [r3, #12]
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	d1e1      	bne.n	8005dca <_Balloc+0x32>
 8005e06:	2000      	movs	r0, #0
 8005e08:	bd70      	pop	{r4, r5, r6, pc}
 8005e0a:	6802      	ldr	r2, [r0, #0]
 8005e0c:	601a      	str	r2, [r3, #0]
 8005e0e:	2300      	movs	r3, #0
 8005e10:	6103      	str	r3, [r0, #16]
 8005e12:	60c3      	str	r3, [r0, #12]
 8005e14:	e7f8      	b.n	8005e08 <_Balloc+0x70>
 8005e16:	46c0      	nop			@ (mov r8, r8)
 8005e18:	08008299 	.word	0x08008299
 8005e1c:	08008319 	.word	0x08008319

08005e20 <_Bfree>:
 8005e20:	b570      	push	{r4, r5, r6, lr}
 8005e22:	69c6      	ldr	r6, [r0, #28]
 8005e24:	0005      	movs	r5, r0
 8005e26:	000c      	movs	r4, r1
 8005e28:	2e00      	cmp	r6, #0
 8005e2a:	d10e      	bne.n	8005e4a <_Bfree+0x2a>
 8005e2c:	2010      	movs	r0, #16
 8005e2e:	f7ff fef7 	bl	8005c20 <malloc>
 8005e32:	1e02      	subs	r2, r0, #0
 8005e34:	61e8      	str	r0, [r5, #28]
 8005e36:	d104      	bne.n	8005e42 <_Bfree+0x22>
 8005e38:	218f      	movs	r1, #143	@ 0x8f
 8005e3a:	4b09      	ldr	r3, [pc, #36]	@ (8005e60 <_Bfree+0x40>)
 8005e3c:	4809      	ldr	r0, [pc, #36]	@ (8005e64 <_Bfree+0x44>)
 8005e3e:	f000 fc1d 	bl	800667c <__assert_func>
 8005e42:	6046      	str	r6, [r0, #4]
 8005e44:	6086      	str	r6, [r0, #8]
 8005e46:	6006      	str	r6, [r0, #0]
 8005e48:	60c6      	str	r6, [r0, #12]
 8005e4a:	2c00      	cmp	r4, #0
 8005e4c:	d007      	beq.n	8005e5e <_Bfree+0x3e>
 8005e4e:	69eb      	ldr	r3, [r5, #28]
 8005e50:	6862      	ldr	r2, [r4, #4]
 8005e52:	68db      	ldr	r3, [r3, #12]
 8005e54:	0092      	lsls	r2, r2, #2
 8005e56:	189b      	adds	r3, r3, r2
 8005e58:	681a      	ldr	r2, [r3, #0]
 8005e5a:	6022      	str	r2, [r4, #0]
 8005e5c:	601c      	str	r4, [r3, #0]
 8005e5e:	bd70      	pop	{r4, r5, r6, pc}
 8005e60:	08008299 	.word	0x08008299
 8005e64:	08008319 	.word	0x08008319

08005e68 <__multadd>:
 8005e68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005e6a:	000f      	movs	r7, r1
 8005e6c:	9001      	str	r0, [sp, #4]
 8005e6e:	000c      	movs	r4, r1
 8005e70:	001e      	movs	r6, r3
 8005e72:	2000      	movs	r0, #0
 8005e74:	690d      	ldr	r5, [r1, #16]
 8005e76:	3714      	adds	r7, #20
 8005e78:	683b      	ldr	r3, [r7, #0]
 8005e7a:	3001      	adds	r0, #1
 8005e7c:	b299      	uxth	r1, r3
 8005e7e:	4351      	muls	r1, r2
 8005e80:	0c1b      	lsrs	r3, r3, #16
 8005e82:	4353      	muls	r3, r2
 8005e84:	1989      	adds	r1, r1, r6
 8005e86:	0c0e      	lsrs	r6, r1, #16
 8005e88:	199b      	adds	r3, r3, r6
 8005e8a:	0c1e      	lsrs	r6, r3, #16
 8005e8c:	b289      	uxth	r1, r1
 8005e8e:	041b      	lsls	r3, r3, #16
 8005e90:	185b      	adds	r3, r3, r1
 8005e92:	c708      	stmia	r7!, {r3}
 8005e94:	4285      	cmp	r5, r0
 8005e96:	dcef      	bgt.n	8005e78 <__multadd+0x10>
 8005e98:	2e00      	cmp	r6, #0
 8005e9a:	d022      	beq.n	8005ee2 <__multadd+0x7a>
 8005e9c:	68a3      	ldr	r3, [r4, #8]
 8005e9e:	42ab      	cmp	r3, r5
 8005ea0:	dc19      	bgt.n	8005ed6 <__multadd+0x6e>
 8005ea2:	6861      	ldr	r1, [r4, #4]
 8005ea4:	9801      	ldr	r0, [sp, #4]
 8005ea6:	3101      	adds	r1, #1
 8005ea8:	f7ff ff76 	bl	8005d98 <_Balloc>
 8005eac:	1e07      	subs	r7, r0, #0
 8005eae:	d105      	bne.n	8005ebc <__multadd+0x54>
 8005eb0:	003a      	movs	r2, r7
 8005eb2:	21ba      	movs	r1, #186	@ 0xba
 8005eb4:	4b0c      	ldr	r3, [pc, #48]	@ (8005ee8 <__multadd+0x80>)
 8005eb6:	480d      	ldr	r0, [pc, #52]	@ (8005eec <__multadd+0x84>)
 8005eb8:	f000 fbe0 	bl	800667c <__assert_func>
 8005ebc:	0021      	movs	r1, r4
 8005ebe:	6922      	ldr	r2, [r4, #16]
 8005ec0:	310c      	adds	r1, #12
 8005ec2:	3202      	adds	r2, #2
 8005ec4:	0092      	lsls	r2, r2, #2
 8005ec6:	300c      	adds	r0, #12
 8005ec8:	f000 fbce 	bl	8006668 <memcpy>
 8005ecc:	0021      	movs	r1, r4
 8005ece:	9801      	ldr	r0, [sp, #4]
 8005ed0:	f7ff ffa6 	bl	8005e20 <_Bfree>
 8005ed4:	003c      	movs	r4, r7
 8005ed6:	1d2b      	adds	r3, r5, #4
 8005ed8:	009b      	lsls	r3, r3, #2
 8005eda:	18e3      	adds	r3, r4, r3
 8005edc:	3501      	adds	r5, #1
 8005ede:	605e      	str	r6, [r3, #4]
 8005ee0:	6125      	str	r5, [r4, #16]
 8005ee2:	0020      	movs	r0, r4
 8005ee4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005ee6:	46c0      	nop			@ (mov r8, r8)
 8005ee8:	08008308 	.word	0x08008308
 8005eec:	08008319 	.word	0x08008319

08005ef0 <__hi0bits>:
 8005ef0:	2280      	movs	r2, #128	@ 0x80
 8005ef2:	0003      	movs	r3, r0
 8005ef4:	0252      	lsls	r2, r2, #9
 8005ef6:	2000      	movs	r0, #0
 8005ef8:	4293      	cmp	r3, r2
 8005efa:	d201      	bcs.n	8005f00 <__hi0bits+0x10>
 8005efc:	041b      	lsls	r3, r3, #16
 8005efe:	3010      	adds	r0, #16
 8005f00:	2280      	movs	r2, #128	@ 0x80
 8005f02:	0452      	lsls	r2, r2, #17
 8005f04:	4293      	cmp	r3, r2
 8005f06:	d201      	bcs.n	8005f0c <__hi0bits+0x1c>
 8005f08:	3008      	adds	r0, #8
 8005f0a:	021b      	lsls	r3, r3, #8
 8005f0c:	2280      	movs	r2, #128	@ 0x80
 8005f0e:	0552      	lsls	r2, r2, #21
 8005f10:	4293      	cmp	r3, r2
 8005f12:	d201      	bcs.n	8005f18 <__hi0bits+0x28>
 8005f14:	3004      	adds	r0, #4
 8005f16:	011b      	lsls	r3, r3, #4
 8005f18:	2280      	movs	r2, #128	@ 0x80
 8005f1a:	05d2      	lsls	r2, r2, #23
 8005f1c:	4293      	cmp	r3, r2
 8005f1e:	d201      	bcs.n	8005f24 <__hi0bits+0x34>
 8005f20:	3002      	adds	r0, #2
 8005f22:	009b      	lsls	r3, r3, #2
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	db03      	blt.n	8005f30 <__hi0bits+0x40>
 8005f28:	3001      	adds	r0, #1
 8005f2a:	4213      	tst	r3, r2
 8005f2c:	d100      	bne.n	8005f30 <__hi0bits+0x40>
 8005f2e:	2020      	movs	r0, #32
 8005f30:	4770      	bx	lr

08005f32 <__lo0bits>:
 8005f32:	6803      	ldr	r3, [r0, #0]
 8005f34:	0001      	movs	r1, r0
 8005f36:	2207      	movs	r2, #7
 8005f38:	0018      	movs	r0, r3
 8005f3a:	4010      	ands	r0, r2
 8005f3c:	4213      	tst	r3, r2
 8005f3e:	d00d      	beq.n	8005f5c <__lo0bits+0x2a>
 8005f40:	3a06      	subs	r2, #6
 8005f42:	2000      	movs	r0, #0
 8005f44:	4213      	tst	r3, r2
 8005f46:	d105      	bne.n	8005f54 <__lo0bits+0x22>
 8005f48:	3002      	adds	r0, #2
 8005f4a:	4203      	tst	r3, r0
 8005f4c:	d003      	beq.n	8005f56 <__lo0bits+0x24>
 8005f4e:	40d3      	lsrs	r3, r2
 8005f50:	0010      	movs	r0, r2
 8005f52:	600b      	str	r3, [r1, #0]
 8005f54:	4770      	bx	lr
 8005f56:	089b      	lsrs	r3, r3, #2
 8005f58:	600b      	str	r3, [r1, #0]
 8005f5a:	e7fb      	b.n	8005f54 <__lo0bits+0x22>
 8005f5c:	b29a      	uxth	r2, r3
 8005f5e:	2a00      	cmp	r2, #0
 8005f60:	d101      	bne.n	8005f66 <__lo0bits+0x34>
 8005f62:	2010      	movs	r0, #16
 8005f64:	0c1b      	lsrs	r3, r3, #16
 8005f66:	b2da      	uxtb	r2, r3
 8005f68:	2a00      	cmp	r2, #0
 8005f6a:	d101      	bne.n	8005f70 <__lo0bits+0x3e>
 8005f6c:	3008      	adds	r0, #8
 8005f6e:	0a1b      	lsrs	r3, r3, #8
 8005f70:	071a      	lsls	r2, r3, #28
 8005f72:	d101      	bne.n	8005f78 <__lo0bits+0x46>
 8005f74:	3004      	adds	r0, #4
 8005f76:	091b      	lsrs	r3, r3, #4
 8005f78:	079a      	lsls	r2, r3, #30
 8005f7a:	d101      	bne.n	8005f80 <__lo0bits+0x4e>
 8005f7c:	3002      	adds	r0, #2
 8005f7e:	089b      	lsrs	r3, r3, #2
 8005f80:	07da      	lsls	r2, r3, #31
 8005f82:	d4e9      	bmi.n	8005f58 <__lo0bits+0x26>
 8005f84:	3001      	adds	r0, #1
 8005f86:	085b      	lsrs	r3, r3, #1
 8005f88:	d1e6      	bne.n	8005f58 <__lo0bits+0x26>
 8005f8a:	2020      	movs	r0, #32
 8005f8c:	e7e2      	b.n	8005f54 <__lo0bits+0x22>
	...

08005f90 <__i2b>:
 8005f90:	b510      	push	{r4, lr}
 8005f92:	000c      	movs	r4, r1
 8005f94:	2101      	movs	r1, #1
 8005f96:	f7ff feff 	bl	8005d98 <_Balloc>
 8005f9a:	2800      	cmp	r0, #0
 8005f9c:	d107      	bne.n	8005fae <__i2b+0x1e>
 8005f9e:	2146      	movs	r1, #70	@ 0x46
 8005fa0:	4c05      	ldr	r4, [pc, #20]	@ (8005fb8 <__i2b+0x28>)
 8005fa2:	0002      	movs	r2, r0
 8005fa4:	4b05      	ldr	r3, [pc, #20]	@ (8005fbc <__i2b+0x2c>)
 8005fa6:	0020      	movs	r0, r4
 8005fa8:	31ff      	adds	r1, #255	@ 0xff
 8005faa:	f000 fb67 	bl	800667c <__assert_func>
 8005fae:	2301      	movs	r3, #1
 8005fb0:	6144      	str	r4, [r0, #20]
 8005fb2:	6103      	str	r3, [r0, #16]
 8005fb4:	bd10      	pop	{r4, pc}
 8005fb6:	46c0      	nop			@ (mov r8, r8)
 8005fb8:	08008319 	.word	0x08008319
 8005fbc:	08008308 	.word	0x08008308

08005fc0 <__multiply>:
 8005fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005fc2:	0014      	movs	r4, r2
 8005fc4:	690a      	ldr	r2, [r1, #16]
 8005fc6:	6923      	ldr	r3, [r4, #16]
 8005fc8:	000d      	movs	r5, r1
 8005fca:	b08b      	sub	sp, #44	@ 0x2c
 8005fcc:	429a      	cmp	r2, r3
 8005fce:	db02      	blt.n	8005fd6 <__multiply+0x16>
 8005fd0:	0023      	movs	r3, r4
 8005fd2:	000c      	movs	r4, r1
 8005fd4:	001d      	movs	r5, r3
 8005fd6:	6927      	ldr	r7, [r4, #16]
 8005fd8:	692e      	ldr	r6, [r5, #16]
 8005fda:	6861      	ldr	r1, [r4, #4]
 8005fdc:	19bb      	adds	r3, r7, r6
 8005fde:	9303      	str	r3, [sp, #12]
 8005fe0:	68a3      	ldr	r3, [r4, #8]
 8005fe2:	19ba      	adds	r2, r7, r6
 8005fe4:	4293      	cmp	r3, r2
 8005fe6:	da00      	bge.n	8005fea <__multiply+0x2a>
 8005fe8:	3101      	adds	r1, #1
 8005fea:	f7ff fed5 	bl	8005d98 <_Balloc>
 8005fee:	9002      	str	r0, [sp, #8]
 8005ff0:	2800      	cmp	r0, #0
 8005ff2:	d106      	bne.n	8006002 <__multiply+0x42>
 8005ff4:	21b1      	movs	r1, #177	@ 0xb1
 8005ff6:	4b49      	ldr	r3, [pc, #292]	@ (800611c <__multiply+0x15c>)
 8005ff8:	4849      	ldr	r0, [pc, #292]	@ (8006120 <__multiply+0x160>)
 8005ffa:	9a02      	ldr	r2, [sp, #8]
 8005ffc:	0049      	lsls	r1, r1, #1
 8005ffe:	f000 fb3d 	bl	800667c <__assert_func>
 8006002:	9b02      	ldr	r3, [sp, #8]
 8006004:	2200      	movs	r2, #0
 8006006:	3314      	adds	r3, #20
 8006008:	469c      	mov	ip, r3
 800600a:	19bb      	adds	r3, r7, r6
 800600c:	009b      	lsls	r3, r3, #2
 800600e:	4463      	add	r3, ip
 8006010:	9304      	str	r3, [sp, #16]
 8006012:	4663      	mov	r3, ip
 8006014:	9904      	ldr	r1, [sp, #16]
 8006016:	428b      	cmp	r3, r1
 8006018:	d32a      	bcc.n	8006070 <__multiply+0xb0>
 800601a:	0023      	movs	r3, r4
 800601c:	00bf      	lsls	r7, r7, #2
 800601e:	3314      	adds	r3, #20
 8006020:	3514      	adds	r5, #20
 8006022:	9308      	str	r3, [sp, #32]
 8006024:	00b6      	lsls	r6, r6, #2
 8006026:	19db      	adds	r3, r3, r7
 8006028:	9305      	str	r3, [sp, #20]
 800602a:	19ab      	adds	r3, r5, r6
 800602c:	9309      	str	r3, [sp, #36]	@ 0x24
 800602e:	2304      	movs	r3, #4
 8006030:	9306      	str	r3, [sp, #24]
 8006032:	0023      	movs	r3, r4
 8006034:	9a05      	ldr	r2, [sp, #20]
 8006036:	3315      	adds	r3, #21
 8006038:	9501      	str	r5, [sp, #4]
 800603a:	429a      	cmp	r2, r3
 800603c:	d305      	bcc.n	800604a <__multiply+0x8a>
 800603e:	1b13      	subs	r3, r2, r4
 8006040:	3b15      	subs	r3, #21
 8006042:	089b      	lsrs	r3, r3, #2
 8006044:	3301      	adds	r3, #1
 8006046:	009b      	lsls	r3, r3, #2
 8006048:	9306      	str	r3, [sp, #24]
 800604a:	9b01      	ldr	r3, [sp, #4]
 800604c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800604e:	4293      	cmp	r3, r2
 8006050:	d310      	bcc.n	8006074 <__multiply+0xb4>
 8006052:	9b03      	ldr	r3, [sp, #12]
 8006054:	2b00      	cmp	r3, #0
 8006056:	dd05      	ble.n	8006064 <__multiply+0xa4>
 8006058:	9b04      	ldr	r3, [sp, #16]
 800605a:	3b04      	subs	r3, #4
 800605c:	9304      	str	r3, [sp, #16]
 800605e:	681b      	ldr	r3, [r3, #0]
 8006060:	2b00      	cmp	r3, #0
 8006062:	d056      	beq.n	8006112 <__multiply+0x152>
 8006064:	9b02      	ldr	r3, [sp, #8]
 8006066:	9a03      	ldr	r2, [sp, #12]
 8006068:	0018      	movs	r0, r3
 800606a:	611a      	str	r2, [r3, #16]
 800606c:	b00b      	add	sp, #44	@ 0x2c
 800606e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006070:	c304      	stmia	r3!, {r2}
 8006072:	e7cf      	b.n	8006014 <__multiply+0x54>
 8006074:	9b01      	ldr	r3, [sp, #4]
 8006076:	6818      	ldr	r0, [r3, #0]
 8006078:	b280      	uxth	r0, r0
 800607a:	2800      	cmp	r0, #0
 800607c:	d01e      	beq.n	80060bc <__multiply+0xfc>
 800607e:	4667      	mov	r7, ip
 8006080:	2500      	movs	r5, #0
 8006082:	9e08      	ldr	r6, [sp, #32]
 8006084:	ce02      	ldmia	r6!, {r1}
 8006086:	683b      	ldr	r3, [r7, #0]
 8006088:	9307      	str	r3, [sp, #28]
 800608a:	b28b      	uxth	r3, r1
 800608c:	4343      	muls	r3, r0
 800608e:	001a      	movs	r2, r3
 8006090:	466b      	mov	r3, sp
 8006092:	0c09      	lsrs	r1, r1, #16
 8006094:	8b9b      	ldrh	r3, [r3, #28]
 8006096:	4341      	muls	r1, r0
 8006098:	18d3      	adds	r3, r2, r3
 800609a:	9a07      	ldr	r2, [sp, #28]
 800609c:	195b      	adds	r3, r3, r5
 800609e:	0c12      	lsrs	r2, r2, #16
 80060a0:	1889      	adds	r1, r1, r2
 80060a2:	0c1a      	lsrs	r2, r3, #16
 80060a4:	188a      	adds	r2, r1, r2
 80060a6:	b29b      	uxth	r3, r3
 80060a8:	0c15      	lsrs	r5, r2, #16
 80060aa:	0412      	lsls	r2, r2, #16
 80060ac:	431a      	orrs	r2, r3
 80060ae:	9b05      	ldr	r3, [sp, #20]
 80060b0:	c704      	stmia	r7!, {r2}
 80060b2:	42b3      	cmp	r3, r6
 80060b4:	d8e6      	bhi.n	8006084 <__multiply+0xc4>
 80060b6:	4663      	mov	r3, ip
 80060b8:	9a06      	ldr	r2, [sp, #24]
 80060ba:	509d      	str	r5, [r3, r2]
 80060bc:	9b01      	ldr	r3, [sp, #4]
 80060be:	6818      	ldr	r0, [r3, #0]
 80060c0:	0c00      	lsrs	r0, r0, #16
 80060c2:	d020      	beq.n	8006106 <__multiply+0x146>
 80060c4:	4663      	mov	r3, ip
 80060c6:	0025      	movs	r5, r4
 80060c8:	4661      	mov	r1, ip
 80060ca:	2700      	movs	r7, #0
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	3514      	adds	r5, #20
 80060d0:	682a      	ldr	r2, [r5, #0]
 80060d2:	680e      	ldr	r6, [r1, #0]
 80060d4:	b292      	uxth	r2, r2
 80060d6:	4342      	muls	r2, r0
 80060d8:	0c36      	lsrs	r6, r6, #16
 80060da:	1992      	adds	r2, r2, r6
 80060dc:	19d2      	adds	r2, r2, r7
 80060de:	0416      	lsls	r6, r2, #16
 80060e0:	b29b      	uxth	r3, r3
 80060e2:	431e      	orrs	r6, r3
 80060e4:	600e      	str	r6, [r1, #0]
 80060e6:	cd40      	ldmia	r5!, {r6}
 80060e8:	684b      	ldr	r3, [r1, #4]
 80060ea:	0c36      	lsrs	r6, r6, #16
 80060ec:	4346      	muls	r6, r0
 80060ee:	b29b      	uxth	r3, r3
 80060f0:	0c12      	lsrs	r2, r2, #16
 80060f2:	18f3      	adds	r3, r6, r3
 80060f4:	189b      	adds	r3, r3, r2
 80060f6:	9a05      	ldr	r2, [sp, #20]
 80060f8:	0c1f      	lsrs	r7, r3, #16
 80060fa:	3104      	adds	r1, #4
 80060fc:	42aa      	cmp	r2, r5
 80060fe:	d8e7      	bhi.n	80060d0 <__multiply+0x110>
 8006100:	4662      	mov	r2, ip
 8006102:	9906      	ldr	r1, [sp, #24]
 8006104:	5053      	str	r3, [r2, r1]
 8006106:	9b01      	ldr	r3, [sp, #4]
 8006108:	3304      	adds	r3, #4
 800610a:	9301      	str	r3, [sp, #4]
 800610c:	2304      	movs	r3, #4
 800610e:	449c      	add	ip, r3
 8006110:	e79b      	b.n	800604a <__multiply+0x8a>
 8006112:	9b03      	ldr	r3, [sp, #12]
 8006114:	3b01      	subs	r3, #1
 8006116:	9303      	str	r3, [sp, #12]
 8006118:	e79b      	b.n	8006052 <__multiply+0x92>
 800611a:	46c0      	nop			@ (mov r8, r8)
 800611c:	08008308 	.word	0x08008308
 8006120:	08008319 	.word	0x08008319

08006124 <__pow5mult>:
 8006124:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006126:	2303      	movs	r3, #3
 8006128:	0015      	movs	r5, r2
 800612a:	0007      	movs	r7, r0
 800612c:	000e      	movs	r6, r1
 800612e:	401a      	ands	r2, r3
 8006130:	421d      	tst	r5, r3
 8006132:	d008      	beq.n	8006146 <__pow5mult+0x22>
 8006134:	4925      	ldr	r1, [pc, #148]	@ (80061cc <__pow5mult+0xa8>)
 8006136:	3a01      	subs	r2, #1
 8006138:	0092      	lsls	r2, r2, #2
 800613a:	5852      	ldr	r2, [r2, r1]
 800613c:	2300      	movs	r3, #0
 800613e:	0031      	movs	r1, r6
 8006140:	f7ff fe92 	bl	8005e68 <__multadd>
 8006144:	0006      	movs	r6, r0
 8006146:	10ad      	asrs	r5, r5, #2
 8006148:	d03d      	beq.n	80061c6 <__pow5mult+0xa2>
 800614a:	69fc      	ldr	r4, [r7, #28]
 800614c:	2c00      	cmp	r4, #0
 800614e:	d10f      	bne.n	8006170 <__pow5mult+0x4c>
 8006150:	2010      	movs	r0, #16
 8006152:	f7ff fd65 	bl	8005c20 <malloc>
 8006156:	1e02      	subs	r2, r0, #0
 8006158:	61f8      	str	r0, [r7, #28]
 800615a:	d105      	bne.n	8006168 <__pow5mult+0x44>
 800615c:	21b4      	movs	r1, #180	@ 0xb4
 800615e:	4b1c      	ldr	r3, [pc, #112]	@ (80061d0 <__pow5mult+0xac>)
 8006160:	481c      	ldr	r0, [pc, #112]	@ (80061d4 <__pow5mult+0xb0>)
 8006162:	31ff      	adds	r1, #255	@ 0xff
 8006164:	f000 fa8a 	bl	800667c <__assert_func>
 8006168:	6044      	str	r4, [r0, #4]
 800616a:	6084      	str	r4, [r0, #8]
 800616c:	6004      	str	r4, [r0, #0]
 800616e:	60c4      	str	r4, [r0, #12]
 8006170:	69fb      	ldr	r3, [r7, #28]
 8006172:	689c      	ldr	r4, [r3, #8]
 8006174:	9301      	str	r3, [sp, #4]
 8006176:	2c00      	cmp	r4, #0
 8006178:	d108      	bne.n	800618c <__pow5mult+0x68>
 800617a:	0038      	movs	r0, r7
 800617c:	4916      	ldr	r1, [pc, #88]	@ (80061d8 <__pow5mult+0xb4>)
 800617e:	f7ff ff07 	bl	8005f90 <__i2b>
 8006182:	9b01      	ldr	r3, [sp, #4]
 8006184:	0004      	movs	r4, r0
 8006186:	6098      	str	r0, [r3, #8]
 8006188:	2300      	movs	r3, #0
 800618a:	6003      	str	r3, [r0, #0]
 800618c:	2301      	movs	r3, #1
 800618e:	421d      	tst	r5, r3
 8006190:	d00a      	beq.n	80061a8 <__pow5mult+0x84>
 8006192:	0031      	movs	r1, r6
 8006194:	0022      	movs	r2, r4
 8006196:	0038      	movs	r0, r7
 8006198:	f7ff ff12 	bl	8005fc0 <__multiply>
 800619c:	0031      	movs	r1, r6
 800619e:	9001      	str	r0, [sp, #4]
 80061a0:	0038      	movs	r0, r7
 80061a2:	f7ff fe3d 	bl	8005e20 <_Bfree>
 80061a6:	9e01      	ldr	r6, [sp, #4]
 80061a8:	106d      	asrs	r5, r5, #1
 80061aa:	d00c      	beq.n	80061c6 <__pow5mult+0xa2>
 80061ac:	6820      	ldr	r0, [r4, #0]
 80061ae:	2800      	cmp	r0, #0
 80061b0:	d107      	bne.n	80061c2 <__pow5mult+0x9e>
 80061b2:	0022      	movs	r2, r4
 80061b4:	0021      	movs	r1, r4
 80061b6:	0038      	movs	r0, r7
 80061b8:	f7ff ff02 	bl	8005fc0 <__multiply>
 80061bc:	2300      	movs	r3, #0
 80061be:	6020      	str	r0, [r4, #0]
 80061c0:	6003      	str	r3, [r0, #0]
 80061c2:	0004      	movs	r4, r0
 80061c4:	e7e2      	b.n	800618c <__pow5mult+0x68>
 80061c6:	0030      	movs	r0, r6
 80061c8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80061ca:	46c0      	nop			@ (mov r8, r8)
 80061cc:	08008374 	.word	0x08008374
 80061d0:	08008299 	.word	0x08008299
 80061d4:	08008319 	.word	0x08008319
 80061d8:	00000271 	.word	0x00000271

080061dc <__lshift>:
 80061dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80061de:	000c      	movs	r4, r1
 80061e0:	0016      	movs	r6, r2
 80061e2:	6923      	ldr	r3, [r4, #16]
 80061e4:	1157      	asrs	r7, r2, #5
 80061e6:	b085      	sub	sp, #20
 80061e8:	18fb      	adds	r3, r7, r3
 80061ea:	9301      	str	r3, [sp, #4]
 80061ec:	3301      	adds	r3, #1
 80061ee:	9300      	str	r3, [sp, #0]
 80061f0:	6849      	ldr	r1, [r1, #4]
 80061f2:	68a3      	ldr	r3, [r4, #8]
 80061f4:	9002      	str	r0, [sp, #8]
 80061f6:	9a00      	ldr	r2, [sp, #0]
 80061f8:	4293      	cmp	r3, r2
 80061fa:	db10      	blt.n	800621e <__lshift+0x42>
 80061fc:	9802      	ldr	r0, [sp, #8]
 80061fe:	f7ff fdcb 	bl	8005d98 <_Balloc>
 8006202:	2300      	movs	r3, #0
 8006204:	0001      	movs	r1, r0
 8006206:	0005      	movs	r5, r0
 8006208:	001a      	movs	r2, r3
 800620a:	3114      	adds	r1, #20
 800620c:	4298      	cmp	r0, r3
 800620e:	d10c      	bne.n	800622a <__lshift+0x4e>
 8006210:	21ef      	movs	r1, #239	@ 0xef
 8006212:	002a      	movs	r2, r5
 8006214:	4b25      	ldr	r3, [pc, #148]	@ (80062ac <__lshift+0xd0>)
 8006216:	4826      	ldr	r0, [pc, #152]	@ (80062b0 <__lshift+0xd4>)
 8006218:	0049      	lsls	r1, r1, #1
 800621a:	f000 fa2f 	bl	800667c <__assert_func>
 800621e:	3101      	adds	r1, #1
 8006220:	005b      	lsls	r3, r3, #1
 8006222:	e7e8      	b.n	80061f6 <__lshift+0x1a>
 8006224:	0098      	lsls	r0, r3, #2
 8006226:	500a      	str	r2, [r1, r0]
 8006228:	3301      	adds	r3, #1
 800622a:	42bb      	cmp	r3, r7
 800622c:	dbfa      	blt.n	8006224 <__lshift+0x48>
 800622e:	43fb      	mvns	r3, r7
 8006230:	17db      	asrs	r3, r3, #31
 8006232:	401f      	ands	r7, r3
 8006234:	00bf      	lsls	r7, r7, #2
 8006236:	0023      	movs	r3, r4
 8006238:	201f      	movs	r0, #31
 800623a:	19c9      	adds	r1, r1, r7
 800623c:	0037      	movs	r7, r6
 800623e:	6922      	ldr	r2, [r4, #16]
 8006240:	3314      	adds	r3, #20
 8006242:	0092      	lsls	r2, r2, #2
 8006244:	189a      	adds	r2, r3, r2
 8006246:	4007      	ands	r7, r0
 8006248:	4206      	tst	r6, r0
 800624a:	d029      	beq.n	80062a0 <__lshift+0xc4>
 800624c:	3001      	adds	r0, #1
 800624e:	1bc0      	subs	r0, r0, r7
 8006250:	9003      	str	r0, [sp, #12]
 8006252:	468c      	mov	ip, r1
 8006254:	2000      	movs	r0, #0
 8006256:	681e      	ldr	r6, [r3, #0]
 8006258:	40be      	lsls	r6, r7
 800625a:	4306      	orrs	r6, r0
 800625c:	4660      	mov	r0, ip
 800625e:	c040      	stmia	r0!, {r6}
 8006260:	4684      	mov	ip, r0
 8006262:	9e03      	ldr	r6, [sp, #12]
 8006264:	cb01      	ldmia	r3!, {r0}
 8006266:	40f0      	lsrs	r0, r6
 8006268:	429a      	cmp	r2, r3
 800626a:	d8f4      	bhi.n	8006256 <__lshift+0x7a>
 800626c:	0026      	movs	r6, r4
 800626e:	3615      	adds	r6, #21
 8006270:	2304      	movs	r3, #4
 8006272:	42b2      	cmp	r2, r6
 8006274:	d304      	bcc.n	8006280 <__lshift+0xa4>
 8006276:	1b13      	subs	r3, r2, r4
 8006278:	3b15      	subs	r3, #21
 800627a:	089b      	lsrs	r3, r3, #2
 800627c:	3301      	adds	r3, #1
 800627e:	009b      	lsls	r3, r3, #2
 8006280:	50c8      	str	r0, [r1, r3]
 8006282:	2800      	cmp	r0, #0
 8006284:	d002      	beq.n	800628c <__lshift+0xb0>
 8006286:	9b01      	ldr	r3, [sp, #4]
 8006288:	3302      	adds	r3, #2
 800628a:	9300      	str	r3, [sp, #0]
 800628c:	9b00      	ldr	r3, [sp, #0]
 800628e:	9802      	ldr	r0, [sp, #8]
 8006290:	3b01      	subs	r3, #1
 8006292:	0021      	movs	r1, r4
 8006294:	612b      	str	r3, [r5, #16]
 8006296:	f7ff fdc3 	bl	8005e20 <_Bfree>
 800629a:	0028      	movs	r0, r5
 800629c:	b005      	add	sp, #20
 800629e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062a0:	cb01      	ldmia	r3!, {r0}
 80062a2:	c101      	stmia	r1!, {r0}
 80062a4:	429a      	cmp	r2, r3
 80062a6:	d8fb      	bhi.n	80062a0 <__lshift+0xc4>
 80062a8:	e7f0      	b.n	800628c <__lshift+0xb0>
 80062aa:	46c0      	nop			@ (mov r8, r8)
 80062ac:	08008308 	.word	0x08008308
 80062b0:	08008319 	.word	0x08008319

080062b4 <__mcmp>:
 80062b4:	b530      	push	{r4, r5, lr}
 80062b6:	690b      	ldr	r3, [r1, #16]
 80062b8:	6904      	ldr	r4, [r0, #16]
 80062ba:	0002      	movs	r2, r0
 80062bc:	1ae0      	subs	r0, r4, r3
 80062be:	429c      	cmp	r4, r3
 80062c0:	d10f      	bne.n	80062e2 <__mcmp+0x2e>
 80062c2:	3214      	adds	r2, #20
 80062c4:	009b      	lsls	r3, r3, #2
 80062c6:	3114      	adds	r1, #20
 80062c8:	0014      	movs	r4, r2
 80062ca:	18c9      	adds	r1, r1, r3
 80062cc:	18d2      	adds	r2, r2, r3
 80062ce:	3a04      	subs	r2, #4
 80062d0:	3904      	subs	r1, #4
 80062d2:	6815      	ldr	r5, [r2, #0]
 80062d4:	680b      	ldr	r3, [r1, #0]
 80062d6:	429d      	cmp	r5, r3
 80062d8:	d004      	beq.n	80062e4 <__mcmp+0x30>
 80062da:	2001      	movs	r0, #1
 80062dc:	429d      	cmp	r5, r3
 80062de:	d200      	bcs.n	80062e2 <__mcmp+0x2e>
 80062e0:	3802      	subs	r0, #2
 80062e2:	bd30      	pop	{r4, r5, pc}
 80062e4:	4294      	cmp	r4, r2
 80062e6:	d3f2      	bcc.n	80062ce <__mcmp+0x1a>
 80062e8:	e7fb      	b.n	80062e2 <__mcmp+0x2e>
	...

080062ec <__mdiff>:
 80062ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062ee:	000c      	movs	r4, r1
 80062f0:	b087      	sub	sp, #28
 80062f2:	9000      	str	r0, [sp, #0]
 80062f4:	0011      	movs	r1, r2
 80062f6:	0020      	movs	r0, r4
 80062f8:	0017      	movs	r7, r2
 80062fa:	f7ff ffdb 	bl	80062b4 <__mcmp>
 80062fe:	1e05      	subs	r5, r0, #0
 8006300:	d110      	bne.n	8006324 <__mdiff+0x38>
 8006302:	0001      	movs	r1, r0
 8006304:	9800      	ldr	r0, [sp, #0]
 8006306:	f7ff fd47 	bl	8005d98 <_Balloc>
 800630a:	1e02      	subs	r2, r0, #0
 800630c:	d104      	bne.n	8006318 <__mdiff+0x2c>
 800630e:	4b40      	ldr	r3, [pc, #256]	@ (8006410 <__mdiff+0x124>)
 8006310:	4840      	ldr	r0, [pc, #256]	@ (8006414 <__mdiff+0x128>)
 8006312:	4941      	ldr	r1, [pc, #260]	@ (8006418 <__mdiff+0x12c>)
 8006314:	f000 f9b2 	bl	800667c <__assert_func>
 8006318:	2301      	movs	r3, #1
 800631a:	6145      	str	r5, [r0, #20]
 800631c:	6103      	str	r3, [r0, #16]
 800631e:	0010      	movs	r0, r2
 8006320:	b007      	add	sp, #28
 8006322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006324:	2600      	movs	r6, #0
 8006326:	42b0      	cmp	r0, r6
 8006328:	da03      	bge.n	8006332 <__mdiff+0x46>
 800632a:	0023      	movs	r3, r4
 800632c:	003c      	movs	r4, r7
 800632e:	001f      	movs	r7, r3
 8006330:	3601      	adds	r6, #1
 8006332:	6861      	ldr	r1, [r4, #4]
 8006334:	9800      	ldr	r0, [sp, #0]
 8006336:	f7ff fd2f 	bl	8005d98 <_Balloc>
 800633a:	1e02      	subs	r2, r0, #0
 800633c:	d103      	bne.n	8006346 <__mdiff+0x5a>
 800633e:	4b34      	ldr	r3, [pc, #208]	@ (8006410 <__mdiff+0x124>)
 8006340:	4834      	ldr	r0, [pc, #208]	@ (8006414 <__mdiff+0x128>)
 8006342:	4936      	ldr	r1, [pc, #216]	@ (800641c <__mdiff+0x130>)
 8006344:	e7e6      	b.n	8006314 <__mdiff+0x28>
 8006346:	6923      	ldr	r3, [r4, #16]
 8006348:	3414      	adds	r4, #20
 800634a:	9300      	str	r3, [sp, #0]
 800634c:	009b      	lsls	r3, r3, #2
 800634e:	18e3      	adds	r3, r4, r3
 8006350:	0021      	movs	r1, r4
 8006352:	9401      	str	r4, [sp, #4]
 8006354:	003c      	movs	r4, r7
 8006356:	9302      	str	r3, [sp, #8]
 8006358:	693b      	ldr	r3, [r7, #16]
 800635a:	3414      	adds	r4, #20
 800635c:	009b      	lsls	r3, r3, #2
 800635e:	18e3      	adds	r3, r4, r3
 8006360:	9303      	str	r3, [sp, #12]
 8006362:	0003      	movs	r3, r0
 8006364:	60c6      	str	r6, [r0, #12]
 8006366:	468c      	mov	ip, r1
 8006368:	2000      	movs	r0, #0
 800636a:	3314      	adds	r3, #20
 800636c:	9304      	str	r3, [sp, #16]
 800636e:	9305      	str	r3, [sp, #20]
 8006370:	4663      	mov	r3, ip
 8006372:	cb20      	ldmia	r3!, {r5}
 8006374:	b2a9      	uxth	r1, r5
 8006376:	000e      	movs	r6, r1
 8006378:	469c      	mov	ip, r3
 800637a:	cc08      	ldmia	r4!, {r3}
 800637c:	0c2d      	lsrs	r5, r5, #16
 800637e:	b299      	uxth	r1, r3
 8006380:	1a71      	subs	r1, r6, r1
 8006382:	1809      	adds	r1, r1, r0
 8006384:	0c1b      	lsrs	r3, r3, #16
 8006386:	1408      	asrs	r0, r1, #16
 8006388:	1aeb      	subs	r3, r5, r3
 800638a:	181b      	adds	r3, r3, r0
 800638c:	1418      	asrs	r0, r3, #16
 800638e:	b289      	uxth	r1, r1
 8006390:	041b      	lsls	r3, r3, #16
 8006392:	4319      	orrs	r1, r3
 8006394:	9b05      	ldr	r3, [sp, #20]
 8006396:	c302      	stmia	r3!, {r1}
 8006398:	9305      	str	r3, [sp, #20]
 800639a:	9b03      	ldr	r3, [sp, #12]
 800639c:	42a3      	cmp	r3, r4
 800639e:	d8e7      	bhi.n	8006370 <__mdiff+0x84>
 80063a0:	0039      	movs	r1, r7
 80063a2:	9c03      	ldr	r4, [sp, #12]
 80063a4:	3115      	adds	r1, #21
 80063a6:	2304      	movs	r3, #4
 80063a8:	428c      	cmp	r4, r1
 80063aa:	d304      	bcc.n	80063b6 <__mdiff+0xca>
 80063ac:	1be3      	subs	r3, r4, r7
 80063ae:	3b15      	subs	r3, #21
 80063b0:	089b      	lsrs	r3, r3, #2
 80063b2:	3301      	adds	r3, #1
 80063b4:	009b      	lsls	r3, r3, #2
 80063b6:	9901      	ldr	r1, [sp, #4]
 80063b8:	18cd      	adds	r5, r1, r3
 80063ba:	9904      	ldr	r1, [sp, #16]
 80063bc:	002e      	movs	r6, r5
 80063be:	18cb      	adds	r3, r1, r3
 80063c0:	001f      	movs	r7, r3
 80063c2:	9902      	ldr	r1, [sp, #8]
 80063c4:	428e      	cmp	r6, r1
 80063c6:	d311      	bcc.n	80063ec <__mdiff+0x100>
 80063c8:	9c02      	ldr	r4, [sp, #8]
 80063ca:	1ee9      	subs	r1, r5, #3
 80063cc:	2000      	movs	r0, #0
 80063ce:	428c      	cmp	r4, r1
 80063d0:	d304      	bcc.n	80063dc <__mdiff+0xf0>
 80063d2:	0021      	movs	r1, r4
 80063d4:	3103      	adds	r1, #3
 80063d6:	1b49      	subs	r1, r1, r5
 80063d8:	0889      	lsrs	r1, r1, #2
 80063da:	0088      	lsls	r0, r1, #2
 80063dc:	181b      	adds	r3, r3, r0
 80063de:	3b04      	subs	r3, #4
 80063e0:	6819      	ldr	r1, [r3, #0]
 80063e2:	2900      	cmp	r1, #0
 80063e4:	d010      	beq.n	8006408 <__mdiff+0x11c>
 80063e6:	9b00      	ldr	r3, [sp, #0]
 80063e8:	6113      	str	r3, [r2, #16]
 80063ea:	e798      	b.n	800631e <__mdiff+0x32>
 80063ec:	4684      	mov	ip, r0
 80063ee:	ce02      	ldmia	r6!, {r1}
 80063f0:	b288      	uxth	r0, r1
 80063f2:	4460      	add	r0, ip
 80063f4:	1400      	asrs	r0, r0, #16
 80063f6:	0c0c      	lsrs	r4, r1, #16
 80063f8:	1904      	adds	r4, r0, r4
 80063fa:	4461      	add	r1, ip
 80063fc:	1420      	asrs	r0, r4, #16
 80063fe:	b289      	uxth	r1, r1
 8006400:	0424      	lsls	r4, r4, #16
 8006402:	4321      	orrs	r1, r4
 8006404:	c702      	stmia	r7!, {r1}
 8006406:	e7dc      	b.n	80063c2 <__mdiff+0xd6>
 8006408:	9900      	ldr	r1, [sp, #0]
 800640a:	3901      	subs	r1, #1
 800640c:	9100      	str	r1, [sp, #0]
 800640e:	e7e6      	b.n	80063de <__mdiff+0xf2>
 8006410:	08008308 	.word	0x08008308
 8006414:	08008319 	.word	0x08008319
 8006418:	00000237 	.word	0x00000237
 800641c:	00000245 	.word	0x00000245

08006420 <__d2b>:
 8006420:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006422:	2101      	movs	r1, #1
 8006424:	0016      	movs	r6, r2
 8006426:	001f      	movs	r7, r3
 8006428:	f7ff fcb6 	bl	8005d98 <_Balloc>
 800642c:	1e04      	subs	r4, r0, #0
 800642e:	d105      	bne.n	800643c <__d2b+0x1c>
 8006430:	0022      	movs	r2, r4
 8006432:	4b25      	ldr	r3, [pc, #148]	@ (80064c8 <__d2b+0xa8>)
 8006434:	4825      	ldr	r0, [pc, #148]	@ (80064cc <__d2b+0xac>)
 8006436:	4926      	ldr	r1, [pc, #152]	@ (80064d0 <__d2b+0xb0>)
 8006438:	f000 f920 	bl	800667c <__assert_func>
 800643c:	033b      	lsls	r3, r7, #12
 800643e:	007d      	lsls	r5, r7, #1
 8006440:	0b1b      	lsrs	r3, r3, #12
 8006442:	0d6d      	lsrs	r5, r5, #21
 8006444:	d002      	beq.n	800644c <__d2b+0x2c>
 8006446:	2280      	movs	r2, #128	@ 0x80
 8006448:	0352      	lsls	r2, r2, #13
 800644a:	4313      	orrs	r3, r2
 800644c:	9301      	str	r3, [sp, #4]
 800644e:	2e00      	cmp	r6, #0
 8006450:	d025      	beq.n	800649e <__d2b+0x7e>
 8006452:	4668      	mov	r0, sp
 8006454:	9600      	str	r6, [sp, #0]
 8006456:	f7ff fd6c 	bl	8005f32 <__lo0bits>
 800645a:	9b01      	ldr	r3, [sp, #4]
 800645c:	9900      	ldr	r1, [sp, #0]
 800645e:	2800      	cmp	r0, #0
 8006460:	d01b      	beq.n	800649a <__d2b+0x7a>
 8006462:	2220      	movs	r2, #32
 8006464:	001e      	movs	r6, r3
 8006466:	1a12      	subs	r2, r2, r0
 8006468:	4096      	lsls	r6, r2
 800646a:	0032      	movs	r2, r6
 800646c:	40c3      	lsrs	r3, r0
 800646e:	430a      	orrs	r2, r1
 8006470:	6162      	str	r2, [r4, #20]
 8006472:	9301      	str	r3, [sp, #4]
 8006474:	9e01      	ldr	r6, [sp, #4]
 8006476:	61a6      	str	r6, [r4, #24]
 8006478:	1e73      	subs	r3, r6, #1
 800647a:	419e      	sbcs	r6, r3
 800647c:	3601      	adds	r6, #1
 800647e:	6126      	str	r6, [r4, #16]
 8006480:	2d00      	cmp	r5, #0
 8006482:	d014      	beq.n	80064ae <__d2b+0x8e>
 8006484:	2635      	movs	r6, #53	@ 0x35
 8006486:	4b13      	ldr	r3, [pc, #76]	@ (80064d4 <__d2b+0xb4>)
 8006488:	18ed      	adds	r5, r5, r3
 800648a:	9b08      	ldr	r3, [sp, #32]
 800648c:	182d      	adds	r5, r5, r0
 800648e:	601d      	str	r5, [r3, #0]
 8006490:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006492:	1a36      	subs	r6, r6, r0
 8006494:	601e      	str	r6, [r3, #0]
 8006496:	0020      	movs	r0, r4
 8006498:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800649a:	6161      	str	r1, [r4, #20]
 800649c:	e7ea      	b.n	8006474 <__d2b+0x54>
 800649e:	a801      	add	r0, sp, #4
 80064a0:	f7ff fd47 	bl	8005f32 <__lo0bits>
 80064a4:	9b01      	ldr	r3, [sp, #4]
 80064a6:	2601      	movs	r6, #1
 80064a8:	6163      	str	r3, [r4, #20]
 80064aa:	3020      	adds	r0, #32
 80064ac:	e7e7      	b.n	800647e <__d2b+0x5e>
 80064ae:	4b0a      	ldr	r3, [pc, #40]	@ (80064d8 <__d2b+0xb8>)
 80064b0:	18c0      	adds	r0, r0, r3
 80064b2:	9b08      	ldr	r3, [sp, #32]
 80064b4:	6018      	str	r0, [r3, #0]
 80064b6:	4b09      	ldr	r3, [pc, #36]	@ (80064dc <__d2b+0xbc>)
 80064b8:	18f3      	adds	r3, r6, r3
 80064ba:	009b      	lsls	r3, r3, #2
 80064bc:	18e3      	adds	r3, r4, r3
 80064be:	6958      	ldr	r0, [r3, #20]
 80064c0:	f7ff fd16 	bl	8005ef0 <__hi0bits>
 80064c4:	0176      	lsls	r6, r6, #5
 80064c6:	e7e3      	b.n	8006490 <__d2b+0x70>
 80064c8:	08008308 	.word	0x08008308
 80064cc:	08008319 	.word	0x08008319
 80064d0:	0000030f 	.word	0x0000030f
 80064d4:	fffffbcd 	.word	0xfffffbcd
 80064d8:	fffffbce 	.word	0xfffffbce
 80064dc:	3fffffff 	.word	0x3fffffff

080064e0 <__sflush_r>:
 80064e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80064e2:	220c      	movs	r2, #12
 80064e4:	5e8b      	ldrsh	r3, [r1, r2]
 80064e6:	0005      	movs	r5, r0
 80064e8:	000c      	movs	r4, r1
 80064ea:	071a      	lsls	r2, r3, #28
 80064ec:	d456      	bmi.n	800659c <__sflush_r+0xbc>
 80064ee:	684a      	ldr	r2, [r1, #4]
 80064f0:	2a00      	cmp	r2, #0
 80064f2:	dc02      	bgt.n	80064fa <__sflush_r+0x1a>
 80064f4:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 80064f6:	2a00      	cmp	r2, #0
 80064f8:	dd4e      	ble.n	8006598 <__sflush_r+0xb8>
 80064fa:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80064fc:	2f00      	cmp	r7, #0
 80064fe:	d04b      	beq.n	8006598 <__sflush_r+0xb8>
 8006500:	2200      	movs	r2, #0
 8006502:	2080      	movs	r0, #128	@ 0x80
 8006504:	682e      	ldr	r6, [r5, #0]
 8006506:	602a      	str	r2, [r5, #0]
 8006508:	001a      	movs	r2, r3
 800650a:	0140      	lsls	r0, r0, #5
 800650c:	6a21      	ldr	r1, [r4, #32]
 800650e:	4002      	ands	r2, r0
 8006510:	4203      	tst	r3, r0
 8006512:	d033      	beq.n	800657c <__sflush_r+0x9c>
 8006514:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8006516:	89a3      	ldrh	r3, [r4, #12]
 8006518:	075b      	lsls	r3, r3, #29
 800651a:	d506      	bpl.n	800652a <__sflush_r+0x4a>
 800651c:	6863      	ldr	r3, [r4, #4]
 800651e:	1ad2      	subs	r2, r2, r3
 8006520:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8006522:	2b00      	cmp	r3, #0
 8006524:	d001      	beq.n	800652a <__sflush_r+0x4a>
 8006526:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006528:	1ad2      	subs	r2, r2, r3
 800652a:	2300      	movs	r3, #0
 800652c:	0028      	movs	r0, r5
 800652e:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8006530:	6a21      	ldr	r1, [r4, #32]
 8006532:	47b8      	blx	r7
 8006534:	89a2      	ldrh	r2, [r4, #12]
 8006536:	1c43      	adds	r3, r0, #1
 8006538:	d106      	bne.n	8006548 <__sflush_r+0x68>
 800653a:	6829      	ldr	r1, [r5, #0]
 800653c:	291d      	cmp	r1, #29
 800653e:	d846      	bhi.n	80065ce <__sflush_r+0xee>
 8006540:	4b29      	ldr	r3, [pc, #164]	@ (80065e8 <__sflush_r+0x108>)
 8006542:	410b      	asrs	r3, r1
 8006544:	07db      	lsls	r3, r3, #31
 8006546:	d442      	bmi.n	80065ce <__sflush_r+0xee>
 8006548:	2300      	movs	r3, #0
 800654a:	6063      	str	r3, [r4, #4]
 800654c:	6923      	ldr	r3, [r4, #16]
 800654e:	6023      	str	r3, [r4, #0]
 8006550:	04d2      	lsls	r2, r2, #19
 8006552:	d505      	bpl.n	8006560 <__sflush_r+0x80>
 8006554:	1c43      	adds	r3, r0, #1
 8006556:	d102      	bne.n	800655e <__sflush_r+0x7e>
 8006558:	682b      	ldr	r3, [r5, #0]
 800655a:	2b00      	cmp	r3, #0
 800655c:	d100      	bne.n	8006560 <__sflush_r+0x80>
 800655e:	6560      	str	r0, [r4, #84]	@ 0x54
 8006560:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006562:	602e      	str	r6, [r5, #0]
 8006564:	2900      	cmp	r1, #0
 8006566:	d017      	beq.n	8006598 <__sflush_r+0xb8>
 8006568:	0023      	movs	r3, r4
 800656a:	3344      	adds	r3, #68	@ 0x44
 800656c:	4299      	cmp	r1, r3
 800656e:	d002      	beq.n	8006576 <__sflush_r+0x96>
 8006570:	0028      	movs	r0, r5
 8006572:	f7ff fb0b 	bl	8005b8c <_free_r>
 8006576:	2300      	movs	r3, #0
 8006578:	6363      	str	r3, [r4, #52]	@ 0x34
 800657a:	e00d      	b.n	8006598 <__sflush_r+0xb8>
 800657c:	2301      	movs	r3, #1
 800657e:	0028      	movs	r0, r5
 8006580:	47b8      	blx	r7
 8006582:	0002      	movs	r2, r0
 8006584:	1c43      	adds	r3, r0, #1
 8006586:	d1c6      	bne.n	8006516 <__sflush_r+0x36>
 8006588:	682b      	ldr	r3, [r5, #0]
 800658a:	2b00      	cmp	r3, #0
 800658c:	d0c3      	beq.n	8006516 <__sflush_r+0x36>
 800658e:	2b1d      	cmp	r3, #29
 8006590:	d001      	beq.n	8006596 <__sflush_r+0xb6>
 8006592:	2b16      	cmp	r3, #22
 8006594:	d11a      	bne.n	80065cc <__sflush_r+0xec>
 8006596:	602e      	str	r6, [r5, #0]
 8006598:	2000      	movs	r0, #0
 800659a:	e01e      	b.n	80065da <__sflush_r+0xfa>
 800659c:	690e      	ldr	r6, [r1, #16]
 800659e:	2e00      	cmp	r6, #0
 80065a0:	d0fa      	beq.n	8006598 <__sflush_r+0xb8>
 80065a2:	680f      	ldr	r7, [r1, #0]
 80065a4:	600e      	str	r6, [r1, #0]
 80065a6:	1bba      	subs	r2, r7, r6
 80065a8:	9201      	str	r2, [sp, #4]
 80065aa:	2200      	movs	r2, #0
 80065ac:	079b      	lsls	r3, r3, #30
 80065ae:	d100      	bne.n	80065b2 <__sflush_r+0xd2>
 80065b0:	694a      	ldr	r2, [r1, #20]
 80065b2:	60a2      	str	r2, [r4, #8]
 80065b4:	9b01      	ldr	r3, [sp, #4]
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	ddee      	ble.n	8006598 <__sflush_r+0xb8>
 80065ba:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80065bc:	0032      	movs	r2, r6
 80065be:	001f      	movs	r7, r3
 80065c0:	0028      	movs	r0, r5
 80065c2:	9b01      	ldr	r3, [sp, #4]
 80065c4:	6a21      	ldr	r1, [r4, #32]
 80065c6:	47b8      	blx	r7
 80065c8:	2800      	cmp	r0, #0
 80065ca:	dc07      	bgt.n	80065dc <__sflush_r+0xfc>
 80065cc:	89a2      	ldrh	r2, [r4, #12]
 80065ce:	2340      	movs	r3, #64	@ 0x40
 80065d0:	2001      	movs	r0, #1
 80065d2:	4313      	orrs	r3, r2
 80065d4:	b21b      	sxth	r3, r3
 80065d6:	81a3      	strh	r3, [r4, #12]
 80065d8:	4240      	negs	r0, r0
 80065da:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80065dc:	9b01      	ldr	r3, [sp, #4]
 80065de:	1836      	adds	r6, r6, r0
 80065e0:	1a1b      	subs	r3, r3, r0
 80065e2:	9301      	str	r3, [sp, #4]
 80065e4:	e7e6      	b.n	80065b4 <__sflush_r+0xd4>
 80065e6:	46c0      	nop			@ (mov r8, r8)
 80065e8:	dfbffffe 	.word	0xdfbffffe

080065ec <_fflush_r>:
 80065ec:	690b      	ldr	r3, [r1, #16]
 80065ee:	b570      	push	{r4, r5, r6, lr}
 80065f0:	0005      	movs	r5, r0
 80065f2:	000c      	movs	r4, r1
 80065f4:	2b00      	cmp	r3, #0
 80065f6:	d102      	bne.n	80065fe <_fflush_r+0x12>
 80065f8:	2500      	movs	r5, #0
 80065fa:	0028      	movs	r0, r5
 80065fc:	bd70      	pop	{r4, r5, r6, pc}
 80065fe:	2800      	cmp	r0, #0
 8006600:	d004      	beq.n	800660c <_fflush_r+0x20>
 8006602:	6a03      	ldr	r3, [r0, #32]
 8006604:	2b00      	cmp	r3, #0
 8006606:	d101      	bne.n	800660c <_fflush_r+0x20>
 8006608:	f7fe fb2c 	bl	8004c64 <__sinit>
 800660c:	220c      	movs	r2, #12
 800660e:	5ea3      	ldrsh	r3, [r4, r2]
 8006610:	2b00      	cmp	r3, #0
 8006612:	d0f1      	beq.n	80065f8 <_fflush_r+0xc>
 8006614:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006616:	07d2      	lsls	r2, r2, #31
 8006618:	d404      	bmi.n	8006624 <_fflush_r+0x38>
 800661a:	059b      	lsls	r3, r3, #22
 800661c:	d402      	bmi.n	8006624 <_fflush_r+0x38>
 800661e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006620:	f7fe fc25 	bl	8004e6e <__retarget_lock_acquire_recursive>
 8006624:	0028      	movs	r0, r5
 8006626:	0021      	movs	r1, r4
 8006628:	f7ff ff5a 	bl	80064e0 <__sflush_r>
 800662c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800662e:	0005      	movs	r5, r0
 8006630:	07db      	lsls	r3, r3, #31
 8006632:	d4e2      	bmi.n	80065fa <_fflush_r+0xe>
 8006634:	89a3      	ldrh	r3, [r4, #12]
 8006636:	059b      	lsls	r3, r3, #22
 8006638:	d4df      	bmi.n	80065fa <_fflush_r+0xe>
 800663a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800663c:	f7fe fc18 	bl	8004e70 <__retarget_lock_release_recursive>
 8006640:	e7db      	b.n	80065fa <_fflush_r+0xe>
	...

08006644 <_sbrk_r>:
 8006644:	2300      	movs	r3, #0
 8006646:	b570      	push	{r4, r5, r6, lr}
 8006648:	4d06      	ldr	r5, [pc, #24]	@ (8006664 <_sbrk_r+0x20>)
 800664a:	0004      	movs	r4, r0
 800664c:	0008      	movs	r0, r1
 800664e:	602b      	str	r3, [r5, #0]
 8006650:	f7fc fb1a 	bl	8002c88 <_sbrk>
 8006654:	1c43      	adds	r3, r0, #1
 8006656:	d103      	bne.n	8006660 <_sbrk_r+0x1c>
 8006658:	682b      	ldr	r3, [r5, #0]
 800665a:	2b00      	cmp	r3, #0
 800665c:	d000      	beq.n	8006660 <_sbrk_r+0x1c>
 800665e:	6023      	str	r3, [r4, #0]
 8006660:	bd70      	pop	{r4, r5, r6, pc}
 8006662:	46c0      	nop			@ (mov r8, r8)
 8006664:	200007bc 	.word	0x200007bc

08006668 <memcpy>:
 8006668:	2300      	movs	r3, #0
 800666a:	b510      	push	{r4, lr}
 800666c:	429a      	cmp	r2, r3
 800666e:	d100      	bne.n	8006672 <memcpy+0xa>
 8006670:	bd10      	pop	{r4, pc}
 8006672:	5ccc      	ldrb	r4, [r1, r3]
 8006674:	54c4      	strb	r4, [r0, r3]
 8006676:	3301      	adds	r3, #1
 8006678:	e7f8      	b.n	800666c <memcpy+0x4>
	...

0800667c <__assert_func>:
 800667c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800667e:	0014      	movs	r4, r2
 8006680:	001a      	movs	r2, r3
 8006682:	4b09      	ldr	r3, [pc, #36]	@ (80066a8 <__assert_func+0x2c>)
 8006684:	0005      	movs	r5, r0
 8006686:	681b      	ldr	r3, [r3, #0]
 8006688:	000e      	movs	r6, r1
 800668a:	68d8      	ldr	r0, [r3, #12]
 800668c:	4b07      	ldr	r3, [pc, #28]	@ (80066ac <__assert_func+0x30>)
 800668e:	2c00      	cmp	r4, #0
 8006690:	d101      	bne.n	8006696 <__assert_func+0x1a>
 8006692:	4b07      	ldr	r3, [pc, #28]	@ (80066b0 <__assert_func+0x34>)
 8006694:	001c      	movs	r4, r3
 8006696:	4907      	ldr	r1, [pc, #28]	@ (80066b4 <__assert_func+0x38>)
 8006698:	9301      	str	r3, [sp, #4]
 800669a:	9402      	str	r4, [sp, #8]
 800669c:	002b      	movs	r3, r5
 800669e:	9600      	str	r6, [sp, #0]
 80066a0:	f000 f856 	bl	8006750 <fiprintf>
 80066a4:	f000 f864 	bl	8006770 <abort>
 80066a8:	20000038 	.word	0x20000038
 80066ac:	0800847a 	.word	0x0800847a
 80066b0:	080084b5 	.word	0x080084b5
 80066b4:	08008487 	.word	0x08008487

080066b8 <_calloc_r>:
 80066b8:	b570      	push	{r4, r5, r6, lr}
 80066ba:	0c0b      	lsrs	r3, r1, #16
 80066bc:	0c15      	lsrs	r5, r2, #16
 80066be:	2b00      	cmp	r3, #0
 80066c0:	d11e      	bne.n	8006700 <_calloc_r+0x48>
 80066c2:	2d00      	cmp	r5, #0
 80066c4:	d10c      	bne.n	80066e0 <_calloc_r+0x28>
 80066c6:	b289      	uxth	r1, r1
 80066c8:	b294      	uxth	r4, r2
 80066ca:	434c      	muls	r4, r1
 80066cc:	0021      	movs	r1, r4
 80066ce:	f7ff fad3 	bl	8005c78 <_malloc_r>
 80066d2:	1e05      	subs	r5, r0, #0
 80066d4:	d01a      	beq.n	800670c <_calloc_r+0x54>
 80066d6:	0022      	movs	r2, r4
 80066d8:	2100      	movs	r1, #0
 80066da:	f7fe fb43 	bl	8004d64 <memset>
 80066de:	e016      	b.n	800670e <_calloc_r+0x56>
 80066e0:	1c2b      	adds	r3, r5, #0
 80066e2:	1c0c      	adds	r4, r1, #0
 80066e4:	b289      	uxth	r1, r1
 80066e6:	b292      	uxth	r2, r2
 80066e8:	434a      	muls	r2, r1
 80066ea:	b29b      	uxth	r3, r3
 80066ec:	b2a1      	uxth	r1, r4
 80066ee:	4359      	muls	r1, r3
 80066f0:	0c14      	lsrs	r4, r2, #16
 80066f2:	190c      	adds	r4, r1, r4
 80066f4:	0c23      	lsrs	r3, r4, #16
 80066f6:	d107      	bne.n	8006708 <_calloc_r+0x50>
 80066f8:	0424      	lsls	r4, r4, #16
 80066fa:	b292      	uxth	r2, r2
 80066fc:	4314      	orrs	r4, r2
 80066fe:	e7e5      	b.n	80066cc <_calloc_r+0x14>
 8006700:	2d00      	cmp	r5, #0
 8006702:	d101      	bne.n	8006708 <_calloc_r+0x50>
 8006704:	1c14      	adds	r4, r2, #0
 8006706:	e7ed      	b.n	80066e4 <_calloc_r+0x2c>
 8006708:	230c      	movs	r3, #12
 800670a:	6003      	str	r3, [r0, #0]
 800670c:	2500      	movs	r5, #0
 800670e:	0028      	movs	r0, r5
 8006710:	bd70      	pop	{r4, r5, r6, pc}

08006712 <__ascii_mbtowc>:
 8006712:	b082      	sub	sp, #8
 8006714:	2900      	cmp	r1, #0
 8006716:	d100      	bne.n	800671a <__ascii_mbtowc+0x8>
 8006718:	a901      	add	r1, sp, #4
 800671a:	1e10      	subs	r0, r2, #0
 800671c:	d006      	beq.n	800672c <__ascii_mbtowc+0x1a>
 800671e:	2b00      	cmp	r3, #0
 8006720:	d006      	beq.n	8006730 <__ascii_mbtowc+0x1e>
 8006722:	7813      	ldrb	r3, [r2, #0]
 8006724:	600b      	str	r3, [r1, #0]
 8006726:	7810      	ldrb	r0, [r2, #0]
 8006728:	1e43      	subs	r3, r0, #1
 800672a:	4198      	sbcs	r0, r3
 800672c:	b002      	add	sp, #8
 800672e:	4770      	bx	lr
 8006730:	2002      	movs	r0, #2
 8006732:	4240      	negs	r0, r0
 8006734:	e7fa      	b.n	800672c <__ascii_mbtowc+0x1a>

08006736 <__ascii_wctomb>:
 8006736:	0003      	movs	r3, r0
 8006738:	1e08      	subs	r0, r1, #0
 800673a:	d005      	beq.n	8006748 <__ascii_wctomb+0x12>
 800673c:	2aff      	cmp	r2, #255	@ 0xff
 800673e:	d904      	bls.n	800674a <__ascii_wctomb+0x14>
 8006740:	228a      	movs	r2, #138	@ 0x8a
 8006742:	2001      	movs	r0, #1
 8006744:	601a      	str	r2, [r3, #0]
 8006746:	4240      	negs	r0, r0
 8006748:	4770      	bx	lr
 800674a:	2001      	movs	r0, #1
 800674c:	700a      	strb	r2, [r1, #0]
 800674e:	e7fb      	b.n	8006748 <__ascii_wctomb+0x12>

08006750 <fiprintf>:
 8006750:	b40e      	push	{r1, r2, r3}
 8006752:	b517      	push	{r0, r1, r2, r4, lr}
 8006754:	4c05      	ldr	r4, [pc, #20]	@ (800676c <fiprintf+0x1c>)
 8006756:	ab05      	add	r3, sp, #20
 8006758:	cb04      	ldmia	r3!, {r2}
 800675a:	0001      	movs	r1, r0
 800675c:	6820      	ldr	r0, [r4, #0]
 800675e:	9301      	str	r3, [sp, #4]
 8006760:	f000 f834 	bl	80067cc <_vfiprintf_r>
 8006764:	bc1e      	pop	{r1, r2, r3, r4}
 8006766:	bc08      	pop	{r3}
 8006768:	b003      	add	sp, #12
 800676a:	4718      	bx	r3
 800676c:	20000038 	.word	0x20000038

08006770 <abort>:
 8006770:	2006      	movs	r0, #6
 8006772:	b510      	push	{r4, lr}
 8006774:	f000 fa10 	bl	8006b98 <raise>
 8006778:	2001      	movs	r0, #1
 800677a:	f7fc fa12 	bl	8002ba2 <_exit>

0800677e <__sfputc_r>:
 800677e:	6893      	ldr	r3, [r2, #8]
 8006780:	b510      	push	{r4, lr}
 8006782:	3b01      	subs	r3, #1
 8006784:	6093      	str	r3, [r2, #8]
 8006786:	2b00      	cmp	r3, #0
 8006788:	da04      	bge.n	8006794 <__sfputc_r+0x16>
 800678a:	6994      	ldr	r4, [r2, #24]
 800678c:	42a3      	cmp	r3, r4
 800678e:	db07      	blt.n	80067a0 <__sfputc_r+0x22>
 8006790:	290a      	cmp	r1, #10
 8006792:	d005      	beq.n	80067a0 <__sfputc_r+0x22>
 8006794:	6813      	ldr	r3, [r2, #0]
 8006796:	1c58      	adds	r0, r3, #1
 8006798:	6010      	str	r0, [r2, #0]
 800679a:	7019      	strb	r1, [r3, #0]
 800679c:	0008      	movs	r0, r1
 800679e:	bd10      	pop	{r4, pc}
 80067a0:	f000 f930 	bl	8006a04 <__swbuf_r>
 80067a4:	0001      	movs	r1, r0
 80067a6:	e7f9      	b.n	800679c <__sfputc_r+0x1e>

080067a8 <__sfputs_r>:
 80067a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067aa:	0006      	movs	r6, r0
 80067ac:	000f      	movs	r7, r1
 80067ae:	0014      	movs	r4, r2
 80067b0:	18d5      	adds	r5, r2, r3
 80067b2:	42ac      	cmp	r4, r5
 80067b4:	d101      	bne.n	80067ba <__sfputs_r+0x12>
 80067b6:	2000      	movs	r0, #0
 80067b8:	e007      	b.n	80067ca <__sfputs_r+0x22>
 80067ba:	7821      	ldrb	r1, [r4, #0]
 80067bc:	003a      	movs	r2, r7
 80067be:	0030      	movs	r0, r6
 80067c0:	f7ff ffdd 	bl	800677e <__sfputc_r>
 80067c4:	3401      	adds	r4, #1
 80067c6:	1c43      	adds	r3, r0, #1
 80067c8:	d1f3      	bne.n	80067b2 <__sfputs_r+0xa>
 80067ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080067cc <_vfiprintf_r>:
 80067cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067ce:	b0a1      	sub	sp, #132	@ 0x84
 80067d0:	000f      	movs	r7, r1
 80067d2:	0015      	movs	r5, r2
 80067d4:	001e      	movs	r6, r3
 80067d6:	9003      	str	r0, [sp, #12]
 80067d8:	2800      	cmp	r0, #0
 80067da:	d004      	beq.n	80067e6 <_vfiprintf_r+0x1a>
 80067dc:	6a03      	ldr	r3, [r0, #32]
 80067de:	2b00      	cmp	r3, #0
 80067e0:	d101      	bne.n	80067e6 <_vfiprintf_r+0x1a>
 80067e2:	f7fe fa3f 	bl	8004c64 <__sinit>
 80067e6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80067e8:	07db      	lsls	r3, r3, #31
 80067ea:	d405      	bmi.n	80067f8 <_vfiprintf_r+0x2c>
 80067ec:	89bb      	ldrh	r3, [r7, #12]
 80067ee:	059b      	lsls	r3, r3, #22
 80067f0:	d402      	bmi.n	80067f8 <_vfiprintf_r+0x2c>
 80067f2:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80067f4:	f7fe fb3b 	bl	8004e6e <__retarget_lock_acquire_recursive>
 80067f8:	89bb      	ldrh	r3, [r7, #12]
 80067fa:	071b      	lsls	r3, r3, #28
 80067fc:	d502      	bpl.n	8006804 <_vfiprintf_r+0x38>
 80067fe:	693b      	ldr	r3, [r7, #16]
 8006800:	2b00      	cmp	r3, #0
 8006802:	d113      	bne.n	800682c <_vfiprintf_r+0x60>
 8006804:	0039      	movs	r1, r7
 8006806:	9803      	ldr	r0, [sp, #12]
 8006808:	f000 f93e 	bl	8006a88 <__swsetup_r>
 800680c:	2800      	cmp	r0, #0
 800680e:	d00d      	beq.n	800682c <_vfiprintf_r+0x60>
 8006810:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006812:	07db      	lsls	r3, r3, #31
 8006814:	d503      	bpl.n	800681e <_vfiprintf_r+0x52>
 8006816:	2001      	movs	r0, #1
 8006818:	4240      	negs	r0, r0
 800681a:	b021      	add	sp, #132	@ 0x84
 800681c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800681e:	89bb      	ldrh	r3, [r7, #12]
 8006820:	059b      	lsls	r3, r3, #22
 8006822:	d4f8      	bmi.n	8006816 <_vfiprintf_r+0x4a>
 8006824:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8006826:	f7fe fb23 	bl	8004e70 <__retarget_lock_release_recursive>
 800682a:	e7f4      	b.n	8006816 <_vfiprintf_r+0x4a>
 800682c:	2300      	movs	r3, #0
 800682e:	ac08      	add	r4, sp, #32
 8006830:	6163      	str	r3, [r4, #20]
 8006832:	3320      	adds	r3, #32
 8006834:	7663      	strb	r3, [r4, #25]
 8006836:	3310      	adds	r3, #16
 8006838:	76a3      	strb	r3, [r4, #26]
 800683a:	9607      	str	r6, [sp, #28]
 800683c:	002e      	movs	r6, r5
 800683e:	7833      	ldrb	r3, [r6, #0]
 8006840:	2b00      	cmp	r3, #0
 8006842:	d001      	beq.n	8006848 <_vfiprintf_r+0x7c>
 8006844:	2b25      	cmp	r3, #37	@ 0x25
 8006846:	d148      	bne.n	80068da <_vfiprintf_r+0x10e>
 8006848:	1b73      	subs	r3, r6, r5
 800684a:	9305      	str	r3, [sp, #20]
 800684c:	42ae      	cmp	r6, r5
 800684e:	d00b      	beq.n	8006868 <_vfiprintf_r+0x9c>
 8006850:	002a      	movs	r2, r5
 8006852:	0039      	movs	r1, r7
 8006854:	9803      	ldr	r0, [sp, #12]
 8006856:	f7ff ffa7 	bl	80067a8 <__sfputs_r>
 800685a:	3001      	adds	r0, #1
 800685c:	d100      	bne.n	8006860 <_vfiprintf_r+0x94>
 800685e:	e0ae      	b.n	80069be <_vfiprintf_r+0x1f2>
 8006860:	6963      	ldr	r3, [r4, #20]
 8006862:	9a05      	ldr	r2, [sp, #20]
 8006864:	189b      	adds	r3, r3, r2
 8006866:	6163      	str	r3, [r4, #20]
 8006868:	7833      	ldrb	r3, [r6, #0]
 800686a:	2b00      	cmp	r3, #0
 800686c:	d100      	bne.n	8006870 <_vfiprintf_r+0xa4>
 800686e:	e0a6      	b.n	80069be <_vfiprintf_r+0x1f2>
 8006870:	2201      	movs	r2, #1
 8006872:	2300      	movs	r3, #0
 8006874:	4252      	negs	r2, r2
 8006876:	6062      	str	r2, [r4, #4]
 8006878:	a904      	add	r1, sp, #16
 800687a:	3254      	adds	r2, #84	@ 0x54
 800687c:	1852      	adds	r2, r2, r1
 800687e:	1c75      	adds	r5, r6, #1
 8006880:	6023      	str	r3, [r4, #0]
 8006882:	60e3      	str	r3, [r4, #12]
 8006884:	60a3      	str	r3, [r4, #8]
 8006886:	7013      	strb	r3, [r2, #0]
 8006888:	65a3      	str	r3, [r4, #88]	@ 0x58
 800688a:	4b59      	ldr	r3, [pc, #356]	@ (80069f0 <_vfiprintf_r+0x224>)
 800688c:	2205      	movs	r2, #5
 800688e:	0018      	movs	r0, r3
 8006890:	7829      	ldrb	r1, [r5, #0]
 8006892:	9305      	str	r3, [sp, #20]
 8006894:	f7fe faed 	bl	8004e72 <memchr>
 8006898:	1c6e      	adds	r6, r5, #1
 800689a:	2800      	cmp	r0, #0
 800689c:	d11f      	bne.n	80068de <_vfiprintf_r+0x112>
 800689e:	6822      	ldr	r2, [r4, #0]
 80068a0:	06d3      	lsls	r3, r2, #27
 80068a2:	d504      	bpl.n	80068ae <_vfiprintf_r+0xe2>
 80068a4:	2353      	movs	r3, #83	@ 0x53
 80068a6:	a904      	add	r1, sp, #16
 80068a8:	185b      	adds	r3, r3, r1
 80068aa:	2120      	movs	r1, #32
 80068ac:	7019      	strb	r1, [r3, #0]
 80068ae:	0713      	lsls	r3, r2, #28
 80068b0:	d504      	bpl.n	80068bc <_vfiprintf_r+0xf0>
 80068b2:	2353      	movs	r3, #83	@ 0x53
 80068b4:	a904      	add	r1, sp, #16
 80068b6:	185b      	adds	r3, r3, r1
 80068b8:	212b      	movs	r1, #43	@ 0x2b
 80068ba:	7019      	strb	r1, [r3, #0]
 80068bc:	782b      	ldrb	r3, [r5, #0]
 80068be:	2b2a      	cmp	r3, #42	@ 0x2a
 80068c0:	d016      	beq.n	80068f0 <_vfiprintf_r+0x124>
 80068c2:	002e      	movs	r6, r5
 80068c4:	2100      	movs	r1, #0
 80068c6:	200a      	movs	r0, #10
 80068c8:	68e3      	ldr	r3, [r4, #12]
 80068ca:	7832      	ldrb	r2, [r6, #0]
 80068cc:	1c75      	adds	r5, r6, #1
 80068ce:	3a30      	subs	r2, #48	@ 0x30
 80068d0:	2a09      	cmp	r2, #9
 80068d2:	d950      	bls.n	8006976 <_vfiprintf_r+0x1aa>
 80068d4:	2900      	cmp	r1, #0
 80068d6:	d111      	bne.n	80068fc <_vfiprintf_r+0x130>
 80068d8:	e017      	b.n	800690a <_vfiprintf_r+0x13e>
 80068da:	3601      	adds	r6, #1
 80068dc:	e7af      	b.n	800683e <_vfiprintf_r+0x72>
 80068de:	9b05      	ldr	r3, [sp, #20]
 80068e0:	6822      	ldr	r2, [r4, #0]
 80068e2:	1ac0      	subs	r0, r0, r3
 80068e4:	2301      	movs	r3, #1
 80068e6:	4083      	lsls	r3, r0
 80068e8:	4313      	orrs	r3, r2
 80068ea:	0035      	movs	r5, r6
 80068ec:	6023      	str	r3, [r4, #0]
 80068ee:	e7cc      	b.n	800688a <_vfiprintf_r+0xbe>
 80068f0:	9b07      	ldr	r3, [sp, #28]
 80068f2:	1d19      	adds	r1, r3, #4
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	9107      	str	r1, [sp, #28]
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	db01      	blt.n	8006900 <_vfiprintf_r+0x134>
 80068fc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80068fe:	e004      	b.n	800690a <_vfiprintf_r+0x13e>
 8006900:	425b      	negs	r3, r3
 8006902:	60e3      	str	r3, [r4, #12]
 8006904:	2302      	movs	r3, #2
 8006906:	4313      	orrs	r3, r2
 8006908:	6023      	str	r3, [r4, #0]
 800690a:	7833      	ldrb	r3, [r6, #0]
 800690c:	2b2e      	cmp	r3, #46	@ 0x2e
 800690e:	d10c      	bne.n	800692a <_vfiprintf_r+0x15e>
 8006910:	7873      	ldrb	r3, [r6, #1]
 8006912:	2b2a      	cmp	r3, #42	@ 0x2a
 8006914:	d134      	bne.n	8006980 <_vfiprintf_r+0x1b4>
 8006916:	9b07      	ldr	r3, [sp, #28]
 8006918:	3602      	adds	r6, #2
 800691a:	1d1a      	adds	r2, r3, #4
 800691c:	681b      	ldr	r3, [r3, #0]
 800691e:	9207      	str	r2, [sp, #28]
 8006920:	2b00      	cmp	r3, #0
 8006922:	da01      	bge.n	8006928 <_vfiprintf_r+0x15c>
 8006924:	2301      	movs	r3, #1
 8006926:	425b      	negs	r3, r3
 8006928:	9309      	str	r3, [sp, #36]	@ 0x24
 800692a:	4d32      	ldr	r5, [pc, #200]	@ (80069f4 <_vfiprintf_r+0x228>)
 800692c:	2203      	movs	r2, #3
 800692e:	0028      	movs	r0, r5
 8006930:	7831      	ldrb	r1, [r6, #0]
 8006932:	f7fe fa9e 	bl	8004e72 <memchr>
 8006936:	2800      	cmp	r0, #0
 8006938:	d006      	beq.n	8006948 <_vfiprintf_r+0x17c>
 800693a:	2340      	movs	r3, #64	@ 0x40
 800693c:	1b40      	subs	r0, r0, r5
 800693e:	4083      	lsls	r3, r0
 8006940:	6822      	ldr	r2, [r4, #0]
 8006942:	3601      	adds	r6, #1
 8006944:	4313      	orrs	r3, r2
 8006946:	6023      	str	r3, [r4, #0]
 8006948:	7831      	ldrb	r1, [r6, #0]
 800694a:	2206      	movs	r2, #6
 800694c:	482a      	ldr	r0, [pc, #168]	@ (80069f8 <_vfiprintf_r+0x22c>)
 800694e:	1c75      	adds	r5, r6, #1
 8006950:	7621      	strb	r1, [r4, #24]
 8006952:	f7fe fa8e 	bl	8004e72 <memchr>
 8006956:	2800      	cmp	r0, #0
 8006958:	d040      	beq.n	80069dc <_vfiprintf_r+0x210>
 800695a:	4b28      	ldr	r3, [pc, #160]	@ (80069fc <_vfiprintf_r+0x230>)
 800695c:	2b00      	cmp	r3, #0
 800695e:	d122      	bne.n	80069a6 <_vfiprintf_r+0x1da>
 8006960:	2207      	movs	r2, #7
 8006962:	9b07      	ldr	r3, [sp, #28]
 8006964:	3307      	adds	r3, #7
 8006966:	4393      	bics	r3, r2
 8006968:	3308      	adds	r3, #8
 800696a:	9307      	str	r3, [sp, #28]
 800696c:	6963      	ldr	r3, [r4, #20]
 800696e:	9a04      	ldr	r2, [sp, #16]
 8006970:	189b      	adds	r3, r3, r2
 8006972:	6163      	str	r3, [r4, #20]
 8006974:	e762      	b.n	800683c <_vfiprintf_r+0x70>
 8006976:	4343      	muls	r3, r0
 8006978:	002e      	movs	r6, r5
 800697a:	2101      	movs	r1, #1
 800697c:	189b      	adds	r3, r3, r2
 800697e:	e7a4      	b.n	80068ca <_vfiprintf_r+0xfe>
 8006980:	2300      	movs	r3, #0
 8006982:	200a      	movs	r0, #10
 8006984:	0019      	movs	r1, r3
 8006986:	3601      	adds	r6, #1
 8006988:	6063      	str	r3, [r4, #4]
 800698a:	7832      	ldrb	r2, [r6, #0]
 800698c:	1c75      	adds	r5, r6, #1
 800698e:	3a30      	subs	r2, #48	@ 0x30
 8006990:	2a09      	cmp	r2, #9
 8006992:	d903      	bls.n	800699c <_vfiprintf_r+0x1d0>
 8006994:	2b00      	cmp	r3, #0
 8006996:	d0c8      	beq.n	800692a <_vfiprintf_r+0x15e>
 8006998:	9109      	str	r1, [sp, #36]	@ 0x24
 800699a:	e7c6      	b.n	800692a <_vfiprintf_r+0x15e>
 800699c:	4341      	muls	r1, r0
 800699e:	002e      	movs	r6, r5
 80069a0:	2301      	movs	r3, #1
 80069a2:	1889      	adds	r1, r1, r2
 80069a4:	e7f1      	b.n	800698a <_vfiprintf_r+0x1be>
 80069a6:	aa07      	add	r2, sp, #28
 80069a8:	9200      	str	r2, [sp, #0]
 80069aa:	0021      	movs	r1, r4
 80069ac:	003a      	movs	r2, r7
 80069ae:	4b14      	ldr	r3, [pc, #80]	@ (8006a00 <_vfiprintf_r+0x234>)
 80069b0:	9803      	ldr	r0, [sp, #12]
 80069b2:	f7fd fd0b 	bl	80043cc <_printf_float>
 80069b6:	9004      	str	r0, [sp, #16]
 80069b8:	9b04      	ldr	r3, [sp, #16]
 80069ba:	3301      	adds	r3, #1
 80069bc:	d1d6      	bne.n	800696c <_vfiprintf_r+0x1a0>
 80069be:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80069c0:	07db      	lsls	r3, r3, #31
 80069c2:	d405      	bmi.n	80069d0 <_vfiprintf_r+0x204>
 80069c4:	89bb      	ldrh	r3, [r7, #12]
 80069c6:	059b      	lsls	r3, r3, #22
 80069c8:	d402      	bmi.n	80069d0 <_vfiprintf_r+0x204>
 80069ca:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80069cc:	f7fe fa50 	bl	8004e70 <__retarget_lock_release_recursive>
 80069d0:	89bb      	ldrh	r3, [r7, #12]
 80069d2:	065b      	lsls	r3, r3, #25
 80069d4:	d500      	bpl.n	80069d8 <_vfiprintf_r+0x20c>
 80069d6:	e71e      	b.n	8006816 <_vfiprintf_r+0x4a>
 80069d8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80069da:	e71e      	b.n	800681a <_vfiprintf_r+0x4e>
 80069dc:	aa07      	add	r2, sp, #28
 80069de:	9200      	str	r2, [sp, #0]
 80069e0:	0021      	movs	r1, r4
 80069e2:	003a      	movs	r2, r7
 80069e4:	4b06      	ldr	r3, [pc, #24]	@ (8006a00 <_vfiprintf_r+0x234>)
 80069e6:	9803      	ldr	r0, [sp, #12]
 80069e8:	f7fd ff9e 	bl	8004928 <_printf_i>
 80069ec:	e7e3      	b.n	80069b6 <_vfiprintf_r+0x1ea>
 80069ee:	46c0      	nop			@ (mov r8, r8)
 80069f0:	080085b7 	.word	0x080085b7
 80069f4:	080085bd 	.word	0x080085bd
 80069f8:	080085c1 	.word	0x080085c1
 80069fc:	080043cd 	.word	0x080043cd
 8006a00:	080067a9 	.word	0x080067a9

08006a04 <__swbuf_r>:
 8006a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a06:	0006      	movs	r6, r0
 8006a08:	000d      	movs	r5, r1
 8006a0a:	0014      	movs	r4, r2
 8006a0c:	2800      	cmp	r0, #0
 8006a0e:	d004      	beq.n	8006a1a <__swbuf_r+0x16>
 8006a10:	6a03      	ldr	r3, [r0, #32]
 8006a12:	2b00      	cmp	r3, #0
 8006a14:	d101      	bne.n	8006a1a <__swbuf_r+0x16>
 8006a16:	f7fe f925 	bl	8004c64 <__sinit>
 8006a1a:	69a3      	ldr	r3, [r4, #24]
 8006a1c:	60a3      	str	r3, [r4, #8]
 8006a1e:	89a3      	ldrh	r3, [r4, #12]
 8006a20:	071b      	lsls	r3, r3, #28
 8006a22:	d502      	bpl.n	8006a2a <__swbuf_r+0x26>
 8006a24:	6923      	ldr	r3, [r4, #16]
 8006a26:	2b00      	cmp	r3, #0
 8006a28:	d109      	bne.n	8006a3e <__swbuf_r+0x3a>
 8006a2a:	0021      	movs	r1, r4
 8006a2c:	0030      	movs	r0, r6
 8006a2e:	f000 f82b 	bl	8006a88 <__swsetup_r>
 8006a32:	2800      	cmp	r0, #0
 8006a34:	d003      	beq.n	8006a3e <__swbuf_r+0x3a>
 8006a36:	2501      	movs	r5, #1
 8006a38:	426d      	negs	r5, r5
 8006a3a:	0028      	movs	r0, r5
 8006a3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a3e:	6923      	ldr	r3, [r4, #16]
 8006a40:	6820      	ldr	r0, [r4, #0]
 8006a42:	b2ef      	uxtb	r7, r5
 8006a44:	1ac0      	subs	r0, r0, r3
 8006a46:	6963      	ldr	r3, [r4, #20]
 8006a48:	b2ed      	uxtb	r5, r5
 8006a4a:	4283      	cmp	r3, r0
 8006a4c:	dc05      	bgt.n	8006a5a <__swbuf_r+0x56>
 8006a4e:	0021      	movs	r1, r4
 8006a50:	0030      	movs	r0, r6
 8006a52:	f7ff fdcb 	bl	80065ec <_fflush_r>
 8006a56:	2800      	cmp	r0, #0
 8006a58:	d1ed      	bne.n	8006a36 <__swbuf_r+0x32>
 8006a5a:	68a3      	ldr	r3, [r4, #8]
 8006a5c:	3001      	adds	r0, #1
 8006a5e:	3b01      	subs	r3, #1
 8006a60:	60a3      	str	r3, [r4, #8]
 8006a62:	6823      	ldr	r3, [r4, #0]
 8006a64:	1c5a      	adds	r2, r3, #1
 8006a66:	6022      	str	r2, [r4, #0]
 8006a68:	701f      	strb	r7, [r3, #0]
 8006a6a:	6963      	ldr	r3, [r4, #20]
 8006a6c:	4283      	cmp	r3, r0
 8006a6e:	d004      	beq.n	8006a7a <__swbuf_r+0x76>
 8006a70:	89a3      	ldrh	r3, [r4, #12]
 8006a72:	07db      	lsls	r3, r3, #31
 8006a74:	d5e1      	bpl.n	8006a3a <__swbuf_r+0x36>
 8006a76:	2d0a      	cmp	r5, #10
 8006a78:	d1df      	bne.n	8006a3a <__swbuf_r+0x36>
 8006a7a:	0021      	movs	r1, r4
 8006a7c:	0030      	movs	r0, r6
 8006a7e:	f7ff fdb5 	bl	80065ec <_fflush_r>
 8006a82:	2800      	cmp	r0, #0
 8006a84:	d0d9      	beq.n	8006a3a <__swbuf_r+0x36>
 8006a86:	e7d6      	b.n	8006a36 <__swbuf_r+0x32>

08006a88 <__swsetup_r>:
 8006a88:	4b2d      	ldr	r3, [pc, #180]	@ (8006b40 <__swsetup_r+0xb8>)
 8006a8a:	b570      	push	{r4, r5, r6, lr}
 8006a8c:	0005      	movs	r5, r0
 8006a8e:	6818      	ldr	r0, [r3, #0]
 8006a90:	000c      	movs	r4, r1
 8006a92:	2800      	cmp	r0, #0
 8006a94:	d004      	beq.n	8006aa0 <__swsetup_r+0x18>
 8006a96:	6a03      	ldr	r3, [r0, #32]
 8006a98:	2b00      	cmp	r3, #0
 8006a9a:	d101      	bne.n	8006aa0 <__swsetup_r+0x18>
 8006a9c:	f7fe f8e2 	bl	8004c64 <__sinit>
 8006aa0:	230c      	movs	r3, #12
 8006aa2:	5ee2      	ldrsh	r2, [r4, r3]
 8006aa4:	0713      	lsls	r3, r2, #28
 8006aa6:	d423      	bmi.n	8006af0 <__swsetup_r+0x68>
 8006aa8:	06d3      	lsls	r3, r2, #27
 8006aaa:	d407      	bmi.n	8006abc <__swsetup_r+0x34>
 8006aac:	2309      	movs	r3, #9
 8006aae:	602b      	str	r3, [r5, #0]
 8006ab0:	2340      	movs	r3, #64	@ 0x40
 8006ab2:	2001      	movs	r0, #1
 8006ab4:	4313      	orrs	r3, r2
 8006ab6:	81a3      	strh	r3, [r4, #12]
 8006ab8:	4240      	negs	r0, r0
 8006aba:	e03a      	b.n	8006b32 <__swsetup_r+0xaa>
 8006abc:	0752      	lsls	r2, r2, #29
 8006abe:	d513      	bpl.n	8006ae8 <__swsetup_r+0x60>
 8006ac0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006ac2:	2900      	cmp	r1, #0
 8006ac4:	d008      	beq.n	8006ad8 <__swsetup_r+0x50>
 8006ac6:	0023      	movs	r3, r4
 8006ac8:	3344      	adds	r3, #68	@ 0x44
 8006aca:	4299      	cmp	r1, r3
 8006acc:	d002      	beq.n	8006ad4 <__swsetup_r+0x4c>
 8006ace:	0028      	movs	r0, r5
 8006ad0:	f7ff f85c 	bl	8005b8c <_free_r>
 8006ad4:	2300      	movs	r3, #0
 8006ad6:	6363      	str	r3, [r4, #52]	@ 0x34
 8006ad8:	2224      	movs	r2, #36	@ 0x24
 8006ada:	89a3      	ldrh	r3, [r4, #12]
 8006adc:	4393      	bics	r3, r2
 8006ade:	81a3      	strh	r3, [r4, #12]
 8006ae0:	2300      	movs	r3, #0
 8006ae2:	6063      	str	r3, [r4, #4]
 8006ae4:	6923      	ldr	r3, [r4, #16]
 8006ae6:	6023      	str	r3, [r4, #0]
 8006ae8:	2308      	movs	r3, #8
 8006aea:	89a2      	ldrh	r2, [r4, #12]
 8006aec:	4313      	orrs	r3, r2
 8006aee:	81a3      	strh	r3, [r4, #12]
 8006af0:	6923      	ldr	r3, [r4, #16]
 8006af2:	2b00      	cmp	r3, #0
 8006af4:	d10b      	bne.n	8006b0e <__swsetup_r+0x86>
 8006af6:	21a0      	movs	r1, #160	@ 0xa0
 8006af8:	2280      	movs	r2, #128	@ 0x80
 8006afa:	89a3      	ldrh	r3, [r4, #12]
 8006afc:	0089      	lsls	r1, r1, #2
 8006afe:	0092      	lsls	r2, r2, #2
 8006b00:	400b      	ands	r3, r1
 8006b02:	4293      	cmp	r3, r2
 8006b04:	d003      	beq.n	8006b0e <__swsetup_r+0x86>
 8006b06:	0021      	movs	r1, r4
 8006b08:	0028      	movs	r0, r5
 8006b0a:	f000 f88f 	bl	8006c2c <__smakebuf_r>
 8006b0e:	230c      	movs	r3, #12
 8006b10:	5ee2      	ldrsh	r2, [r4, r3]
 8006b12:	2101      	movs	r1, #1
 8006b14:	0013      	movs	r3, r2
 8006b16:	400b      	ands	r3, r1
 8006b18:	420a      	tst	r2, r1
 8006b1a:	d00b      	beq.n	8006b34 <__swsetup_r+0xac>
 8006b1c:	2300      	movs	r3, #0
 8006b1e:	60a3      	str	r3, [r4, #8]
 8006b20:	6963      	ldr	r3, [r4, #20]
 8006b22:	425b      	negs	r3, r3
 8006b24:	61a3      	str	r3, [r4, #24]
 8006b26:	2000      	movs	r0, #0
 8006b28:	6923      	ldr	r3, [r4, #16]
 8006b2a:	4283      	cmp	r3, r0
 8006b2c:	d101      	bne.n	8006b32 <__swsetup_r+0xaa>
 8006b2e:	0613      	lsls	r3, r2, #24
 8006b30:	d4be      	bmi.n	8006ab0 <__swsetup_r+0x28>
 8006b32:	bd70      	pop	{r4, r5, r6, pc}
 8006b34:	0791      	lsls	r1, r2, #30
 8006b36:	d400      	bmi.n	8006b3a <__swsetup_r+0xb2>
 8006b38:	6963      	ldr	r3, [r4, #20]
 8006b3a:	60a3      	str	r3, [r4, #8]
 8006b3c:	e7f3      	b.n	8006b26 <__swsetup_r+0x9e>
 8006b3e:	46c0      	nop			@ (mov r8, r8)
 8006b40:	20000038 	.word	0x20000038

08006b44 <_raise_r>:
 8006b44:	b570      	push	{r4, r5, r6, lr}
 8006b46:	0004      	movs	r4, r0
 8006b48:	000d      	movs	r5, r1
 8006b4a:	291f      	cmp	r1, #31
 8006b4c:	d904      	bls.n	8006b58 <_raise_r+0x14>
 8006b4e:	2316      	movs	r3, #22
 8006b50:	6003      	str	r3, [r0, #0]
 8006b52:	2001      	movs	r0, #1
 8006b54:	4240      	negs	r0, r0
 8006b56:	bd70      	pop	{r4, r5, r6, pc}
 8006b58:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d004      	beq.n	8006b68 <_raise_r+0x24>
 8006b5e:	008a      	lsls	r2, r1, #2
 8006b60:	189b      	adds	r3, r3, r2
 8006b62:	681a      	ldr	r2, [r3, #0]
 8006b64:	2a00      	cmp	r2, #0
 8006b66:	d108      	bne.n	8006b7a <_raise_r+0x36>
 8006b68:	0020      	movs	r0, r4
 8006b6a:	f000 f831 	bl	8006bd0 <_getpid_r>
 8006b6e:	002a      	movs	r2, r5
 8006b70:	0001      	movs	r1, r0
 8006b72:	0020      	movs	r0, r4
 8006b74:	f000 f81a 	bl	8006bac <_kill_r>
 8006b78:	e7ed      	b.n	8006b56 <_raise_r+0x12>
 8006b7a:	2a01      	cmp	r2, #1
 8006b7c:	d009      	beq.n	8006b92 <_raise_r+0x4e>
 8006b7e:	1c51      	adds	r1, r2, #1
 8006b80:	d103      	bne.n	8006b8a <_raise_r+0x46>
 8006b82:	2316      	movs	r3, #22
 8006b84:	6003      	str	r3, [r0, #0]
 8006b86:	2001      	movs	r0, #1
 8006b88:	e7e5      	b.n	8006b56 <_raise_r+0x12>
 8006b8a:	2100      	movs	r1, #0
 8006b8c:	0028      	movs	r0, r5
 8006b8e:	6019      	str	r1, [r3, #0]
 8006b90:	4790      	blx	r2
 8006b92:	2000      	movs	r0, #0
 8006b94:	e7df      	b.n	8006b56 <_raise_r+0x12>
	...

08006b98 <raise>:
 8006b98:	b510      	push	{r4, lr}
 8006b9a:	4b03      	ldr	r3, [pc, #12]	@ (8006ba8 <raise+0x10>)
 8006b9c:	0001      	movs	r1, r0
 8006b9e:	6818      	ldr	r0, [r3, #0]
 8006ba0:	f7ff ffd0 	bl	8006b44 <_raise_r>
 8006ba4:	bd10      	pop	{r4, pc}
 8006ba6:	46c0      	nop			@ (mov r8, r8)
 8006ba8:	20000038 	.word	0x20000038

08006bac <_kill_r>:
 8006bac:	2300      	movs	r3, #0
 8006bae:	b570      	push	{r4, r5, r6, lr}
 8006bb0:	4d06      	ldr	r5, [pc, #24]	@ (8006bcc <_kill_r+0x20>)
 8006bb2:	0004      	movs	r4, r0
 8006bb4:	0008      	movs	r0, r1
 8006bb6:	0011      	movs	r1, r2
 8006bb8:	602b      	str	r3, [r5, #0]
 8006bba:	f7fb ffe2 	bl	8002b82 <_kill>
 8006bbe:	1c43      	adds	r3, r0, #1
 8006bc0:	d103      	bne.n	8006bca <_kill_r+0x1e>
 8006bc2:	682b      	ldr	r3, [r5, #0]
 8006bc4:	2b00      	cmp	r3, #0
 8006bc6:	d000      	beq.n	8006bca <_kill_r+0x1e>
 8006bc8:	6023      	str	r3, [r4, #0]
 8006bca:	bd70      	pop	{r4, r5, r6, pc}
 8006bcc:	200007bc 	.word	0x200007bc

08006bd0 <_getpid_r>:
 8006bd0:	b510      	push	{r4, lr}
 8006bd2:	f7fb ffd0 	bl	8002b76 <_getpid>
 8006bd6:	bd10      	pop	{r4, pc}

08006bd8 <__swhatbuf_r>:
 8006bd8:	b570      	push	{r4, r5, r6, lr}
 8006bda:	000e      	movs	r6, r1
 8006bdc:	001d      	movs	r5, r3
 8006bde:	230e      	movs	r3, #14
 8006be0:	5ec9      	ldrsh	r1, [r1, r3]
 8006be2:	0014      	movs	r4, r2
 8006be4:	b096      	sub	sp, #88	@ 0x58
 8006be6:	2900      	cmp	r1, #0
 8006be8:	da0c      	bge.n	8006c04 <__swhatbuf_r+0x2c>
 8006bea:	89b2      	ldrh	r2, [r6, #12]
 8006bec:	2380      	movs	r3, #128	@ 0x80
 8006bee:	0011      	movs	r1, r2
 8006bf0:	4019      	ands	r1, r3
 8006bf2:	421a      	tst	r2, r3
 8006bf4:	d114      	bne.n	8006c20 <__swhatbuf_r+0x48>
 8006bf6:	2380      	movs	r3, #128	@ 0x80
 8006bf8:	00db      	lsls	r3, r3, #3
 8006bfa:	2000      	movs	r0, #0
 8006bfc:	6029      	str	r1, [r5, #0]
 8006bfe:	6023      	str	r3, [r4, #0]
 8006c00:	b016      	add	sp, #88	@ 0x58
 8006c02:	bd70      	pop	{r4, r5, r6, pc}
 8006c04:	466a      	mov	r2, sp
 8006c06:	f000 f853 	bl	8006cb0 <_fstat_r>
 8006c0a:	2800      	cmp	r0, #0
 8006c0c:	dbed      	blt.n	8006bea <__swhatbuf_r+0x12>
 8006c0e:	23f0      	movs	r3, #240	@ 0xf0
 8006c10:	9901      	ldr	r1, [sp, #4]
 8006c12:	021b      	lsls	r3, r3, #8
 8006c14:	4019      	ands	r1, r3
 8006c16:	4b04      	ldr	r3, [pc, #16]	@ (8006c28 <__swhatbuf_r+0x50>)
 8006c18:	18c9      	adds	r1, r1, r3
 8006c1a:	424b      	negs	r3, r1
 8006c1c:	4159      	adcs	r1, r3
 8006c1e:	e7ea      	b.n	8006bf6 <__swhatbuf_r+0x1e>
 8006c20:	2100      	movs	r1, #0
 8006c22:	2340      	movs	r3, #64	@ 0x40
 8006c24:	e7e9      	b.n	8006bfa <__swhatbuf_r+0x22>
 8006c26:	46c0      	nop			@ (mov r8, r8)
 8006c28:	ffffe000 	.word	0xffffe000

08006c2c <__smakebuf_r>:
 8006c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c2e:	2602      	movs	r6, #2
 8006c30:	898b      	ldrh	r3, [r1, #12]
 8006c32:	0005      	movs	r5, r0
 8006c34:	000c      	movs	r4, r1
 8006c36:	b085      	sub	sp, #20
 8006c38:	4233      	tst	r3, r6
 8006c3a:	d007      	beq.n	8006c4c <__smakebuf_r+0x20>
 8006c3c:	0023      	movs	r3, r4
 8006c3e:	3347      	adds	r3, #71	@ 0x47
 8006c40:	6023      	str	r3, [r4, #0]
 8006c42:	6123      	str	r3, [r4, #16]
 8006c44:	2301      	movs	r3, #1
 8006c46:	6163      	str	r3, [r4, #20]
 8006c48:	b005      	add	sp, #20
 8006c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c4c:	ab03      	add	r3, sp, #12
 8006c4e:	aa02      	add	r2, sp, #8
 8006c50:	f7ff ffc2 	bl	8006bd8 <__swhatbuf_r>
 8006c54:	9f02      	ldr	r7, [sp, #8]
 8006c56:	9001      	str	r0, [sp, #4]
 8006c58:	0039      	movs	r1, r7
 8006c5a:	0028      	movs	r0, r5
 8006c5c:	f7ff f80c 	bl	8005c78 <_malloc_r>
 8006c60:	2800      	cmp	r0, #0
 8006c62:	d108      	bne.n	8006c76 <__smakebuf_r+0x4a>
 8006c64:	220c      	movs	r2, #12
 8006c66:	5ea3      	ldrsh	r3, [r4, r2]
 8006c68:	059a      	lsls	r2, r3, #22
 8006c6a:	d4ed      	bmi.n	8006c48 <__smakebuf_r+0x1c>
 8006c6c:	2203      	movs	r2, #3
 8006c6e:	4393      	bics	r3, r2
 8006c70:	431e      	orrs	r6, r3
 8006c72:	81a6      	strh	r6, [r4, #12]
 8006c74:	e7e2      	b.n	8006c3c <__smakebuf_r+0x10>
 8006c76:	2380      	movs	r3, #128	@ 0x80
 8006c78:	89a2      	ldrh	r2, [r4, #12]
 8006c7a:	6020      	str	r0, [r4, #0]
 8006c7c:	4313      	orrs	r3, r2
 8006c7e:	81a3      	strh	r3, [r4, #12]
 8006c80:	9b03      	ldr	r3, [sp, #12]
 8006c82:	6120      	str	r0, [r4, #16]
 8006c84:	6167      	str	r7, [r4, #20]
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	d00c      	beq.n	8006ca4 <__smakebuf_r+0x78>
 8006c8a:	0028      	movs	r0, r5
 8006c8c:	230e      	movs	r3, #14
 8006c8e:	5ee1      	ldrsh	r1, [r4, r3]
 8006c90:	f000 f820 	bl	8006cd4 <_isatty_r>
 8006c94:	2800      	cmp	r0, #0
 8006c96:	d005      	beq.n	8006ca4 <__smakebuf_r+0x78>
 8006c98:	2303      	movs	r3, #3
 8006c9a:	89a2      	ldrh	r2, [r4, #12]
 8006c9c:	439a      	bics	r2, r3
 8006c9e:	3b02      	subs	r3, #2
 8006ca0:	4313      	orrs	r3, r2
 8006ca2:	81a3      	strh	r3, [r4, #12]
 8006ca4:	89a3      	ldrh	r3, [r4, #12]
 8006ca6:	9a01      	ldr	r2, [sp, #4]
 8006ca8:	4313      	orrs	r3, r2
 8006caa:	81a3      	strh	r3, [r4, #12]
 8006cac:	e7cc      	b.n	8006c48 <__smakebuf_r+0x1c>
	...

08006cb0 <_fstat_r>:
 8006cb0:	2300      	movs	r3, #0
 8006cb2:	b570      	push	{r4, r5, r6, lr}
 8006cb4:	4d06      	ldr	r5, [pc, #24]	@ (8006cd0 <_fstat_r+0x20>)
 8006cb6:	0004      	movs	r4, r0
 8006cb8:	0008      	movs	r0, r1
 8006cba:	0011      	movs	r1, r2
 8006cbc:	602b      	str	r3, [r5, #0]
 8006cbe:	f7fb ffc0 	bl	8002c42 <_fstat>
 8006cc2:	1c43      	adds	r3, r0, #1
 8006cc4:	d103      	bne.n	8006cce <_fstat_r+0x1e>
 8006cc6:	682b      	ldr	r3, [r5, #0]
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	d000      	beq.n	8006cce <_fstat_r+0x1e>
 8006ccc:	6023      	str	r3, [r4, #0]
 8006cce:	bd70      	pop	{r4, r5, r6, pc}
 8006cd0:	200007bc 	.word	0x200007bc

08006cd4 <_isatty_r>:
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	b570      	push	{r4, r5, r6, lr}
 8006cd8:	4d06      	ldr	r5, [pc, #24]	@ (8006cf4 <_isatty_r+0x20>)
 8006cda:	0004      	movs	r4, r0
 8006cdc:	0008      	movs	r0, r1
 8006cde:	602b      	str	r3, [r5, #0]
 8006ce0:	f7fb ffbd 	bl	8002c5e <_isatty>
 8006ce4:	1c43      	adds	r3, r0, #1
 8006ce6:	d103      	bne.n	8006cf0 <_isatty_r+0x1c>
 8006ce8:	682b      	ldr	r3, [r5, #0]
 8006cea:	2b00      	cmp	r3, #0
 8006cec:	d000      	beq.n	8006cf0 <_isatty_r+0x1c>
 8006cee:	6023      	str	r3, [r4, #0]
 8006cf0:	bd70      	pop	{r4, r5, r6, pc}
 8006cf2:	46c0      	nop			@ (mov r8, r8)
 8006cf4:	200007bc 	.word	0x200007bc

08006cf8 <_init>:
 8006cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cfa:	46c0      	nop			@ (mov r8, r8)
 8006cfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cfe:	bc08      	pop	{r3}
 8006d00:	469e      	mov	lr, r3
 8006d02:	4770      	bx	lr

08006d04 <_fini>:
 8006d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d06:	46c0      	nop			@ (mov r8, r8)
 8006d08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006d0a:	bc08      	pop	{r3}
 8006d0c:	469e      	mov	lr, r3
 8006d0e:	4770      	bx	lr
